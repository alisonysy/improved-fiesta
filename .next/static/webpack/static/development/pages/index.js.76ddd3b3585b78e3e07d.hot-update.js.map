{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.76ddd3b3585b78e3e07d.hot-update.js","sources":["webpack:///./components/targetConfig.js"],"sourcesContent":["import { Card, Collapsible, ChoiceList, TextField,Form, FormLayout } from '@shopify/polaris';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport SelectCountries from '../snippets/selectCountries';\r\nimport DisplaySchedule from '../snippets/displaySchedule';\r\nimport SectionHead from '../snippets/sectionHead';\r\n\r\nfunction IncludePage(props) {\r\n  const [selected, setSelected] = useState(['all']);\r\n  const [urlInp, setUrlInp] = useState('');\r\n  const [urlExc, setUrlExc] = useState('');\r\n\r\n  const handleUrlInp = useCallback(\r\n    (value) => {\r\n      setUrlInp(value);\r\n    },\r\n    [],\r\n  );\r\n  const handleUrlExc = useCallback(\r\n    (val) => {\r\n      setUrlExc(val);\r\n    },\r\n    []\r\n  );\r\n\r\n  const renderUrlInp = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField\r\n          label=\"\"\r\n          labelHidden\r\n          onChange={handleUrlInp}\r\n          value={urlInp}\r\n        />\r\n      ),\r\n    [handleUrlInp, urlInp],\r\n  );\r\n\r\n  const renderPageToExc = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField \r\n          labelHidden\r\n          onChange={handleUrlExc}\r\n          value={urlExc}\r\n        />\r\n      ),\r\n    [handleUrlExc, urlExc]\r\n  )\r\n\r\n  useEffect(()=>{\r\n    let sl = selected[0];\r\n    switch(sl){\r\n      case 'all':\r\n        props.handleDisplayOnPage('all',undefined);\r\n        break;\r\n      case 'homepage':\r\n        props.handleDisplayOnPage('home',undefined);\r\n        break;\r\n      case 'url':\r\n        props.handleDisplayOnPage('url',urlInp);\r\n        break;\r\n      case 'exclude':\r\n        props.handleDisplayOnPage('exclude',urlExc);\r\n        break;\r\n    }\r\n  },[urlInp,urlExc,selected])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <ChoiceList\r\n        title=\"Display on page:\"\r\n        choices={[\r\n          {label: 'All pages', value: 'all'},\r\n          {label: 'Homepage only', value: 'homepage'},\r\n          {label: 'Only on page with URL', value: 'url',renderChildren:renderUrlInp},\r\n          {label:'Pages to exclude',value:'exclude',renderChildren:renderPageToExc}\r\n        ]}\r\n        selected={selected}\r\n        onChange={(nw) => setSelected(nw)}\r\n      />\r\n    </FormLayout.Group>\r\n  );\r\n}\r\n\r\nclass TargetConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sectionActive:true,\r\n    };\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n          <FormLayout>\r\n            <SectionHead \r\n              handleToggle={(active) => this.setState({sectionActive:active})}\r\n              headerTxt=\"Target configuration\"\r\n              sectionActive={this.state.sectionActive}\r\n            />\r\n            <Collapsible open={this.state.sectionActive} >   \r\n              <IncludePage handleDisplayOnPage={(sec,url)=> this.props.handleDisplayOnPage(sec,url)}/>\r\n              <SelectCountries shipsToCountries={this.props.shipsToCountries} handleSelectedTargets={this.props.handleSelectedTargets}/>\r\n              <DisplaySchedule handleTimeSetting={this.props.handleTimeSetting}/>\r\n            </Collapsible>  \r\n          </FormLayout>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TargetConfigPage;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AAGA;AAEA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAFA;AAYA;AACA;AAGA;AACA;AACA;AAHA;AAFA;AAWA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAZA;AAcA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AATA;AAaA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAKA;;;;AAzBA;AACA;AA2BA;;;;A","sourceRoot":""}