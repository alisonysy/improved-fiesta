{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.6f4c12fd0065e1ccb3c0.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Layout, Page, ButtonGroup, Button, Toast, Frame } from '@shopify/polaris';\r\nimport { useState, useCallback } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, useSubscription } from 'react-apollo';\r\nimport store from 'store-js';\r\n\r\nimport BarList from '../components/barList';\r\nimport TemplateStyle from '../components/templateStyle';\r\nimport ContentConfigPage from '../components/contentConfig';\r\nimport StyleConfigPage from '../components/styleConfig';\r\nimport TargetConfigPage from '../components/targetConfig';\r\nimport CustomCodePage from '../components/customCode';\r\nimport PreviewPage from '../components/preview';\r\n\r\n\r\nconst INJECT_SCRIPT = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SaveUserPreference(props){\r\n  const [injectScriptTag, {data,error}] = useMutation(INJECT_SCRIPT);\r\n\r\n  const handleInjectionSuccess = (data,b) =>{\r\n    console.log(data);\r\n    setTimeout((b) => {\r\n      b='dismiss'\r\n    }, 2500);\r\n    return (\r\n      b === 'success'? \r\n      <Toast\r\n        content=\"Saved successfully.\"\r\n        onDismiss={() => {}}\r\n      />\r\n      :\r\n      b === 'error' ?\r\n      <Toast\r\n        content=\"Something went wrong.\"\r\n        onDismiss={ () => {}}\r\n      />\r\n      :\r\n      null\r\n    )\r\n  };\r\n  \r\n  return (\r\n    <div style={{marginTop:'50px',height:'100px'}}>\r\n      <ButtonGroup>\r\n        <Button\r\n          onClick = {()=>{\r\n            props.handleEdit();\r\n          }}\r\n        >Cancel</Button>\r\n        <Button primary \r\n          onClick={(e)=>{\r\n            e.preventDefault();\r\n            console.log('calling useMutation hooks');\r\n            injectScriptTag({\r\n              variables:{\r\n                input:{\r\n                  displayScope:'ONLINE_STORE',\r\n                  src:'https://8a9648bd.ngrok.io/_next/static/chunks/topBarInjection.js'\r\n                }\r\n              }\r\n            })\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Frame>\r\n        { data && handleInjectionSuccess(data,'success')}\r\n        { error &&  handleInjectionSuccess(error,'error') }\r\n      </Frame>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Index extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      onEdit:false,\r\n      barTxtConfig:{initialMsg1:'',prgMsg1:'',achievedMsg:''},\r\n      barFrShGl:30,\r\n      barLink:{url:'',openNew:false},\r\n      barPosition:'',\r\n      bgImg:{},\r\n      styleConfig:{colorConfig:{bgColor:'#000',txtColor:'#b31219',bgOpacity:100,specialColor:'#fff'},fontConfig:{fontFamily:'sans-serif'}}\r\n    };\r\n    this.baseState = this.state;\r\n    this.handleEditId = this.handleEditId.bind(this);\r\n  }\r\n\r\n  handleEditId(id){\r\n    console.log(id);\r\n    this.setState({onEdit:true});\r\n  }\r\n\r\n  render(){\r\n    const emptyState = !store.get('ids');\r\n    const {barTxtConfig,barFrShGl,barLink,styleConfig,bgImg} = this.state;\r\n    return (\r\n      <Page>\r\n        <Layout.Section>\r\n          <BarList handleEditId={(id) => this.handleEditId(id)}/>\r\n          {\r\n            this.state.onEdit?\r\n            <div style={{marginTop:'3em'}}>\r\n              <TemplateStyle />\r\n              <PreviewPage \r\n                contentConfig={{barTxtConfig,barFrShGl,barLink}} \r\n                styleConfig = {{...styleConfig}}\r\n                bgImg = {bgImg}\r\n              />\r\n              <ContentConfigPage \r\n                handleContentConfig_msg={(msg)=> this.setState({barTxtConfig:{...this.barTxtConfig,...msg}})} \r\n                handleContentConfig_goal={(gl) => this.setState({barFrShGl:gl})}\r\n                handleContentConfig_link={(val)=> this.setState({barLink:{...this.state.barLink,...val}})}\r\n              />\r\n              <StyleConfigPage \r\n                handleStyleConfig={(colorCf,fontCf) => {\r\n                  this.setState({styleConfig:{colorConfig:colorCf,fontConfig:fontCf}})\r\n                }}\r\n                uploadBgImg={(bgFile) => this.setState({bgImg:bgFile})}\r\n              />\r\n              <TargetConfigPage />\r\n              <CustomCodePage />\r\n              <SaveUserPreference handleEdit={()=> {\r\n                  this.setState(this.baseState);\r\n                }}\r\n              />\r\n            </div>\r\n            :\r\n            null\r\n          }\r\n        </Layout.Section>\r\n      </Page>\r\n    )\r\n  };\r\n\r\n};\r\n\r\nexport default Index;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AADA;AAQA;AAZA;AAuBA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAUA;AACA;AAbA;AAcA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAQA;AACA;AACA;AAFA;AAWA;;;;AA9DA;AACA;AA+DA;AAEA;;;;A","sourceRoot":""}