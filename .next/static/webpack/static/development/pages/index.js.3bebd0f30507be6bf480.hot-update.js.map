{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.3bebd0f30507be6bf480.hot-update.js","sources":["webpack:///./snippets/previewBar.js"],"sourcesContent":["import '../css/fonts.css';\r\n// import '../snippets/demo.css';\r\n\r\nclass PreviewBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      ...props.barConfig,\r\n      styleCode:'',\r\n    };\r\n    this.htmlRef = React.createRef();\r\n    this.firstLineRefwG = React.createRef();\r\n    this.firstLineRefGA = React.createRef();\r\n    this.closeBtn = React.createRef();\r\n    this.topBar = React.createRef();\r\n    this.injectHtml = this.injectHtml.bind(this);\r\n    this.setAnimation = this.setAnimation.bind(this);\r\n    this.renderBarFirstLine = this.renderBarFirstLine.bind(this);\r\n    this.renderInnerBar = this.renderInnerBar.bind(this);\r\n    this.handleLinkContainer = this.handleLinkContainer.bind(this);\r\n  }\r\n\r\n  setAnimation(el,childToQuery){\r\n    let keyframeEl = document.createElement('style');\r\n    keyframeEl.textContent = `\r\n      @keyframes infiniteSlide{\r\n          from {\r\n            margin-top:0\r\n          }\r\n          to {\r\n            margin-top: -22px\r\n          }\r\n      }\r\n    `;\r\n    el.insertAdjacentElement('afterbegin',keyframeEl);\r\n    el.setAttribute('style',\"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s;\");\r\n    el.addEventListener('animationend',function(){\r\n      el.style.animation = '';\r\n      void el.offsetWidth;\r\n      let elNode = el.children[0].parentNode;\r\n      let firstChild = elNode.querySelector(childToQuery);\r\n      let clonedFirstChild = firstChild.cloneNode(true);\r\n      elNode.insertAdjacentElement('beforeend',clonedFirstChild);\r\n      elNode.removeChild(firstChild);\r\n      el.style.animation = 'infiniteSlide 2.5s';\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    // handle injected html\r\n    this.handleLinkContainer(this.htmlRef);\r\n    this.handleLinkContainer(this.firstLineRefwG);\r\n    this.handleLinkContainer(this.firstLineRefGA);\r\n\r\n    \r\n    // handle closing action\r\n    let closeBtn = this.closeBtn.current;\r\n    closeBtn.addEventListener('click',(e)=>{\r\n      // #todo add script when appending to page to hide the bar element\r\n    })\r\n  }\r\n\r\n  handleLinkContainer(sp){\r\n    if(sp.current){\r\n      let injectedHtmlElCollection = sp.current.children; // object\r\n      for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n        let el = injectedHtmlElCollection[n];\r\n        if(el.classList.contains('link-container')){\r\n          el.setAttribute(\"style\",\"height:22px;overflow:hidden;line-height:22px;\");\r\n          if(el.children[0] && el.children[0].tagName==='UL'){\r\n            let ul = el.children[0];\r\n            ul.setAttribute('style',\"margin:0;\");\r\n            if(ul.children[1]){\r\n              this.setAnimation(ul,'li');\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps,prevState){\r\n    let ifChange = false;\r\n    console.log(nextProps.barConfig.goal);\r\n    for(var [key,val] of Object.entries(nextProps.barConfig)){\r\n      if(nextProps.barConfig[key] !== prevState[key]){\r\n        console.log('-----------------------',nextProps.barConfig[key])\r\n        ifChange = true;\r\n      }\r\n    }\r\n    if(nextProps.codes.customCode.style && nextProps.codes.customCode.style !== prevState.styleCode){\r\n      PreviewBar.injectStylesheet(nextProps.barConfig,nextProps.codes.customCode.style);\r\n      return {...prevState,styleCode:nextProps.codes.customCode.style}\r\n    }\r\n    if(ifChange){\r\n      PreviewBar.injectStylesheet(nextProps.barConfig,nextProps.codes.customCode.style);\r\n      return {...prevState,...nextProps.barConfig};\r\n    }else{\r\n      return null;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.handleLinkContainer(this.htmlRef);\r\n    this.handleLinkContainer(this.firstLineRefwG);\r\n    this.handleLinkContainer(this.firstLineRefGA);\r\n    console.log('finished top bar',this.topBar.current);\r\n  }\r\n\r\n\r\n  injectHtml(html){\r\n    let style_basic = {textAlign:'center'};\r\n    return (\r\n      <span dangerouslySetInnerHTML={{__html:html}} ref={this.htmlRef} style={style_basic}></span>\r\n    )\r\n  }\r\n\r\n  renderBarFirstLine(barConfig){\r\n    const {goal,inpTxt,spColor} = barConfig;\r\n    return (\r\n      <span><span dangerouslySetInnerHTML={{__html:inpTxt}} ref={this.firstLineRefwG}></span><span style={{color:spColor,fontWeight:400}}>${goal}</span></span>\r\n    )\r\n  }\r\n\r\n  renderInnerBar(barConfig){\r\n    const {inpTxt,addedHtml,goal} = barConfig;\r\n    return (\r\n      <div \r\n        id=\"ptk_bar\"\r\n        className=\"ptkBar\"\r\n      >\r\n        { goal && Math.abs(goal) > -1?\r\n          this.renderBarFirstLine(barConfig)\r\n          :\r\n          <span dangerouslySetInnerHTML={{__html:inpTxt}} ref={this.firstLineRefGA}></span>\r\n        }\r\n        { addedHtml?\r\n            this.injectHtml(addedHtml) \r\n            :\r\n            null\r\n        }\r\n        <div style={{position:'absolute',top:'8px',right:'8px',cursor:'pointer'}} ref={this.closeBtn}>X</div>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  static injectStylesheet(barConfig,styleCode){\r\n    const {ftColor,opacity,bgImg,fontFamily,paddingUpDown,fontSize} = barConfig;\r\n    const bar = document.getElementById('ptk_bar');\r\n    console.log('inject stylesheet executed',bar);\r\n    let {bgColor} = barConfig,imgSize=bgImg.size,imgUrl;\r\n    let padding = paddingUpDown? `${paddingUpDown}px 5px` : '8px 5px';\r\n\r\n    if(opacity.toString() !== '100'){\r\n      bgColor = PreviewBar._hexToRgba(bgColor,opacity);\r\n    }\r\n    \r\n    if(imgSize){\r\n      imgUrl = 'url(\"'+window.URL.createObjectURL(bgImg)+'\")';\r\n    }\r\n\r\n    let styleSheet = document.createElement('style');\r\n    let al_stylesheet = bar.parentElement.querySelector('style');\r\n    styleSheet.textContent = `\r\n      #ptk_bar{\r\n        padding:${padding};\r\n        font-size:${fontSize? fontSize +'px' : '18px'};\r\n        line-height:22.5px;\r\n        text-align:center;\r\n        position:relative;\r\n        background-color:${bgColor};\r\n        color:${ftColor};\r\n        background-image:${imgUrl};\r\n        font-family:${fontFamily};\r\n      }\r\n    `;\r\n    if(styleCode && styleCode.length!==0){\r\n      styleSheet.textContent += styleCode;\r\n    }\r\n    if(!al_stylesheet){\r\n      console.log('no existi')\r\n      bar.parentNode.insertBefore(styleSheet,bar);\r\n    }else{\r\n      bar.parentNode.replaceChild(styleSheet,al_stylesheet);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  static _hexToRgba(h,op){\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length == 4) {\r\n      r = \"0x\" + h[1] + h[1];\r\n      g = \"0x\" + h[2] + h[2];\r\n      b = \"0x\" + h[3] + h[3];\r\n\r\n    // 6 digits\r\n    } else if (h.length == 7) {\r\n      r = \"0x\" + h[1] + h[2];\r\n      g = \"0x\" + h[3] + h[4];\r\n      b = \"0x\" + h[5] + h[6];\r\n    }\r\n    \r\n    return \"rgba(\"+ +r + \",\" + +g + \",\" + +b + \",\" + op/100 + \")\";\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={{margin:'20px 0'}}>\r\n        <div ref={this.topBar}>\r\n          { this.props.barLink.url.length !== 0 ?\r\n            <a href={this.props.barLink.url} target={this.props.barLink.openNew? \"_blank\" : \"_self\"} style={{textDecoration:'none',color:'initial'}}>\r\n              { this.renderInnerBar(this.props.barConfig) }\r\n            </a>\r\n            :\r\n            this.renderInnerBar(this.props.barConfig)\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewBar;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAgBA;AACA;;;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAuBA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAgEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;AA7IA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA8CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA3MA;AACA;AA6NA;;;;A","sourceRoot":""}