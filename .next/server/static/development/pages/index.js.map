{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/barList.js","webpack:///./components/contentConfig.js","webpack:///./components/customCode.js","webpack:///./components/preview.js","webpack:///./components/styleConfig.js","webpack:///./components/targetConfig.js","webpack:///./components/templateStyle.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-float.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./pages/index.js","webpack:///./snippets/displaySchedule.js","webpack:///./snippets/imageDropZone.js","webpack:///./snippets/previewBar.js","webpack:///./snippets/selectCountries.js","webpack:///external \"@shopify/polaris\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/parse-float\"","webpack:///external \"core-js/library/fn/parse-int\"","webpack:///external \"graphql-tag\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"store-js\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Banner, Card } from '@shopify/polaris';\r\n\r\nconst GET_CLIENT_ID = gql`\r\n  query {\r\n    shop{\r\n      id\r\n      name\r\n      shipsToCountries\r\n    }\r\n  }\r\n`;\r\n\r\nclass BarList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      shippingCountries:[]\r\n    };\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleTargetCountries = this.handleTargetCountries.bind(this);\r\n  }\r\n\r\n  handleEdit(e,id){\r\n    console.log(id)\r\n  }\r\n\r\n  handleTargetCountries(c){\r\n    this.setState({shippingCountries:c},function(){\r\n      this.props.handleTargetCountries(c);\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Query query={GET_CLIENT_ID}>\r\n        {({data, loading, error}) => {\r\n          if(loading) return <div>Loading...</div>;\r\n          if(error) return <Banner status=\"critical\">{error.message}</Banner>\r\n          console.log(data);\r\n          if(!this.state.shippingCountries[0]){\r\n            this.handleTargetCountries(data.shop.shipsToCountries);\r\n          }\r\n          // #toUpdate: to fetch from database\r\n          const arrs = [{'name':'ijji','geo':'china','achievements':253,'id':2},{'name':'fe','geo':'nz','achievements':76,'id':3}]\r\n          \r\n          return (\r\n            <Card>\r\n              <table style={{width:'100%',padding:'2%'}}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Geo target</th>\r\n                    <th>Actions</th>\r\n                    <th>Achievements</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    arrs.map((item, idx)=>{\r\n                      return (\r\n                        <tr style={{textAlign:'center',lineHeight:3}} key={idx}>\r\n                          <td>{item.name}</td>\r\n                          <td>{item.geo}</td>\r\n                          <td><button onClick={(e) => this.props.handleEditId(item.id)} style={{borderColor:'transparent',background:'#000',color:'#fff',borderRadius:5}}>Edit</button></td>\r\n                          <td>{item.achievements}</td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n                  }\r\n                </tbody>\r\n              </table>\r\n            </Card>\r\n          )\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BarList;","import { Card, TextField, DisplayText, Stack, Form, FormLayout, Button, Select, Checkbox, ChoiceList } from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\n\r\nfunction NameField(props){\r\n  const [name,setName] = useState('');\r\n\r\n  useEffect(()=>{\r\n    props.handleName(name);\r\n  },[name]);\r\n\r\n  return ( \r\n    <FormLayout.Group>\r\n      <TextField label=\"Name: \" value={name} onChange={ (nw) => setName(nw)} />\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction FreeShippingGoal(props){\r\n  const [goal,setGoal] = useState(30);\r\n  const _handleGoalChange = function(newGoal){\r\n    setGoal(newGoal);\r\n    props.handleGoalChange(newGoal)\r\n  }\r\n  return (\r\n    <FormLayout.Group>\r\n      <TextField \r\n        label=\"Free Shipping Goal: \" \r\n        type=\"number\"\r\n        value={goal} \r\n        onChange={(nw) => _handleGoalChange(nw)} \r\n      />\r\n    </FormLayout.Group>\r\n  );\r\n}\r\n\r\nfunction InitialMsg(props){\r\n  const [msg,setMsg] = useState('Free Shipping on All Orders Over ');\r\n  const [added,setAdded] = useState('');\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({initialMsg1:msg,initialMsg2:added});\r\n  },[msg,added])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <Stack alignment=\"center\" distribution=\"fill\">\r\n        <TextField\r\n          label=\"Initial message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Display when cart is empty\"\r\n        />\r\n        <div style={{fontSize:'18px'}}>{props.currency} {props.goal}</div>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction ProgressMsg(props){\r\n  const [msg,setMsg] = useState('Only ');\r\n  const [added,setAdded] = useState(' away from free shipping');\r\n  const gl = props.goal;\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({prgMsg1:msg,prgMsg2:added})\r\n  },[msg,added])\r\n\r\n  return (\r\n    <FormLayout.Group condensed>\r\n      <Stack alignment=\"center\" distribution=\"fill\">\r\n        <TextField\r\n          label=\"Progress message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Displays when cart value is less than the goal\"\r\n        />\r\n        <div style={{fontSize:'18px'}}>{props.currency} {gl-1}</div>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction GoalAchieved(props){\r\n  const [msg,setMsg] = useState('Free Shipping Worldwide');\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({achievedMsg:msg})\r\n  },[msg])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <TextField\r\n        label=\"Goal Achieved Message: \"\r\n        type=\"text\"\r\n        value={msg}\r\n        onChange={(nw) => setMsg(nw)}\r\n        helpText=\"Displays when cart value is greater than goal\"\r\n      />\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction AddLinkToBar(props){\r\n  const [havLink,setHavLink] = useState(false);\r\n  const [url,setUrl] = useState('');\r\n  const [checkbox,setChecked] = useState(false);\r\n\r\n  const opts=[\r\n    {label:'Off',value:false},\r\n    {label:'On',value:true}\r\n  ]\r\n\r\n  const handleSwitch = (val) => {\r\n    val = val === 'true'? true : false;\r\n    setHavLink(val);\r\n    if(!val){\r\n      props.handleBarLinkChange('');\r\n    }\r\n  }\r\n\r\n  const handleCheckbox = (val) => {\r\n    setChecked(val);\r\n    props.handleBarLinkChange(val);\r\n  }\r\n\r\n  return(\r\n    <FormLayout.Group>\r\n      <Select \r\n        label=\"Add Link to the Bar: \"\r\n        options={opts}\r\n        onChange={handleSwitch}\r\n        value={havLink}\r\n      />\r\n      {\r\n        havLink?\r\n        <FormLayout.Group>\r\n          <TextField\r\n            label=\"Link URL: \"\r\n            type=\"url\"\r\n            value={url}\r\n            onChange={(nw) => {setUrl(nw); props.handleBarLinkChange(nw);}}\r\n            helpText=\"This address will be visited after clicking the bar\"\r\n          />\r\n          <Checkbox \r\n            label=\"Open the link in a NEW tab when clicked\"\r\n            checked={checkbox}\r\n            onChange={(nw) => handleCheckbox(nw)}\r\n          />\r\n        </FormLayout.Group>\r\n        :\r\n        null\r\n      }\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction SetPosition(props){\r\n  const [isSelected,setSelected] = useState(['push-down']);\r\n\r\n  const choices = [\r\n    {label:'Top bar pushes down the rest of the page',value:'push-down'}, //body padding-top equals to the height of the bar, position: absolute\r\n    {label:'Top bar pushes down the rest of the page (always visible while scrolling)', value:'push-down-visible'}, // body padding-top, and position: -webkit-sticky\r\n    {label:'Top bar overlaps top of the page',value:'overlap'}, //no padding-top for body\r\n    {label:'Top bar overlaps top of the page (always visible while scrolling)',value:'overlap-visible'}, //no padding-top for body, and position:sticky\r\n    {\r\n      label:'Manual placement',\r\n      value:'manual',\r\n      renderChildren:(isSelected)=>{\r\n        return (\r\n          isSelected && (\r\n            <div>Place the code</div>\r\n          )\r\n        )\r\n      }}\r\n  ];\r\n\r\n  useEffect(()=>{\r\n    props.handleBarPosition(isSelected);\r\n  },[isSelected])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <ChoiceList \r\n        title={'Select a Display Position: '}\r\n        choices={choices}\r\n        selected={isSelected}\r\n        onChange={(nw) => setSelected(nw)}\r\n      />\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nclass ContentConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {frShGl:30,msgText:{initialMsg1:'Free Shipping on All Orders Over ',initialMsg2:'',prgMsg1:'Only ',prgMsg2:' away from free shipping',achievedMsg:'Free Shipping Worldwide'}}\r\n    this.handleGoalChange = this.handleGoalChange.bind(this);\r\n    this.handleMsgChange = this.handleMsgChange.bind(this);\r\n    this.handleBarLinkChange = this.handleBarLinkChange.bind(this);\r\n  }\r\n\r\n  handleGoalChange(newGoal){\r\n    if(parseFloat(newGoal) !== 0){\r\n      this.setState((state) => {\r\n        return {frShGl:parseFloat(newGoal)}\r\n      },function(){\r\n        this.props.handleContentConfig_goal(this.state.frShGl);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleMsgChange(msg){\r\n    this.setState((state)=>{\r\n      msg = {...state.msgText,...msg};\r\n      return {msgText:msg}\r\n    },function(){\r\n      this.props.handleContentConfig_msg(this.state.msgText)\r\n    });\r\n  };\r\n\r\n  handleBarLinkChange(val){\r\n    let barLinkConfig = {};\r\n    if(typeof val === 'boolean'){\r\n      barLinkConfig.openNew = val;\r\n    }else if(typeof val === 'string'){\r\n      barLinkConfig.url = val;\r\n    }\r\n    this.props.handleContentConfig_link(barLinkConfig);\r\n  }\r\n\r\n  render(){\r\n    const {frShGl} = this.state;\r\n    return (\r\n      <Card>\r\n        <Form onSubmit={() => {}}>\r\n          <FormLayout>\r\n\r\n            <NameField handleName={(name)=> this.props.handleName(name)}/>\r\n\r\n            <FreeShippingGoal handleGoalChange={this.handleGoalChange}/>\r\n\r\n            { frShGl? \r\n              <FormLayout>\r\n                <InitialMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange}/>\r\n                <ProgressMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange} />\r\n              </FormLayout>\r\n              :\r\n              null\r\n            }\r\n            \r\n            <GoalAchieved handleMsgChange={this.handleMsgChange} />\r\n\r\n            <AddLinkToBar handleBarLinkChange={this.handleBarLinkChange} />\r\n\r\n            <SetPosition handleBarPosition={(val)=>this.props.handleBarPosition(val)}/>\r\n\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContentConfigPage;","import { Card, Form, FormLayout } from '@shopify/polaris'\r\n\r\nclass CustomCodePage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      customCode:''\r\n    }\r\n    this.handleCustomCode = this.handleCustomCode.bind(this);\r\n  }\r\n\r\n  handleCustomCode(val){\r\n    let scriptStart = val.indexOf('<script>'), scriptEnd = val.indexOf('</script>'), styleStart = val.indexOf('<style>'), styleEnd = val.indexOf('</style>');\r\n    let scriptTxt, styleTxt;\r\n    if(scriptStart !== -1 && scriptEnd !== -1){\r\n      scriptTxt = val.slice(scriptStart+8,scriptEnd).trim();\r\n    }\r\n    if(styleStart !== -1 && styleEnd !== -1){\r\n      styleTxt = val.slice(styleStart+7,styleEnd).trim();\r\n    } \r\n    this.props.handleCustomCode(scriptTxt,styleTxt);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <Form onSubmit={v => console.log(v)}>\r\n          <FormLayout>\r\n            <div style={{fontSize:'18px',padding:'1.5em 0 0 1em'}}>Custom Codes</div>\r\n            <textarea rows=\"10\" cols=\"80\" placeholder=\"Please put your custom codes here...\" style={{marginLeft:'1em'}} onChange={(evt) => {evt.persist();this.handleCustomCode(evt.nativeEvent.target.value)}}></textarea>\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomCodePage;","import { Card, Form, FormLayout } from '@shopify/polaris';\r\nimport PreviewBar from '../snippets/previewBar';\r\n\r\nclass PreviewPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={}\r\n  }\r\n\r\n  render(){\r\n    const {barTxtConfig,barFrShGl,barLink} = this.props.contentConfig;\r\n    const bgImg = this.props.bgImg;\r\n    console.log(this.props.styleConfig);\r\n\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <PreviewBar \r\n              barConfig={{\r\n                bgColor:this.props.styleConfig.colorConfig.bgColor,\r\n                ftColor:this.props.styleConfig.colorConfig.txtColor,\r\n                spColor:this.props.styleConfig.colorConfig.specialColor,\r\n                opacity:this.props.styleConfig.colorConfig.bgOpacity,\r\n                inpTxt:barTxtConfig.initialMsg1, \r\n                goal:barFrShGl,\r\n                addedHtml:barTxtConfig.initialMsg2,\r\n                bgImg:bgImg,\r\n                fontFamily:this.props.styleConfig.fontConfig.fontFamily,\r\n                paddingUpDown:this.props.styleConfig.fontConfig.barPadding,\r\n                fontSize:this.props.styleConfig.fontConfig.fontSize\r\n              }} \r\n              barLink={barLink}\r\n            />\r\n            <PreviewBar \r\n              barConfig={{\r\n                bgColor:this.props.styleConfig.colorConfig.bgColor,\r\n                ftColor:this.props.styleConfig.colorConfig.txtColor,\r\n                spColor:this.props.styleConfig.colorConfig.specialColor,\r\n                opacity:this.props.styleConfig.colorConfig.bgOpacity,\r\n                inpTxt:barTxtConfig.prgMsg1, \r\n                goal:barFrShGl-1,\r\n                addedHtml:barTxtConfig.prgMsg2,\r\n                bgImg:bgImg,\r\n                fontFamily:this.props.styleConfig.fontConfig.fontFamily,\r\n                paddingUpDown:this.props.styleConfig.fontConfig.barPadding,\r\n                fontSize:this.props.styleConfig.fontConfig.fontSize\r\n              }} \r\n              barLink={barLink}\r\n            />\r\n            <PreviewBar \r\n              barConfig={{\r\n                bgColor:this.props.styleConfig.colorConfig.bgColor,\r\n                ftColor:this.props.styleConfig.colorConfig.txtColor,\r\n                spColor:this.props.styleConfig.colorConfig.specialColor,\r\n                opacity:this.props.styleConfig.colorConfig.bgOpacity,\r\n                inpTxt:barTxtConfig.achievedMsg, \r\n                addedHtml:barTxtConfig.initialMsg2,\r\n                bgImg:bgImg,\r\n                fontFamily:this.props.styleConfig.fontConfig.fontFamily,\r\n                paddingUpDown:this.props.styleConfig.fontConfig.barPadding,\r\n                fontSize:this.props.styleConfig.fontConfig.fontSize\r\n              }} \r\n              barLink={barLink} \r\n            />\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewPage;","import { Card, Stack, TextField, Button, Form, FormLayout, ColorPicker} from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport ImageDropZone from '../snippets/imageDropZone';\r\nimport '../css/fonts.css';\r\n\r\nfunction ColorPickers(props){\r\n  \r\n  const [color, setColor] = useState({\r\n    hue: 0,\r\n    brightness: 0,\r\n    saturation: 0,\r\n  });\r\n\r\n  useEffect(()=>{\r\n    props.handleColorChange(color);\r\n  },[color])\r\n\r\n  return (\r\n    <div style={{height:'100px',width:'auto',position:'absolute',top:'25px',left:'0',zIndex:'99'}}>\r\n      <ColorPicker onChange={setColor} color={color} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BackgroundSetting(props){\r\n  const rgbToHex = (rgb) => {\r\n    if(rgb.includes('#')) return rgb;\r\n    let regExp = /\\(\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)\\)/;\r\n    let re = rgb.match(regExp);\r\n    if(re){\r\n      let r=parseInt(re[1]).toString(16),\r\n        g=parseInt(re[2]).toString(16),\r\n        b=parseInt(re[3]).toString(16);\r\n      if (r.length == 1)\r\n        r = \"0\" + r;\r\n      if (g.length == 1)\r\n        g = \"0\" + g;\r\n      if (b.length == 1)\r\n        b = \"0\" + b;\r\n      return \"#\" + r + g + b;\r\n    }\r\n  };\r\n  const hslToRgb = (h,s,l) => { // s, l must be fractions of 100;\r\n    let c = (1 - Math.abs(2 * l - 1)) * s,\r\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n      m = l - c/2,\r\n      r = 0,\r\n      g = 0,\r\n      b = 0;\r\n    if (0 <= h && h < 60) {\r\n      r = c; g = x; b = 0;\r\n    } else if (60 <= h && h < 120) {\r\n      r = x; g = c; b = 0;\r\n    } else if (120 <= h && h < 180) {\r\n      r = 0; g = c; b = x;\r\n    } else if (180 <= h && h < 240) {\r\n      r = 0; g = x; b = c;\r\n    } else if (240 <= h && h < 300) {\r\n      r = x; g = 0; b = c;\r\n    } else if (300 <= h && h < 360) {\r\n      r = c; g = 0; b = x;\r\n    }\r\n    r = Math.round((r + m) * 255);\r\n    g = Math.round((g + m) * 255);\r\n    b = Math.round((b + m) * 255);\r\n  \r\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n  }\r\n  const [showBgPicker,setBgPicker] = useState(false);\r\n  const [showTxtPicker,setTxtPicker] = useState(false);\r\n  const [showSpTxtPicker,setSpTxtPicker] = useState(false);\r\n  const [bgColor, setBgColor] = useState('#000');\r\n  const [bgOpacity, setBgOpacity] = useState('100');\r\n\r\n  const [txtColor, setTxtColor] = useState('#b31219');\r\n  const [specialColor, setSpecialColor] = useState('#fff');\r\n  let bgColorFrmProps = props.colorConfig.bgColor, txtColorFrmProps = props.colorConfig.txtColor;\r\n\r\n  useEffect(()=>{\r\n    props.handleStyleConfig({\r\n      bgColor:bgColor,\r\n      bgOpacity:bgOpacity,\r\n      txtColor:txtColor,\r\n      specialColor:specialColor\r\n    },undefined);\r\n  },[bgColor,bgOpacity,txtColor,specialColor]);\r\n\r\n  useEffect(()=>{\r\n    setBgColor(rgbToHex(bgColorFrmProps));\r\n  },[bgColorFrmProps]);\r\n\r\n  useEffect(()=>{\r\n    setTxtColor(rgbToHex(txtColorFrmProps));\r\n  },[txtColorFrmProps]);\r\n\r\n\r\n\r\n  return (\r\n    <Card.Section>\r\n      <Stack>\r\n        <div>\r\n          <h3>Background color:</h3>\r\n          <div style={{position:'relative'}}>\r\n            <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:bgColor,cursor:'pointer'}} \r\n              onClick={() => setBgPicker(!showBgPicker)}\r\n            ></div>\r\n            { showBgPicker? \r\n              <ColorPickers \r\n                handleColorChange={(hslCl) => {\r\n                  let cRgb = hslToRgb(hslCl.hue,hslCl.saturation,hslCl.brightness);\r\n                  setBgColor(cRgb);\r\n                }}\r\n              />\r\n              :\r\n              null\r\n            }\r\n          </div>\r\n          <TextField\r\n            value={bgColor}\r\n            onChange={nw => setBgColor(nw)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Background opacity:</h3>\r\n          <div style={{display:'inline-block'}}>{bgOpacity}</div>\r\n          <TextField \r\n            value={bgOpacity}\r\n            onChange={nw => setBgOpacity(nw)}\r\n            type=\"number\"\r\n            helpText=\"0 is transparent, 100 is opaque.\"\r\n          />\r\n        </div>\r\n      </Stack>\r\n      <Stack>\r\n        <div>\r\n          <h3>Text color:</h3>\r\n          <div style={{position:'relative'}}>\r\n           <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:txtColor,cursor:'pointer'}}\r\n            onClick={()=>setTxtPicker(!showTxtPicker)}\r\n           ></div>\r\n            { showTxtPicker?\r\n              <ColorPickers \r\n                handleColorChange={(hslCl) => {\r\n                  let cRgb = hslToRgb(hslCl.hue,hslCl.saturation,hslCl.brightness);\r\n                  setTxtColor(cRgb);\r\n                }}\r\n              />\r\n              :\r\n              null\r\n            }\r\n          </div>\r\n          <TextField \r\n            value={txtColor}\r\n            onChange={nw => setTxtColor(nw)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Special text color:</h3>\r\n          <div style={{position:'relative'}}>\r\n            <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:specialColor,cursor:'pointer'}}\r\n              onClick={()=>setSpTxtPicker(!showSpTxtPicker)}\r\n            ></div>\r\n            { showSpTxtPicker?\r\n              <ColorPickers \r\n                handleColorChange={(hslCl) => {\r\n                  let cRgb = hslToRgb(hslCl.hue,hslCl.saturation,hslCl.brightness);\r\n                  setSpecialColor(cRgb);\r\n                }}\r\n              />\r\n              :\r\n              null\r\n            }\r\n          </div>\r\n          <TextField \r\n            value={rgbToHex(specialColor)}\r\n            onChange={nw => setSpecialColor(nw)}\r\n          />\r\n        </div>\r\n      </Stack>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction Fonts(props){\r\n  const [fontSize,setFontSize] = useState(18);\r\n  const [padding,setPadding] = useState(10);\r\n  const [fontFam,setFontFam] = useState('sans-serif');\r\n\r\n  const handleFontFam = useCallback(\r\n    (val) => {\r\n      setFontFam(val);\r\n    },\r\n    [fontFam]\r\n  )\r\n\r\n  const handleFontSize = useCallback(\r\n    (val) => {\r\n      setFontSize(val);\r\n    },\r\n    [fontSize]\r\n  );\r\n\r\n  const handlePadding = useCallback(\r\n    (val) => {\r\n      setPadding(val);\r\n    },\r\n    [padding]\r\n  );\r\n\r\n  useEffect(()=>{\r\n    props.handleStyleConfig(undefined,{fontFamily:fontFam,fontSize:fontSize,barPadding:padding});\r\n  },[fontFam,fontSize,padding])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <div>Font family:</div>\r\n      <Button onClick={() => handleFontFam('Montserrat')}>Montserrat</Button>\r\n      <Button onClick={() => handleFontFam('sans-serif')}>Sans serif</Button>\r\n      <TextField \r\n        label=\"Font size:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={fontSize}\r\n        onChange={handleFontSize}\r\n      />\r\n      <TextField \r\n        label=\"Bar padding:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={padding}\r\n        onChange={handlePadding}\r\n      />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nclass StyleConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      colorConfig:{},\r\n      fontConfig:{},\r\n      bgImg:{}\r\n    }\r\n    this.handleStyleConfig = this.handleStyleConfig.bind(this);\r\n    this.uploadBgImg = this.uploadBgImg.bind(this);\r\n  }\r\n\r\n  handleStyleConfig(colorCf,fontCf){\r\n    this.setState((state)=>{\r\n      if(colorCf===undefined){\r\n        fontCf = {...state.fontConfig,...fontCf};\r\n        return {colorConfig:state.colorConfig,fontConfig:fontCf}\r\n      }else if(fontCf === undefined){\r\n        colorCf = {...state.colorConfig,...colorCf};\r\n        return {colorConfig:colorCf,fontConfig:state.fontConfig}\r\n      }\r\n    },function(){\r\n      this.props.handleStyleConfig(this.state.colorConfig,this.state.fontConfig);\r\n    })\r\n  }\r\n\r\n  uploadBgImg(bgFile){\r\n    this.setState({bgImg:bgFile},function(){\r\n      this.props.uploadBgImg(this.state.bgImg)\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <div style={{fontSize:'18px',padding:'1.5em 0 0 1em'}}>Style Configuration</div>\r\n            <BackgroundSetting handleStyleConfig={this.handleStyleConfig} {...this.props.styleConfig}/>\r\n            <ImageDropZone uploadBgImg={this.uploadBgImg}/>\r\n            <Fonts  handleStyleConfig={this.handleStyleConfig}/>\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StyleConfigPage;","import { Card, DisplayText, ChoiceList, TextField,Form, FormLayout } from '@shopify/polaris';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport SelectCountries from '../snippets/selectCountries';\r\nimport DisplaySchedule from '../snippets/displaySchedule';\r\n\r\nfunction IncludePage(props) {\r\n  const [selected, setSelected] = useState(['all']);\r\n  const [urlInp, setUrlInp] = useState('');\r\n  const [urlExc, setUrlExc] = useState('');\r\n\r\n  const handleUrlInp = useCallback(\r\n    (value) => {\r\n      setUrlInp(value);\r\n    },\r\n    [],\r\n  );\r\n  const handleUrlExc = useCallback(\r\n    (val) => {\r\n      setUrlExc(val);\r\n    },\r\n    []\r\n  );\r\n\r\n  const renderUrlInp = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField\r\n          label=\"\"\r\n          labelHidden\r\n          onChange={handleUrlInp}\r\n          value={urlInp}\r\n        />\r\n      ),\r\n    [handleUrlInp, urlInp],\r\n  );\r\n\r\n  const renderPageToExc = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField \r\n          labelHidden\r\n          onChange={handleUrlExc}\r\n          value={urlExc}\r\n        />\r\n      ),\r\n    [handleUrlExc, urlExc]\r\n  )\r\n\r\n  useEffect(()=>{\r\n    let sl = selected[0];\r\n    switch(sl){\r\n      case 'all':\r\n        props.handleDisplayOnPage('all',undefined);\r\n        break;\r\n      case 'homepage':\r\n        props.handleDisplayOnPage('home',undefined);\r\n        break;\r\n      case 'url':\r\n        props.handleDisplayOnPage('url',urlInp);\r\n        break;\r\n      case 'exclude':\r\n        props.handleDisplayOnPage('exclude',urlExc);\r\n        break;\r\n    }\r\n  },[urlInp,urlExc,selected])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <ChoiceList\r\n        title=\"Display on page:\"\r\n        choices={[\r\n          {label: 'All pages', value: 'all'},\r\n          {label: 'Homepage only', value: 'homepage'},\r\n          {label: 'Only on page with URL', value: 'url',renderChildren:renderUrlInp},\r\n          {label:'Pages to exclude',value:'exclude',renderChildren:renderPageToExc}\r\n        ]}\r\n        selected={selected}\r\n        onChange={(nw) => setSelected(nw)}\r\n      />\r\n    </FormLayout.Group>\r\n  );\r\n}\r\n\r\nclass TargetConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {};\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <div style={{fontSize:'18px',padding:'1.5em 0 0 1em'}}>Target Configuration</div>\r\n            <IncludePage handleDisplayOnPage={(sec,url)=> this.props.handleDisplayOnPage(sec,url)}/>\r\n            <SelectCountries shipsToCountries={this.props.shipsToCountries} handleSelectedTargets={this.props.handleSelectedTargets}/>\r\n            <DisplaySchedule />\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TargetConfigPage;","import { Card } from '@shopify/polaris';\r\n\r\nfunction TemplateStyleItem(props){\r\n  const bgColor = props.bg;\r\n  const ftColor = props.ft;\r\n  const marginRt = props.mgRt? '1em' : '0';\r\n  const wid = props.mgRt? '48%' : '50%';\r\n  return (\r\n    <li style={{listStyleType:'none',width:wid,textAlign:'center',padding:'8px 0',marginTop:'5px',marginRight:marginRt,backgroundColor:bgColor,color:ftColor,cursor:'pointer'}}>{props.styleT}</li>\r\n  )\r\n}\r\n\r\nclass TemplateStyle extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={};\r\n    this.handleClicking = this.handleClicking.bind(this);\r\n    this.tpItem = React.createRef();\r\n  }\r\n\r\n  handleClicking(bg,ftColor){\r\n    this.props.handleClickedLi(bg,ftColor);\r\n  }\r\n\r\n  componentDidMount(){\r\n    let tpUl = this.tpItem.current;\r\n    let tpItems = tpUl.querySelectorAll('li');\r\n    const self = this;\r\n    for(let n=0;n<tpItems.length;n++){\r\n      tpItems[n].addEventListener('click',function(e){\r\n        let li = e.target;\r\n        let bg = li.style.backgroundColor, ftColor = li.style.color;\r\n        self.handleClicking(bg,ftColor);\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <ul style={{display:'flex',flexFlow:'row wrap',padding:'0 2em',marginTop:'5px'}} ref={this.tpItem}>\r\n          <TemplateStyleItem styleT=\"Basic\" bg=\"#000\" ft=\"#b31219\" mgRt=\"y\"/>\r\n          <TemplateStyleItem styleT=\"Havest Good\" bg=\"rgb(255, 240, 165)\" ft=\"rgb(182, 73, 38)\" />\r\n          <TemplateStyleItem styleT=\"Fairy Tale\" bg=\"rgb(255, 217, 210)\" ft=\"rgb(127, 77, 67)\" mgRt=\"y\" />\r\n          <TemplateStyleItem styleT=\"Shades of Grey\" bg=\"rgb(76, 76, 76)\" ft=\"rgb(204, 204, 204)\" />\r\n        </ul>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TemplateStyle;","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-float\");","module.exports = require(\"core-js/library/fn/parse-int\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { Layout, Page, ButtonGroup, Button, Toast, Frame } from '@shopify/polaris';\r\nimport { useState, useCallback } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, useSubscription } from 'react-apollo';\r\nimport store from 'store-js';\r\n\r\nimport BarList from '../components/barList';\r\nimport TemplateStyle from '../components/templateStyle';\r\nimport ContentConfigPage from '../components/contentConfig';\r\nimport StyleConfigPage from '../components/styleConfig';\r\nimport TargetConfigPage from '../components/targetConfig';\r\nimport CustomCodePage from '../components/customCode';\r\nimport PreviewPage from '../components/preview';\r\n\r\nconst INJECT_SCRIPT = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SaveUserPreference(props){\r\n  const [injectScriptTag, {data,error}] = useMutation(INJECT_SCRIPT);\r\n\r\n  const handleInjectionSuccess = (data,b) =>{\r\n    console.log(data);\r\n    setTimeout((b) => {\r\n      b='dismiss'\r\n    }, 2500);\r\n    return (\r\n      b === 'success'? \r\n      <Toast\r\n        content=\"Saved successfully.\"\r\n        onDismiss={() => {}}\r\n      />\r\n      :\r\n      b === 'error' ?\r\n      <Toast\r\n        content=\"Something went wrong.\"\r\n        onDismiss={ () => {}}\r\n      />\r\n      :\r\n      null\r\n    )\r\n  };\r\n  \r\n  return (\r\n    <div style={{marginTop:'50px',height:'100px'}}>\r\n      <ButtonGroup>\r\n        <Button\r\n          onClick = {()=>{\r\n            props.handleEdit();\r\n          }}\r\n        >Cancel</Button>\r\n        <Button primary \r\n          onClick={(e)=>{\r\n            e.preventDefault();\r\n            console.log('calling useMutation hooks');\r\n            // injectScriptTag({\r\n            //   variables:{\r\n            //     input:{\r\n            //       displayScope:'ONLINE_STORE',\r\n            //       src:'https://ec9baf76.ngrok.io/_next/static/chunks/topBarInjection.js'\r\n            //     }\r\n            //   }\r\n            // })\r\n            props.handleSaving();\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Frame>\r\n        { data && handleInjectionSuccess(data,'success')}\r\n        { error &&  handleInjectionSuccess(error,'error') }\r\n      </Frame>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Index extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      onEdit:false,\r\n      savedName:'',\r\n      barTxtConfig:{initialMsg1:'',prgMsg1:'',achievedMsg:''},\r\n      barFrShGl:30,\r\n      barLink:{url:'',openNew:false},\r\n      barPosition:'',\r\n      bgImg:{},\r\n      styleConfig:{colorConfig:{bgColor:'#000',txtColor:'#b31219',bgOpacity:100,specialColor:'#fff'},fontConfig:{fontFamily:'sans-serif'}},\r\n      customCode:{script:'',style:''},\r\n      dspOnPage:{selected:'',url:''},\r\n      shipsToCountries:[],\r\n      selectedTargets:[]\r\n    };\r\n    this.baseState = this.state;\r\n    this.finalBars = React.createRef();\r\n    this.handleEditId = this.handleEditId.bind(this);\r\n  }\r\n\r\n  handleEditId(id){\r\n    console.log(id);\r\n    this.setState({onEdit:true});\r\n  }\r\n\r\n  render(){\r\n    const emptyState = !store.get('ids');\r\n    const {barTxtConfig,barFrShGl,barLink,styleConfig,bgImg,savedName,barPosition,dspOnPage,selectedTargets} = this.state;\r\n    return (\r\n      <Page>\r\n        <Layout.Section>\r\n          <BarList \r\n            handleEditId={(id) => this.handleEditId(id)}\r\n            handleTargetCountries={(arr)=> this.setState({shipsToCountries:arr},function(){console.log(this.state.shipsToCountries)})}\r\n          />\r\n          {\r\n            this.state.onEdit?\r\n            <div style={{marginTop:'3em'}}>\r\n              <TemplateStyle handleClickedLi={(bg,ftColor) => this.setState({styleConfig:{...this.state.styleConfig,colorConfig:{...this.state.styleConfig.colorConfig,bgColor:bg,txtColor:ftColor}}})}/>\r\n              <PreviewPage \r\n                others={{savedName,barPosition,dspOnPage,selectedTargets}}\r\n                contentConfig={{barTxtConfig,barFrShGl,barLink}} \r\n                styleConfig = {{...styleConfig}}\r\n                bgImg = {bgImg}\r\n                ref={this.finalBars}\r\n              />\r\n              <ContentConfigPage \r\n                handleContentConfig_msg={(msg)=> this.setState({barTxtConfig:{...this.barTxtConfig,...msg}})} \r\n                handleContentConfig_goal={(gl) => this.setState({barFrShGl:gl})}\r\n                handleContentConfig_link={(val)=> this.setState({barLink:{...this.state.barLink,...val}})}\r\n                handleName={(name)=> this.setState({savedName:name})}\r\n                handleBarPosition={(p)=> this.setState({barPosition:p})}\r\n              />\r\n              <StyleConfigPage \r\n                handleStyleConfig={(colorCf,fontCf) => {\r\n                  this.setState({styleConfig:{colorConfig:colorCf,fontConfig:fontCf}})\r\n                }}\r\n                uploadBgImg={(bgFile) => this.setState({bgImg:bgFile})}\r\n                {...this.state}\r\n              />\r\n              <TargetConfigPage \r\n                handleDisplayOnPage={(sec,url)=>this.setState({dspOnPage:{selected:sec,url:url}})}\r\n                shipsToCountries={this.state.shipsToCountries}\r\n                handleSelectedTargets={(val)=>this.setState({selectedTargets:val},function(){console.log('selected targets are',this.state.selectedTargets)})}\r\n              />\r\n              <CustomCodePage handleCustomCode={(script,style) => {this.setState({customCode:{script:script,style:style}})}}/>\r\n              <SaveUserPreference \r\n                handleEdit={()=> {\r\n                  this.setState(this.baseState);\r\n                }}\r\n                handleSaving={()=>{\r\n                  console.log(this.finalBars.current);\r\n                }}\r\n              />\r\n            </div>\r\n            :\r\n            null\r\n          }\r\n        </Layout.Section>\r\n      </Page>\r\n    )\r\n  };\r\n\r\n};\r\n\r\nexport default Index;","import {Card, DatePicker, ChoiceList} from '@shopify/polaris';\r\nimport {useCallback, useState, useEffect}  from 'react';\r\n\r\nfunction Choose(props){\r\n  const [selected, setSelected] = useState(['always']);\r\n\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n\r\n  const renderDatePicker = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <Schedule />\r\n      )\r\n  )\r\n\r\n  return (\r\n    <ChoiceList\r\n      choices={[\r\n        {label: 'Always display', value: 'always'},\r\n        {label: 'Only display within the giving period of time', value: 'scheduled',renderChildren:renderDatePicker},\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nfunction SelectTime(props){\r\n  \r\n  return (\r\n    <div style={{margin:'1em 0'}}>\r\n      <div>Please enter the hour (from 0 to 23) and minute (from 0 to 59) that the display <strong>starts</strong>:</div>\r\n      <div style={{marginTop:'.5em'}}>\r\n        <span style={{marginRight:'.3em'}}>Hour:</span>\r\n        <input id=\"start_hour\" type='number' min={0} max={23}  style={{marginRight:'1em'}}/>\r\n        <span style={{marginRight:'.3em'}}>Minute:</span>\r\n        <input id=\"start_min\" type='number' min={0} max={59}/>\r\n      </div>\r\n      <div style={{marginTop:'.5em'}}>Please enter the hour (from 0 to 23) and minute (from 0 to 59) that the display <strong>ends</strong>:</div>\r\n      <div style={{marginTop:'.5em'}}>\r\n        <span style={{marginRight:'.3em'}}>Hour:</span>\r\n        <input id=\"end_hour\" type='number' min={0} max={23}  style={{marginRight:'1em'}}/>\r\n        <span  style={{marginRight:'.3em'}}>Minute:</span>\r\n        <input id=\"end_min\" type='number' min={0} max={59}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Schedule(props){\r\n  const [{ month, year }, setDate] = useState({\r\n    month: 9,\r\n    year: 2019\r\n  });\r\n  const [selectedDates, setSelectedDates] = useState({\r\n    start: new Date(),\r\n    end: new Date()\r\n  });\r\n  const [{leftMon,rightMon},setMonth] = useState({\r\n    leftMon:month+1,\r\n    rightMon:month+2\r\n  })\r\n\r\n  const handleMonthChange = useCallback((month, year) => {\r\n    setDate({ month, year });\r\n    setMonth({leftMon:month+1,rightMon:month+2})\r\n  }, []);\r\n\r\n  const transpileMonth = (month) => {\r\n    month = ''+month;\r\n    switch(month){\r\n      case '1':\r\n        return 'January';\r\n        break;\r\n      case '2':\r\n        return 'Feburary';\r\n        break;\r\n      case '3':\r\n        return 'March';\r\n        break;\r\n      case '4':\r\n        return 'April';\r\n      case '5':\r\n        return 'May';\r\n      case '6':\r\n        return 'June';\r\n      case '7':\r\n        return 'July';\r\n      case '8':\r\n        return 'August';\r\n      case '9':\r\n        return 'September';\r\n      case '10':\r\n        return 'October';\r\n      case '11':\r\n        return 'November';\r\n      case '12':\r\n        return 'December';\r\n      case '13':\r\n        return 'January';\r\n    }\r\n  };\r\n\r\n  const handleTimeSelection = () => {\r\n    const startH = document.getElementById('start_hour'),\r\n          startM = document.getElementById('start_min'),\r\n          endH = document.getElementById('end_hour'),\r\n          endM = document.getElementById('end_min');\r\n    let startT={}, endT={};\r\n    startH.addEventListener('input',function(e){\r\n      let num = e.target.valueAsNumber;\r\n      num > 23?\r\n        startT.hour = 23\r\n        :\r\n        num < 0?\r\n          startT.hour = 0\r\n          :\r\n          startT.hour = num;\r\n    });\r\n    startM.addEventListener('input',function(e){\r\n      let num = e.target.valueAsNumber;\r\n      num > 59?\r\n        startT.min = 59\r\n        :\r\n        num < 0?\r\n          startT.min = 0\r\n          :\r\n          startT.min = num;\r\n    });\r\n    endH.addEventListener('input',function(e){\r\n      let num = e.target.valueAsNumber;\r\n      num > 23?\r\n        endT.hour = 23\r\n        :\r\n        num < 0?\r\n          endT.hour = 0\r\n          :\r\n          endT.hour = num;\r\n    });\r\n    endM.addEventListener('input',function(e){\r\n      let num = e.target.valueAsNumber;\r\n      num > 59?\r\n        endT.min = 59\r\n        :\r\n        num < 0?\r\n          endT.min = 0\r\n          :\r\n          endT.min = num;\r\n    });\r\n    return {startT,endT}\r\n  }\r\n\r\n  useEffect(()=>{\r\n    console.log('selected dates are',selectedDates);\r\n    let startD = new Date(selectedDates.start);\r\n    let endD = new Date(selectedDates.end);\r\n    let time = handleTimeSelection();\r\n    startD = startD.getFullYear()+'/'\r\n    console.log(time);\r\n  },[selectedDates]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div style={{display:'flex',flexFlow:'row nowrap',justifyContent:'stretch'}}>\r\n        <div style={{width:'50%',textAlign:'center'}}>{transpileMonth(leftMon)}</div>\r\n        <div style={{width:'50%',textAlign:'center'}}>{transpileMonth(rightMon)}</div>\r\n      </div>\r\n      <DatePicker \r\n      month={month} \r\n      year={year} \r\n      onChange={setSelectedDates} \r\n      onMonthChange={handleMonthChange} \r\n      selected={selectedDates} \r\n      multiMonth={true} \r\n      allowRange={true} \r\n      />\r\n      <SelectTime />\r\n    </div>\r\n  );\r\n}\r\n\r\nclass DisplaySchedule extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={}\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card.Section>\r\n        <div style={{marginBottom:'1em',fontSize:'1.1em'}}>Display schedule:</div>\r\n        <Choose />\r\n        <div>Define the Start Time and End Time of the display period. Must select at least two days.</div>\r\n      </Card.Section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplaySchedule;","import { DropZone, Banner, Stack, List, Thumbnail, Caption, Card } from '@shopify/polaris';\r\n\r\nclass ImageDropZone extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n    this.inputRef = React.createRef();\r\n    this.handleInpImg = this.handleInpImg.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    const inputBtn = this.inputRef.current;\r\n    const self = this;\r\n    inputBtn.addEventListener('change',function(e){\r\n      self.handleInpImg(inputBtn);\r\n    });\r\n  }\r\n\r\n  handleInpImg(tg){\r\n    let img = tg.files[0],imgs,al;\r\n    let imgWrapper = document.createElement('img');\r\n    let delBtn = document.createElement('button');\r\n    const self = this;\r\n    imgs = tg.parentNode.querySelector('.imgs');\r\n\r\n    // delete button handling\r\n    delBtn.textContent = 'Delete Image';\r\n    delBtn.addEventListener('click',function(e){\r\n      e.preventDefault();\r\n      let uploadedImg = imgs.querySelector('img');\r\n      imgs.removeChild(uploadedImg);\r\n      imgs.removeChild(delBtn);\r\n      self.props.uploadBgImg({});\r\n    });\r\n    imgWrapper.src = window.URL.createObjectURL(img);\r\n\r\n    al = imgs.querySelector('img');\r\n    if(al){\r\n      imgs.removeChild(al);\r\n      imgs.insertAdjacentElement('afterbegin',imgWrapper);\r\n    }else{\r\n      imgs.insertAdjacentElement('afterbegin',imgWrapper);\r\n      imgs.insertAdjacentElement('beforeend',delBtn);\r\n    }\r\n    \r\n    this.props.uploadBgImg(img);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card.Section>\r\n        <label htmlFor=\"backgroundImg\">Click the drop zone to continue uploading more images:</label>\r\n        <div>\r\n          <input id=\"backgroundImg\" type=\"file\" accept=\"image/*\" name=\"bgImg\" ref={this.inputRef}/>\r\n          <div className=\"imgs\"></div>\r\n        </div>\r\n      </Card.Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageDropZone;","import '../css/fonts.css';\r\n\r\nclass PreviewBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {animReq:null};\r\n    this.htmlRef = React.createRef();\r\n    this.closeBtn = React.createRef();\r\n    this.topBar = React.createRef();\r\n    this.injectHtml = this.injectHtml.bind(this);\r\n    this.setAnimation = this.setAnimation.bind(this);\r\n    this.renderBarFirstLine = this.renderBarFirstLine.bind(this);\r\n    this.renderInnerBar = this.renderInnerBar.bind(this);\r\n    this._hexToRgba = this._hexToRgba.bind(this);\r\n  }\r\n\r\n  setAnimation(el,childToQuery){\r\n    let keyframeEl = document.createElement('style');\r\n    keyframeEl.textContent = `\r\n      @keyframes infiniteSlide{\r\n          from {\r\n            margin-top:0\r\n          }\r\n          to {\r\n            margin-top: -22px\r\n          }\r\n      }\r\n    `;\r\n    el.insertAdjacentElement('afterbegin',keyframeEl);\r\n    el.setAttribute('style',\"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s;\");\r\n    el.addEventListener('animationend',function(){\r\n      el.style.animation = '';\r\n      void el.offsetWidth;\r\n      let elNode = el.children[0].parentNode;\r\n      let firstChild = elNode.querySelector(childToQuery);\r\n      let clonedFirstChild = firstChild.cloneNode(true);\r\n      elNode.insertAdjacentElement('beforeend',clonedFirstChild);\r\n      elNode.removeChild(firstChild);\r\n      el.style.animation = 'infiniteSlide 2.5s';\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    // handle injected html\r\n    if(this.htmlRef.current){\r\n      let injectedHtmlElCollection = this.htmlRef.current.children; // object\r\n      for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n        let el = injectedHtmlElCollection[n];\r\n        if(el.classList.contains('link-container')){\r\n          el.setAttribute(\"style\",\"height:22px;overflow:hidden;line-height:22px;\");\r\n          if(el.children[0].tagName==='UL'){\r\n            let ul = el.children[0];\r\n            this.setAnimation(ul,'li');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // handle closing action\r\n    let closeBtn = this.closeBtn.current;\r\n    closeBtn.addEventListener('click',(e)=>{\r\n      // #todo add script when appending to page to hide the bar element\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    // handle injected html\r\n    if(this.htmlRef.current){\r\n      let injectedHtmlElCollection = this.htmlRef.current.children; // object\r\n      for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n        let el = injectedHtmlElCollection[n];\r\n        if(el.classList.contains('link-container')){\r\n          el.setAttribute(\"style\",\"height:22px;overflow:hidden;line-height:22px;\");\r\n          if(el.children[0].tagName==='UL'){\r\n            let ul = el.children[0];\r\n            this.setAnimation(ul,'li');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log('finished top bar',this.topBar.current);\r\n  }\r\n\r\n\r\n  injectHtml(html){\r\n    let contExp = /link\\-container/;\r\n    let havCont = contExp.test(html);\r\n    if(havCont){\r\n\r\n    }\r\n    return (\r\n      <span dangerouslySetInnerHTML={{__html:html}} ref={this.htmlRef} style={{textAlign:'center'}}></span>\r\n    )\r\n  }\r\n\r\n  renderBarFirstLine(barConfig){\r\n    const {goal,inpTxt,spColor} = barConfig;\r\n    return (\r\n      <span>{inpTxt}<span style={{color:spColor,fontWeight:400}}>${goal}</span></span>\r\n    )\r\n  }\r\n\r\n  renderInnerBar(barConfig){\r\n    const {inpTxt,addedHtml,ftColor,goal,opacity,bgImg,fontFamily,paddingUpDown,fontSize} = barConfig;\r\n    let {bgColor} = barConfig,imgSize=bgImg.size,imgUrl;\r\n    let padding = paddingUpDown? `${paddingUpDown}px 5px` : '8px 5px';\r\n\r\n    if(opacity.toString() !== '100'){\r\n      bgColor = this._hexToRgba(bgColor,opacity);\r\n    }\r\n    \r\n    if(imgSize){\r\n      imgUrl = 'url(\"'+window.URL.createObjectURL(bgImg)+'\")';\r\n    }\r\n    \r\n    return (\r\n      <div style={{padding:padding,fontSize:fontSize? fontSize+'px' : '18px',lineHeight:'22.5px',textAlign:'center',position:'relative',backgroundColor:bgColor,color:ftColor,backgroundImage:imgUrl,fontFamily:fontFamily}}>\r\n        { goal?\r\n          this.renderBarFirstLine(barConfig)\r\n          :\r\n          inpTxt\r\n        }\r\n        { addedHtml?\r\n            this.injectHtml(addedHtml) \r\n            :\r\n            null\r\n        }\r\n        <div style={{position:'absolute',top:'8px',right:'8px',cursor:'pointer'}} ref={this.closeBtn}>X</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _hexToRgba(h,op){\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length == 4) {\r\n      r = \"0x\" + h[1] + h[1];\r\n      g = \"0x\" + h[2] + h[2];\r\n      b = \"0x\" + h[3] + h[3];\r\n\r\n    // 6 digits\r\n    } else if (h.length == 7) {\r\n      r = \"0x\" + h[1] + h[2];\r\n      g = \"0x\" + h[3] + h[4];\r\n      b = \"0x\" + h[5] + h[6];\r\n    }\r\n    \r\n    return \"rgba(\"+ +r + \",\" + +g + \",\" + +b + \",\" + op/100 + \")\";\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={{margin:'20px 0'}}>\r\n        <div ref={this.topBar}>\r\n          { this.props.barLink.url.length !== 0 ?\r\n            <a href={this.props.barLink.url} target={this.props.barLink.openNew? \"_blank\" : \"_self\"} style={{textDecoration:'none',color:'initial'}}>\r\n              { this.renderInnerBar(this.props.barConfig) }\r\n            </a>\r\n            :\r\n            this.renderInnerBar(this.props.barConfig)\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewBar;","import { Card } from \"@shopify/polaris\";\r\n\r\nconst countryName = {\r\n  'AF' : 'Afghanistan',\r\n  'AX' : 'Aland Islands',\r\n  'AL' : 'Albania',\r\n  'DZ' : 'Algeria',\r\n  'AS' : 'American Samoa',\r\n  'AD' : 'Andorra',\r\n  'AO' : 'Angola',\r\n  'AI' : 'Anguilla',\r\n  'AQ' : 'Antarctica',\r\n  'AG' : 'Antigua And Barbuda',\r\n  'AR' : 'Argentina',\r\n  'AM' : 'Armenia',\r\n  'AW' : 'Aruba',\r\n  'AU' : 'Australia',\r\n  'AT' : 'Austria',\r\n  'AZ' : 'Azerbaijan',\r\n  'BS' : 'Bahamas',\r\n  'BH' : 'Bahrain',\r\n  'BD' : 'Bangladesh',\r\n  'BB' : 'Barbados',\r\n  'BY' : 'Belarus',\r\n  'BE' : 'Belgium',\r\n  'BZ' : 'Belize',\r\n  'BJ' : 'Benin',\r\n  'BM' : 'Bermuda',\r\n  'BT' : 'Bhutan',\r\n  'BO' : 'Bolivia',\r\n  'BQ' : 'Bonaire, Sint Eustatius and Saba',\r\n  'BA' : 'Bosnia And Herzegovina',\r\n  'BW' : 'Botswana',\r\n  'BV' : 'Bouvet Island',\r\n  'BR' : 'Brazil',\r\n  'IO' : 'British Indian Ocean Territory',\r\n  'BN' : 'Brunei Darussalam',\r\n  'BG' : 'Bulgaria',\r\n  'BF' : 'Burkina Faso',\r\n  'BI' : 'Burundi',\r\n  'KH' : 'Cambodia',\r\n  'CM' : 'Cameroon',\r\n  'CA' : 'Canada',\r\n  'CV' : 'Cape Verde',\r\n  'CW' : 'Curaçao',\r\n  'KY' : 'Cayman Islands',\r\n  'CF' : 'Central African Republic',\r\n  'TD' : 'Chad',\r\n  'CL' : 'Chile',\r\n  'CN' : 'China',\r\n  'CX' : 'Christmas Island',\r\n  'CC' : 'Cocos (Keeling) Islands',\r\n  'CO' : 'Colombia',\r\n  'KM' : 'Comoros',\r\n  'CG' : 'Congo',\r\n  'CD' : 'Congo, Democratic Republic',\r\n  'CK' : 'Cook Islands',\r\n  'CR' : 'Costa Rica',\r\n  'CI' : 'Cote D\\'Ivoire',\r\n  'HR' : 'Croatia',\r\n  'CU' : 'Cuba',\r\n  'CY' : 'Cyprus',\r\n  'CZ' : 'Czech Republic',\r\n  'DK' : 'Denmark',\r\n  'DJ' : 'Djibouti',\r\n  'DM' : 'Dominica',\r\n  'DO' : 'Dominican Republic',\r\n  'EC' : 'Ecuador',\r\n  'EG' : 'Egypt',\r\n  'SV' : 'El Salvador',\r\n  'GQ' : 'Equatorial Guinea',\r\n  'ER' : 'Eritrea',\r\n  'EE' : 'Estonia',\r\n  'ET' : 'Ethiopia',\r\n  'FK' : 'Falkland Islands (Malvinas)',\r\n  'FO' : 'Faroe Islands',\r\n  'FJ' : 'Fiji',\r\n  'FI' : 'Finland',\r\n  'FR' : 'France',\r\n  'GF' : 'French Guiana',\r\n  'PF' : 'French Polynesia',\r\n  'TF' : 'French Southern Territories',\r\n  'GA' : 'Gabon',\r\n  'GM' : 'Gambia',\r\n  'GE' : 'Georgia',\r\n  'DE' : 'Germany',\r\n  'GH' : 'Ghana',\r\n  'GI' : 'Gibraltar',\r\n  'GR' : 'Greece',\r\n  'GL' : 'Greenland',\r\n  'GD' : 'Grenada',\r\n  'GP' : 'Guadeloupe',\r\n  'GU' : 'Guam',\r\n  'GT' : 'Guatemala',\r\n  'GG' : 'Guernsey',\r\n  'GN' : 'Guinea',\r\n  'GW' : 'Guinea-Bissau',\r\n  'GY' : 'Guyana',\r\n  'HT' : 'Haiti',\r\n  'HM' : 'Heard Island & Mcdonald Islands',\r\n  'VA' : 'Holy See (Vatican City State)',\r\n  'HN' : 'Honduras',\r\n  'HK' : 'Hong Kong (China)',\r\n  'HU' : 'Hungary',\r\n  'IS' : 'Iceland',\r\n  'IN' : 'India',\r\n  'ID' : 'Indonesia',\r\n  'IR' : 'Iran, Islamic Republic Of',\r\n  'IQ' : 'Iraq',\r\n  'IE' : 'Ireland',\r\n  'IM' : 'Isle Of Man',\r\n  'IL' : 'Israel',\r\n  'IT' : 'Italy',\r\n  'JM' : 'Jamaica',\r\n  'JP' : 'Japan',\r\n  'JE' : 'Jersey',\r\n  'JO' : 'Jordan',\r\n  'KZ' : 'Kazakhstan',\r\n  'KE' : 'Kenya',\r\n  'KI' : 'Kiribati',\r\n  'KR' : 'Korea',\r\n  'KP' : 'Korea, Democratic People\\'s Republic Of',\r\n  'KW' : 'Kuwait',\r\n  'KG' : 'Kyrgyzstan',\r\n  'LA' : 'Lao People\\'s Democratic Republic',\r\n  'LV' : 'Latvia',\r\n  'LB' : 'Lebanon',\r\n  'LS' : 'Lesotho',\r\n  'LR' : 'Liberia',\r\n  'LY' : 'Libyan Arab Jamahiriya',\r\n  'LI' : 'Liechtenstein',\r\n  'LT' : 'Lithuania',\r\n  'LU' : 'Luxembourg',\r\n  'MO' : 'Macao (China)',\r\n  'MK' : 'Macedonia',\r\n  'MG' : 'Madagascar',\r\n  'MW' : 'Malawi',\r\n  'MY' : 'Malaysia',\r\n  'MV' : 'Maldives',\r\n  'ML' : 'Mali',\r\n  'MT' : 'Malta',\r\n  'MH' : 'Marshall Islands',\r\n  'MQ' : 'Martinique',\r\n  'MR' : 'Mauritania',\r\n  'MU' : 'Mauritius',\r\n  'YT' : 'Mayotte',\r\n  'MX' : 'Mexico',\r\n  'FM' : 'Micronesia, Federated States Of',\r\n  'MD' : 'Moldova',\r\n  'MC' : 'Monaco',\r\n  'MN' : 'Mongolia',\r\n  'ME' : 'Montenegro',\r\n  'MS' : 'Montserrat',\r\n  'MA' : 'Morocco',\r\n  'MZ' : 'Mozambique',\r\n  'MM' : 'Myanmar',\r\n  'NA' : 'Namibia',\r\n  'NR' : 'Nauru',\r\n  'NP' : 'Nepal',\r\n  'NL' : 'Netherlands',\r\n  'AN' : 'Netherlands Antilles',\r\n  'NC' : 'New Caledonia',\r\n  'NZ' : 'New Zealand',\r\n  'NI' : 'Nicaragua',\r\n  'NE' : 'Niger',\r\n  'NG' : 'Nigeria',\r\n  'NU' : 'Niue',\r\n  'NF' : 'Norfolk Island',\r\n  'MP' : 'Northern Mariana Islands',\r\n  'NO' : 'Norway',\r\n  'OM' : 'Oman',\r\n  'PK' : 'Pakistan',\r\n  'PW' : 'Palau',\r\n  'PS' : 'Palestinian Territory, Occupied',\r\n  'PA' : 'Panama',\r\n  'PG' : 'Papua New Guinea',\r\n  'PY' : 'Paraguay',\r\n  'PE' : 'Peru',\r\n  'PH' : 'Philippines',\r\n  'PN' : 'Pitcairn',\r\n  'PL' : 'Poland',\r\n  'PT' : 'Portugal',\r\n  'PR' : 'Puerto Rico',\r\n  'QA' : 'Qatar',\r\n  'RE' : 'Reunion',\r\n  'RO' : 'Romania',\r\n  'RU' : 'Russian Federation',\r\n  'RW' : 'Rwanda',\r\n  'BL' : 'Saint Barthelemy',\r\n  'SH' : 'Saint Helena',\r\n  'KN' : 'Saint Kitts And Nevis',\r\n  'LC' : 'Saint Lucia',\r\n  'MF' : 'Saint Martin',\r\n  'PM' : 'Saint Pierre And Miquelon',\r\n  'VC' : 'Saint Vincent And Grenadines',\r\n  'WS' : 'Samoa',\r\n  'SM' : 'San Marino',\r\n  'ST' : 'Sao Tome And Principe',\r\n  'SA' : 'Saudi Arabia',\r\n  'SN' : 'Senegal',\r\n  'RS' : 'Serbia',\r\n  'SC' : 'Seychelles',\r\n  'SL' : 'Sierra Leone',\r\n  'SG' : 'Singapore',\r\n  'SK' : 'Slovakia',\r\n  'SI' : 'Slovenia',\r\n  'SB' : 'Solomon Islands',\r\n  'SO' : 'Somalia',\r\n  'ZA' : 'South Africa',\r\n  'GS' : 'South Georgia And Sandwich Isl.',\r\n  'ES' : 'Spain',\r\n  'LK' : 'Sri Lanka',\r\n  'SD' : 'Sudan',\r\n  'SS' : 'South Sudan',\r\n  'SR' : 'Suriname',\r\n  'SJ' : 'Svalbard And Jan Mayen',\r\n  'SZ' : 'Swaziland',\r\n  'SE' : 'Sweden',\r\n  'SX' : 'Sint Maarten',\r\n  'CH' : 'Switzerland',\r\n  'SY' : 'Syrian Arab Republic',\r\n  'TW' : 'Taiwan (China)',\r\n  'TJ' : 'Tajikistan',\r\n  'TZ' : 'Tanzania',\r\n  'TH' : 'Thailand',\r\n  'TL' : 'Timor-Leste',\r\n  'TG' : 'Togo',\r\n  'TK' : 'Tokelau',\r\n  'TO' : 'Tonga',\r\n  'TT' : 'Trinidad And Tobago',\r\n  'TN' : 'Tunisia',\r\n  'TR' : 'Turkey',\r\n  'TM' : 'Turkmenistan',\r\n  'TC' : 'Turks And Caicos Islands',\r\n  'TV' : 'Tuvalu',\r\n  'UG' : 'Uganda',\r\n  'UA' : 'Ukraine',\r\n  'AE' : 'United Arab Emirates',\r\n  'GB' : 'United Kingdom',\r\n  'US' : 'United States',\r\n  'UM' : 'United States Outlying Islands',\r\n  'UY' : 'Uruguay',\r\n  'UZ' : 'Uzbekistan',\r\n  'VU' : 'Vanuatu',\r\n  'VE' : 'Venezuela',\r\n  'VN' : 'Viet Nam',\r\n  'VG' : 'Virgin Islands, British',\r\n  'VI' : 'Virgin Islands, U.S.',\r\n  'WF' : 'Wallis And Futuna',\r\n  'EH' : 'Western Sahara',\r\n  'XK' : 'Kosovo',\r\n  'YE' : 'Yemen',\r\n  'ZM' : 'Zambia',\r\n  'ZW' : 'Zimbabwe'\r\n};\r\n\r\nclass SelectCountries extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={}\r\n    this.selectEl = React.createRef();\r\n    this.showSelected = React.createRef();\r\n    this.handleShipsToCountries = this.handleShipsToCountries.bind(this);\r\n    this.handleSelectEvt = this.handleSelectEvt.bind(this);\r\n    this.handleClearAllSelected = this.handleClearAllSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    let selectEl = this.selectEl.current;\r\n    let cnArr = this.props.shipsToCountries;\r\n    this.handleShipsToCountries(selectEl,cnArr);\r\n    this.handleSelectEvt(selectEl);\r\n  }\r\n\r\n  handleShipsToCountries(select,arr){\r\n    let c = arr.map((i) => {\r\n      if(countryName.hasOwnProperty(i)){\r\n        let el=document.createElement('option');\r\n        el.style.padding='5px 0';\r\n        el.setAttribute('value',i);\r\n        el.textContent=countryName[i];\r\n        select.insertAdjacentElement('afterbegin',el);\r\n        return countryName[i];\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSelectEvt(el){\r\n    const self=this;\r\n    const sp = this.showSelected.current;\r\n    el.addEventListener('change',function(evt){\r\n      let selectedOpts = [];\r\n      let selectedArr = evt.target.selectedOptions;\r\n      sp.innerHTML = '';\r\n      for(let n=0;n<selectedArr.length;n++){\r\n        if(!selectedOpts.includes(selectedArr[n].value)){\r\n          selectedOpts.push(selectedArr[n].value);\r\n          let selectedTxt = document.createElement('span');\r\n          selectedTxt.textContent = selectedArr[n].textContent+', ';\r\n          sp.appendChild(selectedTxt);\r\n        }\r\n      };\r\n      self.handleClearAllSelected(sp);\r\n      self.props.handleSelectedTargets(selectedOpts);\r\n    })\r\n  }\r\n\r\n  handleClearAllSelected(el){\r\n    const self = this;\r\n    let ch = el.querySelectorAll('span');\r\n    if(ch.length>0){\r\n      let del=document.createElement('span');\r\n      del.textContent='Clear all selected locations';\r\n      del.setAttribute('style',\"cursor:pointer;border:1px solid black;border-radius:5px;margin-left:3em;padding:2px 4px;\");\r\n      el.appendChild(del);\r\n      del.addEventListener('click',function(){\r\n        el.innerHTML = '';\r\n        self.props.handleSelectedTargets([]);\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card.Section>\r\n        <div style={{marginBottom:'1em',fontSize:'1.1em'}}>Target locations:</div>\r\n        <div style={{lineHeight:'2em'}}>You have selected: <span ref={this.showSelected} style={{fontWeight:'700'}}></span></div>\r\n        <select name=\"targetCountries\" id=\"targetCountries\" multiple={true} ref={this.selectEl} style={{height:'100px',width:'50%',paddingLeft:'.6em',marginTop:'.8em'}}>\r\n        </select>\r\n        <div style={{marginTop:'5px'}}>Please hold <span style={{backgroundColor:'#ddd',borderRadius:'5px',}}>Ctrl</span> to select multiple locations. Leave it blank if you want to target ALL countires.</div>\r\n      </Card.Section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectCountries;","module.exports = require(\"@shopify/polaris\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-float\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"store-js\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAMA;AAGA;AACA;AAjEA;AACA;AAkEA;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AATA;AAYA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AAEA;AAAA;AAMA;AACA;AAtEA;AACA;AAuEA;;;;;;;;;;;;;;;;;;;ACtRA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAjCA;AACA;AAkCA;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAbA;AAmBA;AACA;AAnEA;AACA;AAoEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AACA;AACA;AAJA;AAWA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AACA;AACA;AAJA;AAWA;AACA;AAFA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AACA;AACA;AAJA;AAWA;AACA;AAFA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAIA;AAEA;AACA;AAIA;AAEA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AACA;AA9CA;AACA;AA+CA;;;;;;;;;;;;;;;;;;;;;AC5RA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AAIA;AAIA;AACA;AACA;AACA;AAJA;AAUA;AAIA;AACA;AACA;AAHA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAZA;AAcA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AApBA;AACA;AAqBA;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AArCA;AACA;AAsCA;;;;;;;;;;;;;;;;;;;;;;ACnDA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAFA;AAOA;AACA;AAFA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAbA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAJA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AACA;AArFA;AACA;AAqFA;AAEA;;;;;;;;;;;;;;;;;;;AC/KA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAOA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AANA;AASA;AACA;AADA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AA7BA;AA+BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAfA;AACA;AAgBA;;;;;;;;;;;;;;;;;;;ACvMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AA1DA;AACA;AA2DA;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AArKA;AACA;AAsKA;;;;;;;;;;;;;;;;;;;ACzsourceRoot":""}