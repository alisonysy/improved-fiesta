{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/ResourceList.js","webpack:///./components/barList.js","webpack:///./components/contentConfig.js","webpack:///./components/customCode.js","webpack:///./components/preview.js","webpack:///./components/styleConfig.js","webpack:///./components/targetConfig.js","webpack:///./components/templateStyle.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/date/now.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-float.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./pages/index.js","webpack:///./snippets/imageDropZone.js","webpack:///./snippets/previewBar.js","webpack:///external \"@shopify/app-bridge-react\"","webpack:///external \"@shopify/app-bridge/actions\"","webpack:///external \"@shopify/polaris\"","webpack:///external \"core-js/library/fn/date/now\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/parse-float\"","webpack:///external \"graphql-tag\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"store-js\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        descriptionHtml\r\n        id\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass ResourceListWithProducts extends React.Component {\r\n  static contextType = Context;\r\n\r\n  render(){\r\n    const app = this.context;\r\n    const redirectToProduct = () => {\r\n      const redirect = Redirect.create(app);\r\n      redirect.dispatch(\r\n        Redirect.Action.APP,\r\n        '/edit-products',\r\n      );\r\n    };\r\n\r\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\r\n    return (\r\n      <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\r\n        {({data, loading, error}) => {\r\n          if (loading) return <div>Loadingâ€¦</div>;\r\n          if (error) return <div>{error.message}</div>;\r\n          console.log(data);\r\n          return (\r\n            <Card>\r\n              <ResourceList\r\n                showHeader\r\n                resourceName={{ singular: 'Product', plural: 'Products' }}\r\n                items={data.nodes}\r\n                renderItem={item => {\r\n                  const media = (\r\n                    <Thumbnail\r\n                      source={\r\n                        item.images.edges[0]\r\n                          ? item.images.edges[0].node.originalSrc\r\n                          : ''\r\n                      }\r\n                      alt={\r\n                        item.images.edges[0]\r\n                          ? item.images.edges[0].node.altText\r\n                          : ''\r\n                      }\r\n                    />\r\n                  );\r\n                  const price = item.variants.edges[0].node.price;\r\n                  return (\r\n                    <ResourceList.Item\r\n                      id={item.id}\r\n                      media={media}\r\n                      accessibilityLabel={`View details for ${item.title}`}\r\n                      onClick={() => {\r\n                        store.set('item',item);\r\n                        redirectToProduct();\r\n                      }}\r\n                    >\r\n                      <Stack>\r\n                        <Stack.Item fill>\r\n                          <h3>\r\n                            <TextStyle variation=\"strong\">\r\n                              {item.title}\r\n                            </TextStyle>\r\n                          </h3>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>${price}</p>\r\n                        </Stack.Item>\r\n                        <Stack.Item>\r\n                          <p>Expires on {twoWeeksFromNow} </p>\r\n                        </Stack.Item>\r\n                      </Stack>\r\n                    </ResourceList.Item>\r\n                  );\r\n                }}\r\n              />\r\n            </Card>\r\n          );\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ResourceListWithProducts;","import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Banner, Card } from '@shopify/polaris';\r\n\r\nconst GET_CLIENT_ID = gql`\r\n  query {\r\n    shop{\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nclass BarList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n  }\r\n\r\n  handleEdit(e,id){\r\n    console.log(id)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Query query={GET_CLIENT_ID}>\r\n        {({data, loading, error}) => {\r\n          if(loading) return <div>Loading...</div>;\r\n          if(error) return <Banner status=\"critical\">{error.message}</Banner>\r\n          console.log(data);\r\n          // #toUpdate: to fetch from database\r\n          const arrs = [{'name':'ijji','geo':'china','achievements':253,'id':2},{'name':'fe','geo':'nz','achievements':76,'id':3}]\r\n          \r\n          return (\r\n            <Card>\r\n              <table style={{width:'100%',padding:'2%'}}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Geo target</th>\r\n                    <th>Actions</th>\r\n                    <th>Achievements</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    arrs.map((item, idx)=>{\r\n                      return (\r\n                        <tr style={{textAlign:'center',lineHeight:3}} key={idx}>\r\n                          <td>{item.name}</td>\r\n                          <td>{item.geo}</td>\r\n                          <td><button onClick={(e) => this.props.handleEditId(item.id)} style={{borderColor:'transparent',background:'#000',color:'#fff',borderRadius:5}}>Edit</button></td>\r\n                          <td>{item.achievements}</td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n                  }\r\n                </tbody>\r\n              </table>\r\n            </Card>\r\n          )\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BarList;","import { Card, TextField, DisplayText, Stack, Form, FormLayout, Button, Select, Checkbox, ChoiceList } from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\n\r\nfunction NameField(){\r\n  const [name,setName] = useState('');\r\n  return ( \r\n    <FormLayout.Group>\r\n      <TextField label=\"Name: \" value={name} onChange={ (nw) => setName(nw)} />\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction FreeShippingGoal(props){\r\n  const [goal,setGoal] = useState(30);\r\n  const _handleGoalChange = function(newGoal){\r\n    setGoal(newGoal);\r\n    props.handleGoalChange(newGoal)\r\n  }\r\n  return (\r\n    <FormLayout.Group>\r\n      <TextField \r\n        label=\"Free Shipping Goal: \" \r\n        type=\"number\"\r\n        value={goal} \r\n        onChange={(nw) => _handleGoalChange(nw)} \r\n      />\r\n    </FormLayout.Group>\r\n  );\r\n}\r\n\r\nfunction InitialMsg(props){\r\n  const [msg,setMsg] = useState('Free Shipping on All Orders Over ');\r\n  const [added,setAdded] = useState('');\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({initialMsg1:msg,initialMsg2:added});\r\n  },[msg,added])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <Stack alignment=\"center\">\r\n        <TextField\r\n          label=\"Initial message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Display when cart is empty\"\r\n        />\r\n        <DisplayText>{props.currency}</DisplayText>\r\n        <DisplayText>{props.goal}</DisplayText>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction ProgressMsg(props){\r\n  const [msg,setMsg] = useState('Only ');\r\n  const [added,setAdded] = useState('');\r\n  const gl = props.goal;\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({prgMsg1:msg,prgMsg2:added})\r\n  },[msg,added])\r\n\r\n  return (\r\n    <FormLayout.Group condensed>\r\n      <Stack alignment=\"center\">\r\n        <TextField\r\n          label=\"Progress message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Displays when cart value is less than the goal\"\r\n        />\r\n        <DisplayText>{props.currency}</DisplayText>\r\n        <DisplayText>{gl-1}</DisplayText>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction GoalAchieved(props){\r\n  const [msg,setMsg] = useState('Free Shipping Worldwide');\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({achievedMsg:msg})\r\n  },[msg])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <TextField\r\n        label=\"Goal Achieved Message: \"\r\n        type=\"text\"\r\n        value={msg}\r\n        onChange={(nw) => setMsg(nw)}\r\n        helpText=\"Displays when cart value is greater than goal\"\r\n      />\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction AddLinkToBar(props){\r\n  const [havLink,setHavLink] = useState(false);\r\n  const [url,setUrl] = useState('');\r\n  const [checkbox,setChecked] = useState(false);\r\n\r\n  const opts=[\r\n    {label:'Off',value:false},\r\n    {label:'On',value:true}\r\n  ]\r\n\r\n  const handleSwitch = (val) => {\r\n    val = val === 'true'? true : false;\r\n    setHavLink(val);\r\n    if(!val){\r\n      props.handleBarLinkChange('');\r\n    }\r\n  }\r\n\r\n  const handleCheckbox = (val) => {\r\n    setChecked(val);\r\n    props.handleBarLinkChange(val);\r\n  }\r\n\r\n  return(\r\n    <FormLayout.Group>\r\n      <Select \r\n        label=\"Add Link to the Bar: \"\r\n        options={opts}\r\n        onChange={handleSwitch}\r\n        value={havLink}\r\n      />\r\n      {\r\n        havLink?\r\n        <FormLayout.Group>\r\n          <TextField\r\n            label=\"Link URL: \"\r\n            type=\"url\"\r\n            value={url}\r\n            onChange={(nw) => {setUrl(nw); props.handleBarLinkChange(nw);}}\r\n            helpText=\"This address will be visited after clicking the bar\"\r\n          />\r\n          <Checkbox \r\n            label=\"Open the link in a NEW tab when clicked\"\r\n            checked={checkbox}\r\n            onChange={(nw) => handleCheckbox(nw)}\r\n          />\r\n        </FormLayout.Group>\r\n        :\r\n        null\r\n      }\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction SetPosition(props){\r\n  const [isSelected,setSelected] = useState(['push-down']);\r\n\r\n  const choices = [\r\n    {label:'Top bar pushes down the rest of the page',value:'push-down'}, //body padding-top equals to the height of the bar, position: absolute\r\n    {label:'Top bar pushes down the rest of the page (always visible while scrolling)', value:'push-down-visible'}, // body padding-top, and position: -webkit-sticky\r\n    {label:'Top bar overlaps top of the page',value:'overlap'}, //no padding-top for body\r\n    {label:'Top bar overlaps top of the page (always visible while scrolling)',value:'overlap-visible'}, //no padding-top for body, and position:sticky\r\n    {\r\n      label:'Manual placement',\r\n      value:'manual',\r\n      renderChildren:(isSelected)=>{\r\n        return (\r\n          isSelected && (\r\n            <DisplayText size=\"small\">Place the code</DisplayText>\r\n          )\r\n        )\r\n      }}\r\n  ];\r\n\r\n  const handleSelected = (val) => {\r\n    setSelected(val);\r\n  }\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <ChoiceList \r\n        title={'Select a Display Position: '}\r\n        choices={choices}\r\n        selected={isSelected}\r\n        onChange={handleSelected}\r\n      />\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nclass ContentConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {frShGl:30,msgText:{initialMsg1:'Free Shipping on All Orders Over ',initialMsg2:'',prgMsg1:'Only ',prgMsg2:'',achievedMsg:'Free Shipping Worldwide'}}\r\n    this.handleGoalChange = this.handleGoalChange.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.handleMsgChange = this.handleMsgChange.bind(this);\r\n    this.handleBarLinkChange = this.handleBarLinkChange.bind(this);\r\n  }\r\n\r\n  handleGoalChange(newGoal){\r\n    if(parseFloat(newGoal) !== 0){\r\n      this.setState((state) => {\r\n        return {frShGl:parseFloat(newGoal)}\r\n      },function(){\r\n        this.props.handleContentConfig_goal(this.state.frShGl);\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSave(evt){\r\n    evt.persist();\r\n    setTimeout(() => {\r\n      console.log(evt);\r\n    }, 0);\r\n  };\r\n\r\n  handleMsgChange(msg){\r\n    this.setState((state)=>{\r\n      msg = {...state.msgText,...msg};\r\n      return {msgText:msg}\r\n    },function(){\r\n      this.props.handleContentConfig_msg(this.state.msgText)\r\n    });\r\n  };\r\n\r\n  handleBarLinkChange(val){\r\n    let barLinkConfig = {};\r\n    if(typeof val === 'boolean'){\r\n      barLinkConfig.openNew = val;\r\n    }else if(typeof val === 'string'){\r\n      barLinkConfig.url = val;\r\n    }\r\n    this.props.handleContentConfig_link(barLinkConfig);\r\n  }\r\n\r\n  render(){\r\n    const {frShGl} = this.state;\r\n    return (\r\n      <Card>\r\n        <Form onSubmit={this.handleSave}>\r\n          <FormLayout>\r\n\r\n            <NameField />\r\n\r\n            <FreeShippingGoal handleGoalChange={this.handleGoalChange}/>\r\n\r\n            { frShGl? \r\n              <FormLayout>\r\n                <InitialMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange}/>\r\n                <ProgressMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange} />\r\n              </FormLayout>\r\n              :\r\n              null\r\n            }\r\n            \r\n            <GoalAchieved handleMsgChange={this.handleMsgChange} />\r\n\r\n            <AddLinkToBar handleBarLinkChange={this.handleBarLinkChange} />\r\n\r\n            <SetPosition />\r\n\r\n            {/* <Button submit>Save</Button> */}\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContentConfigPage;","import { useState } from 'react'\r\nimport { TextField, Card, DisplayText, Form, FormLayout } from '@shopify/polaris'\r\n\r\nclass CustomCodePage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      customCode:''\r\n    }\r\n    this.handleCustomCode = this.handleCustomCode.bind(this);\r\n  }\r\n\r\n  handleCustomCode(val){\r\n    console.log(val);\r\n    this.setState(()=>{\r\n      return {customCode:val}\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <Form onSubmit={v => console.log(v)}>\r\n          <FormLayout>\r\n            <DisplayText size=\"small\">Custom code</DisplayText>\r\n            <textarea rows=\"10\" cols=\"80\" placeholder=\"The code here can only modify the bar style\" style={{marginLeft:'10px'}}></textarea>\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomCodePage;","import { Card, Form, FormLayout } from '@shopify/polaris';\r\nimport PreviewBar from '../snippets/previewBar';\r\n\r\nclass PreviewPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={}\r\n  }\r\n\r\n  render(){\r\n    const {barTxtConfig,barFrShGl,barLink} = this.props.contentConfig;\r\n    const bgImg = this.props.bgImg;\r\n    console.log(this.props.styleConfig);\r\n\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <PreviewBar \r\n              barConfig={{\r\n                bgColor:this.props.styleConfig.colorConfig.bgColor,\r\n                ftColor:this.props.styleConfig.colorConfig.txtColor,\r\n                spColor:this.props.styleConfig.colorConfig.specialColor,\r\n                opacity:this.props.styleConfig.colorConfig.bgOpacity,\r\n                inpTxt:barTxtConfig.initialMsg1, \r\n                goal:barFrShGl,\r\n                addedHtml:barTxtConfig.initialMsg2,\r\n                bgImg:bgImg,\r\n                fontFamily:this.props.styleConfig.fontConfig.fontFamily,\r\n                paddingUpDown:this.props.styleConfig.fontConfig.barPadding,\r\n                fontSize:this.props.styleConfig.fontConfig.fontSize\r\n              }} \r\n              barLink={barLink}\r\n            />\r\n            <PreviewBar \r\n              barConfig={{\r\n                bgColor:this.props.styleConfig.colorConfig.bgColor,\r\n                ftColor:this.props.styleConfig.colorConfig.txtColor,\r\n                spColor:this.props.styleConfig.colorConfig.specialColor,\r\n                opacity:this.props.styleConfig.colorConfig.bgOpacity,\r\n                inpTxt:barTxtConfig.prgMsg1, \r\n                goal:barFrShGl-1,\r\n                addedHtml:barTxtConfig.prgMsg2,\r\n                bgImg:bgImg,\r\n                fontFamily:this.props.styleConfig.fontConfig.fontFamily,\r\n                paddingUpDown:this.props.styleConfig.fontConfig.barPadding,\r\n                fontSize:this.props.styleConfig.fontConfig.fontSize\r\n              }} \r\n              barLink={barLink}\r\n            />\r\n            <PreviewBar \r\n              barConfig={{\r\n                bgColor:this.props.styleConfig.colorConfig.bgColor,\r\n                ftColor:this.props.styleConfig.colorConfig.txtColor,\r\n                spColor:this.props.styleConfig.colorConfig.specialColor,\r\n                opacity:this.props.styleConfig.colorConfig.bgOpacity,\r\n                inpTxt:barTxtConfig.achievedMsg, \r\n                addedHtml:barTxtConfig.initialMsg2,\r\n                bgImg:bgImg,\r\n                fontFamily:this.props.styleConfig.fontConfig.fontFamily,\r\n                paddingUpDown:this.props.styleConfig.fontConfig.barPadding,\r\n                fontSize:this.props.styleConfig.fontConfig.fontSize\r\n              }} \r\n              barLink={barLink} \r\n            />\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewPage;","import { Card, DisplayText, Stack, TextField, Button, Form, FormLayout } from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport ImageDropZone from '../snippets/imageDropZone';\r\nimport '../css/fonts.css';\r\n\r\nfunction BackgroundSetting(props){\r\n  const [bgColor, setBgColor] = useState('#000');\r\n  const [bgOpacity, setBgOpacity] = useState('100');\r\n\r\n  const [txtColor, setTxtColor] = useState('#b31219');\r\n  const [specialColor, setSpecialColor] = useState('#fff');\r\n\r\n\r\n  useEffect(()=>{\r\n    props.handleStyleConfig({\r\n      bgColor:bgColor,\r\n      bgOpacity:bgOpacity,\r\n      txtColor:txtColor,\r\n      specialColor:specialColor\r\n    },undefined);\r\n  },[bgColor,bgOpacity,txtColor,specialColor])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <Stack>\r\n        <div>\r\n          <h3>Background color:</h3>\r\n          <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:bgColor}}></div>\r\n          <TextField \r\n            value={bgColor}\r\n            onChange={nw => setBgColor(nw)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Background opacity:</h3>\r\n          <div style={{display:'inline-block'}}>{bgOpacity}</div>\r\n          <TextField \r\n            value={bgOpacity}\r\n            onChange={nw => setBgOpacity(nw)}\r\n            type=\"number\"\r\n            helpText=\"0 is transparent, 100 is opaque.\"\r\n          />\r\n        </div>\r\n      </Stack>\r\n      <Stack>\r\n        <div>\r\n          <h3>Text color:</h3>\r\n          <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:txtColor}}></div>\r\n          <TextField \r\n            value={txtColor}\r\n            onChange={nw => setTxtColor(nw)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Special text color:</h3>\r\n          <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:specialColor}}></div>\r\n          <TextField \r\n            value={specialColor}\r\n            onChange={nw => setSpecialColor(nw)}\r\n          />\r\n        </div>\r\n      </Stack>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction Fonts(props){\r\n  const [fontSize,setFontSize] = useState(18);\r\n  const [padding,setPadding] = useState(10);\r\n  const [fontFam,setFontFam] = useState('sans-serif');\r\n\r\n  const handleFontFam = useCallback(\r\n    (val) => {\r\n      setFontFam(val);\r\n      props.handleStyleConfig(undefined,{fontFamily:val});\r\n    },\r\n    [fontFam]\r\n  )\r\n\r\n  const handleFontSize = useCallback(\r\n    (val) => {\r\n      setFontSize(val);\r\n      props.handleStyleConfig(undefined,{fontSize:val})\r\n    },\r\n    []\r\n  );\r\n\r\n  const handlePadding = useCallback(\r\n    (val) => {\r\n      setPadding(val);\r\n      props.handleStyleConfig(undefined,{barPadding:val})\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Card.Section>\r\n      <div>Font family:</div>\r\n      <Button onClick={() => handleFontFam('Montserrat')}>Montserrat</Button>\r\n      <Button onClick={() => handleFontFam('sans-serif')}>Sans serif</Button>\r\n      <TextField \r\n        label=\"Font size:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={fontSize}\r\n        onChange={handleFontSize}\r\n      />\r\n      <TextField \r\n        label=\"Bar padding:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={padding}\r\n        onChange={handlePadding}\r\n      />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nclass StyleConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      colorConfig:{},\r\n      fontConfig:{},\r\n      bgImg:{}\r\n    }\r\n    this.handleStyleConfig = this.handleStyleConfig.bind(this);\r\n    this.uploadBgImg = this.uploadBgImg.bind(this);\r\n  }\r\n\r\n  handleStyleConfig(colorCf,fontCf){\r\n    this.setState((state)=>{\r\n      if(colorCf===undefined){\r\n        fontCf = {...state.fontConfig,...fontCf};\r\n        return {colorConfig:state.colorConfig,fontConfig:fontCf}\r\n      }else if(fontCf === undefined){\r\n        colorCf = {...state.colorConfig,...colorCf};\r\n        return {colorConfig:colorCf,fontConfig:state.fontConfig}\r\n      }\r\n    },function(){\r\n      this.props.handleStyleConfig(this.state.colorConfig,this.state.fontConfig);\r\n    })\r\n  }\r\n\r\n  uploadBgImg(bgFile){\r\n    this.setState({bgImg:bgFile},function(){\r\n      this.props.uploadBgImg(this.state.bgImg)\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <DisplayText>Style Configuration</DisplayText>\r\n            <BackgroundSetting handleStyleConfig={this.handleStyleConfig}/>\r\n            <ImageDropZone uploadBgImg={this.uploadBgImg}/>\r\n            <Fonts  handleStyleConfig={this.handleStyleConfig}/>\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StyleConfigPage;","import { Card, DisplayText, ChoiceList, TextField,Form, FormLayout } from '@shopify/polaris';\r\nimport { useCallback, useState } from 'react';\r\n\r\nfunction IncludePage() {\r\n  const [selected, setSelected] = useState(['all']);\r\n  const [urlInp, setUrlInp] = useState('');\r\n  const [urlExc, setUrlExc] = useState('');\r\n\r\n  const handleChange = useCallback(\r\n    (value) => {\r\n      console.log('choose display on which page',value)\r\n      setSelected(value)\r\n    }, \r\n    []\r\n  );\r\n\r\n  const handleUrlInp = useCallback(\r\n    (value) => {\r\n      console.log('url provided',value)\r\n      setUrlInp(value)\r\n    },\r\n    [],\r\n  );\r\n  const handleUrlExc = useCallback(\r\n    (val) => console.log(val),\r\n    []\r\n  );\r\n\r\n  const renderUrlInp = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField\r\n          label=\"\"\r\n          labelHidden\r\n          onChange={handleUrlInp}\r\n          value={urlInp}\r\n        />\r\n      ),\r\n    [handleUrlInp, urlInp],\r\n  );\r\n\r\n  const renderPageToExc = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField \r\n          labelHidden\r\n          onChange={handleUrlExc}\r\n          value={urlExc}\r\n        />\r\n      ),\r\n    [handleUrlExc, urlExc]\r\n  )\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <ChoiceList\r\n        title=\"Display on page:\"\r\n        choices={[\r\n          {label: 'All pages', value: 'all'},\r\n          {label: 'Homepage only', value: 'homepage'},\r\n          {label: 'Only on page with URL', value: 'url',renderChildren:renderUrlInp},\r\n          {label:'Pages to exclude',value:'exclude',renderChildren:renderPageToExc}\r\n        ]}\r\n        selected={selected}\r\n        onChange={handleChange}\r\n      />\r\n    </FormLayout.Group>\r\n  );\r\n}\r\n\r\nclass TargetConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <DisplayText size=\"small\">Target Configuration</DisplayText>\r\n            <IncludePage />\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TargetConfigPage;","import { Card } from '@shopify/polaris';\r\n\r\nfunction TemplateStyleItem(props){\r\n  const bgColor = props.bg;\r\n  const ftColor = props.ft;\r\n  const marginRt = props.mgRt? '1em' : '0';\r\n  const wid = props.mgRt? '48%' : '50%';\r\n  return (\r\n    <li style={{listStyleType:'none',width:wid,textAlign:'center',padding:'8px 0',marginTop:'5px',marginRight:marginRt,backgroundColor:bgColor,color:ftColor}}>{props.styleT}</li>\r\n  )\r\n}\r\n\r\nclass TemplateStyle extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={}\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <ul style={{display:'flex',flexFlow:'row wrap',padding:'0 2em',marginTop:'5px'}}>\r\n          <TemplateStyleItem styleT=\"Basic\" bg=\"#000\" ft=\"#fff\" mgRt=\"y\"/>\r\n          <TemplateStyleItem styleT=\"Havest Good\" bg=\"rgb(255, 240, 165)\" ft=\"rgb(182, 73, 38)\" />\r\n          <TemplateStyleItem styleT=\"Fairy Tale\" bg=\"rgb(255, 217, 210)\" ft=\"rgb(127, 77, 67)\" mgRt=\"y\"/>\r\n          <TemplateStyleItem styleT=\"Shades of Grey\" bg=\"rgb(76, 76, 76)\" ft=\"rgb(204, 204, 204)\"/>\r\n        </ul>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TemplateStyle;","module.exports = require(\"core-js/library/fn/date/now\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-float\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import { Layout, Page, ButtonGroup, Button } from '@shopify/polaris';\r\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from 'react-apollo';\r\nimport store from 'store-js';\r\n\r\nimport ResourceListWithProducts from '../components/ResourceList';\r\nimport BarList from '../components/barList';\r\nimport TemplateStyle from '../components/templateStyle';\r\nimport ContentConfigPage from '../components/contentConfig';\r\nimport StyleConfigPage from '../components/styleConfig';\r\nimport TargetConfigPage from '../components/targetConfig';\r\nimport CustomCodePage from '../components/customCode';\r\nimport PreviewPage from '../components/preview';\r\n\r\n\r\nconst INJECT_SCRIPT = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SaveUserPreference(){\r\n  const [injectScriptTag, {data,error}] = useMutation(INJECT_SCRIPT);\r\n  return (\r\n    <ButtonGroup>\r\n      <Button>Cancel</Button>\r\n      <Button primary \r\n        onClick={(e)=>{\r\n          e.preventDefault();\r\n          console.log('calling useMutation hooks');\r\n          injectScriptTag({\r\n            variables:{\r\n              input:{\r\n                displayScope:'ONLINE_STORE',\r\n                src:'https://5be47b78.ngrok.io/_next/static/chunks/topBarInjection.js'\r\n              }\r\n            },\r\n            onCompleted(){\r\n              console.log(data)\r\n            },\r\n            onError(){\r\n              console.log(error);\r\n            }\r\n          })\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n    </ButtonGroup>\r\n  )\r\n}\r\n\r\nclass Index extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      onEdit:false,\r\n      barTxtConfig:{initialMsg1:'',prgMsg1:'',achievedMsg:''},\r\n      barFrShGl:30,\r\n      barLink:{url:'',openNew:false},\r\n      barPosition:'',\r\n      bgImg:{},\r\n      styleConfig:{colorConfig:{bgColor:'#000',txtColor:'#b31219',bgOpacity:100,specialColor:'#fff'},fontConfig:{fontFamily:'sans-serif'}}\r\n    };\r\n    this.handleEditId = this.handleEditId.bind(this);\r\n  }\r\n\r\n  handleEditId(id){\r\n    console.log(id);\r\n    this.setState({onEdit:true});\r\n  }\r\n\r\n  render(){\r\n    const emptyState = !store.get('ids');\r\n    const {barTxtConfig,barFrShGl,barLink,styleConfig,bgImg} = this.state;\r\n    return (\r\n      <Page>\r\n        {/* <TitleBar \r\n          primaryAction={{\r\n            content:'Select prod',\r\n            onAction: () => this.setState({ open: true }),\r\n          }}\r\n        /> */}\r\n        {/* <ResourcePicker \r\n          resourceType=\"Product\"\r\n          showVariants={true}\r\n          open={this.state.open}\r\n          onSelection={(src)=> this.handleSelection(src)}\r\n          onCancel={ () => this.setState({ open: false })}\r\n        /> */}\r\n        <Layout.Section>\r\n          <BarList handleEditId={(id) => this.handleEditId(id)}/>\r\n          {\r\n            this.state.onEdit?\r\n            <div style={{marginTop:'3em'}}>\r\n              <TemplateStyle />\r\n              <PreviewPage \r\n                contentConfig={{barTxtConfig,barFrShGl,barLink}} \r\n                styleConfig = {{...styleConfig}}\r\n                bgImg = {bgImg}\r\n              />\r\n              <ContentConfigPage \r\n                handleContentConfig_msg={(msg)=> this.setState({barTxtConfig:{...this.barTxtConfig,...msg}})} \r\n                handleContentConfig_goal={(gl) => this.setState({barFrShGl:gl})}\r\n                handleContentConfig_link={(val)=> this.setState({barLink:{...this.state.barLink,...val}})}\r\n              />\r\n              <StyleConfigPage \r\n                handleStyleConfig={(colorCf,fontCf) => {\r\n                  this.setState({styleConfig:{colorConfig:colorCf,fontConfig:fontCf}})\r\n                }}\r\n                uploadBgImg={(bgFile) => this.setState({bgImg:bgFile})}\r\n              />\r\n              <TargetConfigPage />\r\n              <CustomCodePage />\r\n              <SaveUserPreference />\r\n            </div>\r\n            :\r\n            null\r\n          }\r\n        </Layout.Section>\r\n      </Page>\r\n    )\r\n  };\r\n\r\n  // handleSelection = (src) => {\r\n  //   const idsFromSrc = src.selection.map((prod)=> prod.id);\r\n  //   this.setState({ open: false })\r\n  //   console.log(src);\r\n  //   store.set('ids',idsFromSrc)\r\n  // }\r\n};\r\n\r\nexport default Index;","import { DropZone, Banner, Stack, List, Thumbnail, Caption, Card } from '@shopify/polaris';\r\n\r\nclass ImageDropZone extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n    this.inputRef = React.createRef();\r\n    this.handleInpImg = this.handleInpImg.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    const inputBtn = this.inputRef.current;\r\n    const self = this;\r\n    inputBtn.addEventListener('change',function(e){\r\n      self.handleInpImg(inputBtn);\r\n    });\r\n  }\r\n\r\n  handleInpImg(tg){\r\n    let img = tg.files[0],imgs,al;\r\n    let imgWrapper = document.createElement('img');\r\n    let delBtn = document.createElement('button');\r\n    const self = this;\r\n    imgs = tg.parentNode.querySelector('.imgs');\r\n\r\n    // delete button handling\r\n    delBtn.textContent = 'Delete Image';\r\n    delBtn.addEventListener('click',function(e){\r\n      e.preventDefault();\r\n      let uploadedImg = imgs.querySelector('img');\r\n      imgs.removeChild(uploadedImg);\r\n      imgs.removeChild(delBtn);\r\n      self.props.uploadBgImg({});\r\n    });\r\n    imgWrapper.src = window.URL.createObjectURL(img);\r\n\r\n    al = imgs.querySelector('img');\r\n    if(al){\r\n      imgs.removeChild(al);\r\n      imgs.insertAdjacentElement('afterbegin',imgWrapper);\r\n    }else{\r\n      imgs.insertAdjacentElement('afterbegin',imgWrapper);\r\n      imgs.insertAdjacentElement('beforeend',delBtn);\r\n    }\r\n    \r\n    this.props.uploadBgImg(img);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card.Section>\r\n        <label htmlFor=\"backgroundImg\">Click the drop zone to continue uploading more images:</label>\r\n        <div>\r\n          <input id=\"backgroundImg\" type=\"file\" accept=\"image/*\" name=\"bgImg\" ref={this.inputRef}/>\r\n          <div className=\"imgs\"></div>\r\n        </div>\r\n      </Card.Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageDropZone;","import '../css/fonts.css';\r\n\r\nclass PreviewBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {animReq:null};\r\n    this.htmlRef = React.createRef();\r\n    this.closeBtn = React.createRef();\r\n    this.topBar = React.createRef();\r\n    this.injectHtml = this.injectHtml.bind(this);\r\n    this.setAnimation = this.setAnimation.bind(this);\r\n    this.renderBarFirstLine = this.renderBarFirstLine.bind(this);\r\n    this.renderInnerBar = this.renderInnerBar.bind(this);\r\n    this._hexToRgba = this._hexToRgba.bind(this);\r\n  }\r\n\r\n  setAnimation(el,childToQuery){\r\n    let keyframeEl = document.createElement('style');\r\n    keyframeEl.textContent = `\r\n      @keyframes infiniteSlide{\r\n          from {\r\n            margin-top:0\r\n          }\r\n          to {\r\n            margin-top: -22px\r\n          }\r\n      }\r\n    `;\r\n    el.insertAdjacentElement('afterbegin',keyframeEl);\r\n    el.setAttribute('style',\"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s;\");\r\n    el.addEventListener('animationend',function(){\r\n      el.style.animation = '';\r\n      void el.offsetWidth;\r\n      let elNode = el.children[0].parentNode;\r\n      let firstChild = elNode.querySelector(childToQuery);\r\n      let clonedFirstChild = firstChild.cloneNode(true);\r\n      elNode.insertAdjacentElement('beforeend',clonedFirstChild);\r\n      elNode.removeChild(firstChild);\r\n      el.style.animation = 'infiniteSlide 2.5s';\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    // handle injected html\r\n    if(this.htmlRef.current){\r\n      let injectedHtmlElCollection = this.htmlRef.current.children; // object\r\n      for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n        let el = injectedHtmlElCollection[n];\r\n        if(el.classList.contains('link-container')){\r\n          el.setAttribute(\"style\",\"height:22px;overflow:hidden;line-height:22px;\");\r\n          if(el.children[0].tagName==='UL'){\r\n            let ul = el.children[0];\r\n            this.setAnimation(ul,'li');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // handle closing action\r\n    let closeBtn = this.closeBtn.current;\r\n    closeBtn.addEventListener('click',(e)=>{\r\n      // #todo add script when appending to page to hide the bar element\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    // handle injected html\r\n    if(this.htmlRef.current){\r\n      let injectedHtmlElCollection = this.htmlRef.current.children; // object\r\n      for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n        let el = injectedHtmlElCollection[n];\r\n        if(el.classList.contains('link-container')){\r\n          el.setAttribute(\"style\",\"height:22px;overflow:hidden;line-height:22px;\");\r\n          if(el.children[0].tagName==='UL'){\r\n            let ul = el.children[0];\r\n            this.setAnimation(ul,'li');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log('finished top bar',this.topBar.current);\r\n  }\r\n\r\n\r\n  injectHtml(html){\r\n    let contExp = /link\\-container/;\r\n    let havCont = contExp.test(html);\r\n    if(havCont){\r\n\r\n    }\r\n    return (\r\n      <span dangerouslySetInnerHTML={{__html:html}} ref={this.htmlRef} style={{textAlign:'center'}}></span>\r\n    )\r\n  }\r\n\r\n  renderBarFirstLine(barConfig){\r\n    const {goal,inpTxt,spColor} = barConfig;\r\n    return (\r\n      <span>{inpTxt}<span style={{color:spColor,fontWeight:400}}>${goal}</span></span>\r\n    )\r\n  }\r\n\r\n  renderInnerBar(barConfig){\r\n    const {inpTxt,addedHtml,ftColor,goal,opacity,bgImg,fontFamily,paddingUpDown,fontSize} = barConfig;\r\n    let {bgColor} = barConfig,imgSize=bgImg.size,imgUrl;\r\n    let padding = paddingUpDown? `${paddingUpDown}px 5px` : '8px 5px';\r\n\r\n    if(opacity !== 100){\r\n      bgColor = this._hexToRgba(bgColor,opacity);\r\n    }\r\n    \r\n    if(imgSize){\r\n      imgUrl = 'url(\"'+window.URL.createObjectURL(bgImg)+'\")';\r\n    }\r\n    \r\n    return (\r\n      <div style={{padding:padding,fontSize:fontSize? fontSize+'px' : '18px',lineHeight:'22.5px',textAlign:'center',position:'relative',backgroundColor:bgColor,color:ftColor,backgroundImage:imgUrl,fontFamily:fontFamily}}>\r\n        { goal?\r\n          this.renderBarFirstLine(barConfig)\r\n          :\r\n          inpTxt\r\n        }\r\n        { addedHtml?\r\n            this.injectHtml(addedHtml) \r\n            :\r\n            null\r\n        }\r\n        <div style={{position:'absolute',top:'8px',right:'8px',cursor:'pointer'}} ref={this.closeBtn}>X</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _hexToRgba(h,op){\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length == 4) {\r\n      r = \"0x\" + h[1] + h[1];\r\n      g = \"0x\" + h[2] + h[2];\r\n      b = \"0x\" + h[3] + h[3];\r\n\r\n    // 6 digits\r\n    } else if (h.length == 7) {\r\n      r = \"0x\" + h[1] + h[2];\r\n      g = \"0x\" + h[3] + h[4];\r\n      b = \"0x\" + h[5] + h[6];\r\n    }\r\n    \r\n    return \"rgba(\"+ +r + \",\" + +g + \",\" + +b + \",\" + op/100 + \")\";\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={{margin:'20px 0'}}>\r\n        <div ref={this.topBar}>\r\n          { this.props.barLink.url.length !== 0 ?\r\n            <a href={this.props.barLink.url} target={this.props.barLink.openNew? \"_blank\" : \"_self\"} style={{textDecoration:'none',color:'initial'}}>\r\n              { this.renderInnerBar(this.props.barConfig) }\r\n            </a>\r\n            :\r\n            this.renderInnerBar(this.props.barConfig)\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewBar;","module.exports = require(\"@shopify/app-bridge-react\");","module.exports = require(\"@shopify/app-bridge/actions\");","module.exports = require(\"@shopify/polaris\");","module.exports = require(\"core-js/library/fn/date/now\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-float\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"store-js\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AA4BA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AANA;AACA;AAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAEA;AAAA;AAcA;AA/CA;AAmDA;AAGA;AACA;AA7EA;AACA;AADA;AACA;AA8EA;;;;;;;;;;;;;;;;;;;;;;;ACnHA;AACA;AACA;AAEA;;;;;;;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAMA;AAGA;AACA;AApDA;AACA;AAqDA;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAUA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AAQA;AACA;AACA;AAHA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAKA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAAA;AASA;AACA;AA9EA;AACA;AA+EA;;;;;;;;;;;;;;;;;;;AC3RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AA5BA;AACA;AA6BA;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AAbA;AAmBA;AACA;AAnEA;AACA;AAoEA;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;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AAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAJA;AAgBA;AACA;AAxEA;AACA;AA8EA;AAEA;;;;;;;;;;;;;;;;;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AA1DA;AACA;AA2DA;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AArKA;AACA;AAsKA;;;;;;;;;;;;;;;;;;;;;;;ACzKA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}