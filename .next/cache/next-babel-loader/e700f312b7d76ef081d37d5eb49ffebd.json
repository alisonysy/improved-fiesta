{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout, Page, ButtonGroup, Button, Toast, Frame } from '@shopify/polaris';\nimport { useState, useCallback } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation, useSubscription } from 'react-apollo';\nimport store from 'store-js';\nimport BarList from '../components/barList';\nimport TemplateStyle from '../components/templateStyle';\nimport ContentConfigPage from '../components/contentConfig';\nimport StyleConfigPage from '../components/styleConfig';\nimport TargetConfigPage from '../components/targetConfig';\nimport CustomCodePage from '../components/customCode';\nimport PreviewPage from '../components/preview';\nconst INJECT_SCRIPT = gql`\n  mutation scriptTagCreate($input: ScriptTagInput!) {\n    scriptTagCreate(input: $input) {\n      scriptTag {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n\nfunction SaveUserPreference(props) {\n  const [injectScriptTag, {\n    data,\n    error\n  }] = useMutation(INJECT_SCRIPT);\n\n  const handleInjectionSuccess = (data, b) => {\n    console.log(data);\n    setTimeout(b => {\n      b = 'dismiss';\n    }, 2500);\n    return b === 'success' ? __jsx(Toast, {\n      content: \"Saved successfully.\",\n      onDismiss: () => {}\n    }) : b === 'error' ? __jsx(Toast, {\n      content: \"Something went wrong.\",\n      onDismiss: () => {}\n    }) : null;\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: '50px',\n      height: '100px'\n    }\n  }, __jsx(ButtonGroup, null, __jsx(Button, {\n    onClick: () => {\n      props.handleEdit();\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    primary: true,\n    onClick: e => {\n      e.preventDefault();\n      console.log('calling useMutation hooks');\n      injectScriptTag({\n        variables: {\n          input: {\n            displayScope: 'ONLINE_STORE',\n            src: 'https://8a9648bd.ngrok.io/_next/static/chunks/topBarInjection.js'\n          }\n        }\n      });\n    }\n  }, \"Save\")), __jsx(Frame, null, data && handleInjectionSuccess(data, 'success'), error && handleInjectionSuccess(error, 'error')));\n}\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      onEdit: false,\n      barTxtConfig: {\n        initialMsg1: '',\n        prgMsg1: '',\n        achievedMsg: ''\n      },\n      barFrShGl: 30,\n      barLink: {\n        url: '',\n        openNew: false\n      },\n      barPosition: '',\n      bgImg: {},\n      styleConfig: {\n        colorConfig: {\n          bgColor: '#000',\n          txtColor: '#b31219',\n          bgOpacity: 100,\n          specialColor: '#fff'\n        },\n        fontConfig: {\n          fontFamily: 'sans-serif'\n        }\n      }\n    };\n    this.baseState = this.state;\n    this.handleEditId = this.handleEditId.bind(this);\n  }\n\n  handleEditId(id) {\n    console.log(id);\n    this.setState({\n      onEdit: true\n    });\n  }\n\n  render() {\n    const emptyState = !store.get('ids');\n    const {\n      barTxtConfig,\n      barFrShGl,\n      barLink,\n      styleConfig,\n      bgImg\n    } = this.state;\n    return __jsx(Page, null, __jsx(Layout.Section, null, __jsx(BarList, {\n      handleEditId: id => this.handleEditId(id)\n    }), this.state.onEdit ? __jsx(\"div\", {\n      style: {\n        marginTop: '3em'\n      }\n    }, __jsx(TemplateStyle, {\n      handleClickedLi: (bg, ftColor) => this.setState\n    }), __jsx(PreviewPage, {\n      contentConfig: {\n        barTxtConfig,\n        barFrShGl,\n        barLink\n      },\n      styleConfig: _objectSpread({}, styleConfig),\n      bgImg: bgImg\n    }), __jsx(ContentConfigPage, {\n      handleContentConfig_msg: msg => this.setState({\n        barTxtConfig: _objectSpread({}, this.barTxtConfig, msg)\n      }),\n      handleContentConfig_goal: gl => this.setState({\n        barFrShGl: gl\n      }),\n      handleContentConfig_link: val => this.setState({\n        barLink: _objectSpread({}, this.state.barLink, val)\n      })\n    }), __jsx(StyleConfigPage, {\n      handleStyleConfig: (colorCf, fontCf) => {\n        this.setState({\n          styleConfig: {\n            colorConfig: colorCf,\n            fontConfig: fontCf\n          }\n        });\n      },\n      uploadBgImg: bgFile => this.setState({\n        bgImg: bgFile\n      })\n    }), __jsx(TargetConfigPage, null), __jsx(CustomCodePage, null), __jsx(SaveUserPreference, {\n      handleEdit: () => {\n        this.setState(this.baseState);\n      }\n    })) : null));\n  }\n\n}\n\n;\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\pages\\index.js"],"names":["Layout","Page","ButtonGroup","Button","Toast","Frame","useState","useCallback","gql","useMutation","useSubscription","store","BarList","TemplateStyle","ContentConfigPage","StyleConfigPage","TargetConfigPage","CustomCodePage","PreviewPage","INJECT_SCRIPT","SaveUserPreference","props","injectScriptTag","data","error","handleInjectionSuccess","b","console","log","setTimeout","marginTop","height","handleEdit","e","preventDefault","variables","input","displayScope","src","Index","React","Component","constructor","state","open","onEdit","barTxtConfig","initialMsg1","prgMsg1","achievedMsg","barFrShGl","barLink","url","openNew","barPosition","bgImg","styleConfig","colorConfig","bgColor","txtColor","bgOpacity","specialColor","fontConfig","fontFamily","baseState","handleEditId","bind","id","setState","render","emptyState","get","bg","ftColor","msg","gl","val","colorCf","fontCf","bgFile"],"mappings":"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","sourcesContent":["import { Layout, Page, ButtonGroup, Button, Toast, Frame } from '@shopify/polaris';\r\nimport { useState, useCallback } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, useSubscription } from 'react-apollo';\r\nimport store from 'store-js';\r\n\r\nimport BarList from '../components/barList';\r\nimport TemplateStyle from '../components/templateStyle';\r\nimport ContentConfigPage from '../components/contentConfig';\r\nimport StyleConfigPage from '../components/styleConfig';\r\nimport TargetConfigPage from '../components/targetConfig';\r\nimport CustomCodePage from '../components/customCode';\r\nimport PreviewPage from '../components/preview';\r\n\r\n\r\nconst INJECT_SCRIPT = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SaveUserPreference(props){\r\n  const [injectScriptTag, {data,error}] = useMutation(INJECT_SCRIPT);\r\n\r\n  const handleInjectionSuccess = (data,b) =>{\r\n    console.log(data);\r\n    setTimeout((b) => {\r\n      b='dismiss'\r\n    }, 2500);\r\n    return (\r\n      b === 'success'? \r\n      <Toast\r\n        content=\"Saved successfully.\"\r\n        onDismiss={() => {}}\r\n      />\r\n      :\r\n      b === 'error' ?\r\n      <Toast\r\n        content=\"Something went wrong.\"\r\n        onDismiss={ () => {}}\r\n      />\r\n      :\r\n      null\r\n    )\r\n  };\r\n  \r\n  return (\r\n    <div style={{marginTop:'50px',height:'100px'}}>\r\n      <ButtonGroup>\r\n        <Button\r\n          onClick = {()=>{\r\n            props.handleEdit();\r\n          }}\r\n        >Cancel</Button>\r\n        <Button primary \r\n          onClick={(e)=>{\r\n            e.preventDefault();\r\n            console.log('calling useMutation hooks');\r\n            injectScriptTag({\r\n              variables:{\r\n                input:{\r\n                  displayScope:'ONLINE_STORE',\r\n                  src:'https://8a9648bd.ngrok.io/_next/static/chunks/topBarInjection.js'\r\n                }\r\n              }\r\n            })\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Frame>\r\n        { data && handleInjectionSuccess(data,'success')}\r\n        { error &&  handleInjectionSuccess(error,'error') }\r\n      </Frame>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Index extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      onEdit:false,\r\n      barTxtConfig:{initialMsg1:'',prgMsg1:'',achievedMsg:''},\r\n      barFrShGl:30,\r\n      barLink:{url:'',openNew:false},\r\n      barPosition:'',\r\n      bgImg:{},\r\n      styleConfig:{colorConfig:{bgColor:'#000',txtColor:'#b31219',bgOpacity:100,specialColor:'#fff'},fontConfig:{fontFamily:'sans-serif'}}\r\n    };\r\n    this.baseState = this.state;\r\n    this.handleEditId = this.handleEditId.bind(this);\r\n  }\r\n\r\n  handleEditId(id){\r\n    console.log(id);\r\n    this.setState({onEdit:true});\r\n  }\r\n\r\n  render(){\r\n    const emptyState = !store.get('ids');\r\n    const {barTxtConfig,barFrShGl,barLink,styleConfig,bgImg} = this.state;\r\n    return (\r\n      <Page>\r\n        <Layout.Section>\r\n          <BarList handleEditId={(id) => this.handleEditId(id)}/>\r\n          {\r\n            this.state.onEdit?\r\n            <div style={{marginTop:'3em'}}>\r\n              <TemplateStyle handleClickedLi={(bg,ftColor) => this.setState}/>\r\n              <PreviewPage \r\n                contentConfig={{barTxtConfig,barFrShGl,barLink}} \r\n                styleConfig = {{...styleConfig}}\r\n                bgImg = {bgImg}\r\n              />\r\n              <ContentConfigPage \r\n                handleContentConfig_msg={(msg)=> this.setState({barTxtConfig:{...this.barTxtConfig,...msg}})} \r\n                handleContentConfig_goal={(gl) => this.setState({barFrShGl:gl})}\r\n                handleContentConfig_link={(val)=> this.setState({barLink:{...this.state.barLink,...val}})}\r\n              />\r\n              <StyleConfigPage \r\n                handleStyleConfig={(colorCf,fontCf) => {\r\n                  this.setState({styleConfig:{colorConfig:colorCf,fontConfig:fontCf}})\r\n                }}\r\n                uploadBgImg={(bgFile) => this.setState({bgImg:bgFile})}\r\n              />\r\n              <TargetConfigPage />\r\n              <CustomCodePage />\r\n              <SaveUserPreference handleEdit={()=> {\r\n                  this.setState(this.baseState);\r\n                }}\r\n              />\r\n            </div>\r\n            :\r\n            null\r\n          }\r\n        </Layout.Section>\r\n      </Page>\r\n    )\r\n  };\r\n\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}