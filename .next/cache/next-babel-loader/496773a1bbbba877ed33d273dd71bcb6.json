{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport '../css/fonts.css';\n\nclass PreviewBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      animReq: null\n    };\n    this.htmlRef = React.createRef();\n    this.closeBtn = React.createRef();\n    this.topBar = React.createRef();\n    this.injectHtml = this.injectHtml.bind(this);\n    this.setAnimation = this.setAnimation.bind(this);\n    this.renderBarFirstLine = this.renderBarFirstLine.bind(this);\n    this.renderInnerBar = this.renderInnerBar.bind(this);\n    this._hexToRgba = this._hexToRgba.bind(this);\n  }\n\n  setAnimation(el, childToQuery) {\n    let keyframeEl = document.createElement('style');\n    keyframeEl.textContent = `\n      @keyframes infiniteSlide{\n          from {\n            margin-top:0\n          }\n          to {\n            margin-top: -22px\n          }\n      }\n    `;\n    el.insertAdjacentElement('afterbegin', keyframeEl);\n    el.setAttribute('style', \"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s;\");\n    el.addEventListener('animationend', function () {\n      el.style.animation = '';\n      void el.offsetWidth;\n      let elNode = el.children[0].parentNode;\n      let firstChild = elNode.querySelector(childToQuery);\n      let clonedFirstChild = firstChild.cloneNode(true);\n      elNode.insertAdjacentElement('beforeend', clonedFirstChild);\n      elNode.removeChild(firstChild);\n      el.style.animation = 'infiniteSlide 2.5s';\n    });\n  }\n\n  componentDidMount() {\n    // handle injected html\n    if (this.htmlRef.current) {\n      let injectedHtmlElCollection = this.htmlRef.current.children; // object\n\n      for (let n = 0; n < injectedHtmlElCollection.length; n++) {\n        let el = injectedHtmlElCollection[n];\n\n        if (el.classList.contains('link-container')) {\n          el.setAttribute(\"style\", \"height:22px;overflow:hidden;line-height:22px;\");\n\n          if (el.children[0].tagName === 'UL') {\n            let ul = el.children[0];\n            this.setAnimation(ul, 'li');\n          }\n        }\n      }\n    } // handle closing action\n\n\n    let closeBtn = this.closeBtn.current;\n    closeBtn.addEventListener('click', e => {// #todo add script when appending to page to hide the bar element\n    });\n  }\n\n  componentDidUpdate() {\n    // handle injected html\n    if (this.htmlRef.current) {\n      let injectedHtmlElCollection = this.htmlRef.current.children; // object\n\n      for (let n = 0; n < injectedHtmlElCollection.length; n++) {\n        let el = injectedHtmlElCollection[n];\n\n        if (el.classList.contains('link-container')) {\n          el.setAttribute(\"style\", \"height:22px;overflow:hidden;line-height:22px;\");\n\n          if (el.children[0].tagName === 'UL') {\n            let ul = el.children[0];\n            this.setAnimation(ul, 'li');\n          }\n        }\n      }\n    }\n\n    console.log('finished top bar', this.topBar.current);\n  }\n\n  injectHtml(html) {\n    let contExp = /link\\-container/;\n    let havCont = contExp.test(html);\n\n    if (havCont) {}\n\n    return __jsx(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: html\n      },\n      ref: this.htmlRef,\n      style: {\n        textAlign: 'center'\n      }\n    });\n  }\n\n  renderBarFirstLine(barConfig) {\n    const {\n      goal,\n      inpTxt,\n      spColor\n    } = barConfig;\n    return __jsx(\"span\", null, inpTxt, __jsx(\"span\", {\n      style: {\n        color: spColor,\n        fontWeight: 400\n      }\n    }, \"$\", goal));\n  }\n\n  renderInnerBar(barConfig) {\n    const {\n      inpTxt,\n      addedHtml,\n      ftColor,\n      goal,\n      opacity,\n      bgImg,\n      fontFamily,\n      paddingUpDown,\n      fontSize\n    } = barConfig;\n    let {\n      bgColor\n    } = barConfig,\n        imgSize = bgImg.size,\n        imgUrl;\n    console.log('bgColor', bgColor);\n    let padding = paddingUpDown ? `${paddingUpDown}px 5px` : '8px 5px';\n\n    if (opacity !== 100) {\n      bgColor = this._hexToRgba(bgColor, opacity);\n    }\n\n    if (imgSize) {\n      imgUrl = 'url(\"' + window.URL.createObjectURL(bgImg) + '\")';\n    }\n\n    return __jsx(\"div\", {\n      style: {\n        padding: padding,\n        fontSize: fontSize ? fontSize + 'px' : '18px',\n        lineHeight: '22.5px',\n        textAlign: 'center',\n        position: 'relative',\n        backgroundColor: bgColor,\n        color: ftColor,\n        backgroundImage: imgUrl,\n        fontFamily: fontFamily\n      }\n    }, goal ? this.renderBarFirstLine(barConfig) : inpTxt + bgColor, addedHtml ? this.injectHtml(addedHtml) : null, __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '8px',\n        right: '8px',\n        cursor: 'pointer'\n      },\n      ref: this.closeBtn\n    }, \"X\"));\n  }\n\n  _hexToRgba(h, op) {\n    let r = 0,\n        g = 0,\n        b = 0; // 3 digits\n\n    if (h.length == 4) {\n      r = \"0x\" + h[1] + h[1];\n      g = \"0x\" + h[2] + h[2];\n      b = \"0x\" + h[3] + h[3]; // 6 digits\n    } else if (h.length == 7) {\n      r = \"0x\" + h[1] + h[2];\n      g = \"0x\" + h[3] + h[4];\n      b = \"0x\" + h[5] + h[6];\n    }\n\n    return \"rgba(\" + +r + \",\" + +g + \",\" + +b + \",\" + op / 100 + \")\";\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        margin: '20px 0'\n      }\n    }, __jsx(\"div\", {\n      ref: this.topBar\n    }, this.props.barLink.url.length !== 0 ? __jsx(\"a\", {\n      href: this.props.barLink.url,\n      target: this.props.barLink.openNew ? \"_blank\" : \"_self\",\n      style: {\n        textDecoration: 'none',\n        color: 'initial'\n      }\n    }, this.renderInnerBar(this.props.barConfig)) : this.renderInnerBar(this.props.barConfig)));\n  }\n\n}\n\nexport default PreviewBar;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\previewBar.js"],"names":["PreviewBar","React","Component","constructor","props","state","animReq","htmlRef","createRef","closeBtn","topBar","injectHtml","bind","setAnimation","renderBarFirstLine","renderInnerBar","_hexToRgba","el","childToQuery","keyframeEl","document","createElement","textContent","insertAdjacentElement","setAttribute","addEventListener","style","animation","offsetWidth","elNode","children","parentNode","firstChild","querySelector","clonedFirstChild","cloneNode","removeChild","componentDidMount","current","injectedHtmlElCollection","n","length","classList","contains","tagName","ul","e","componentDidUpdate","console","log","html","contExp","havCont","test","__html","textAlign","barConfig","goal","inpTxt","spColor","color","fontWeight","addedHtml","ftColor","opacity","bgImg","fontFamily","paddingUpDown","fontSize","bgColor","imgSize","size","imgUrl","padding","window","URL","createObjectURL","lineHeight","position","backgroundColor","backgroundImage","top","right","cursor","h","op","r","g","b","render","margin","barLink","url","openNew","textDecoration"],"mappings":"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","sourcesContent":["import '../css/fonts.css';\r\n\r\nclass PreviewBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {animReq:null};\r\n    this.htmlRef = React.createRef();\r\n    this.closeBtn = React.createRef();\r\n    this.topBar = React.createRef();\r\n    this.injectHtml = this.injectHtml.bind(this);\r\n    this.setAnimation = this.setAnimation.bind(this);\r\n    this.renderBarFirstLine = this.renderBarFirstLine.bind(this);\r\n    this.renderInnerBar = this.renderInnerBar.bind(this);\r\n    this._hexToRgba = this._hexToRgba.bind(this);\r\n  }\r\n\r\n  setAnimation(el,childToQuery){\r\n    let keyframeEl = document.createElement('style');\r\n    keyframeEl.textContent = `\r\n      @keyframes infiniteSlide{\r\n          from {\r\n            margin-top:0\r\n          }\r\n          to {\r\n            margin-top: -22px\r\n          }\r\n      }\r\n    `;\r\n    el.insertAdjacentElement('afterbegin',keyframeEl);\r\n    el.setAttribute('style',\"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s;\");\r\n    el.addEventListener('animationend',function(){\r\n      el.style.animation = '';\r\n      void el.offsetWidth;\r\n      let elNode = el.children[0].parentNode;\r\n      let firstChild = elNode.querySelector(childToQuery);\r\n      let clonedFirstChild = firstChild.cloneNode(true);\r\n      elNode.insertAdjacentElement('beforeend',clonedFirstChild);\r\n      elNode.removeChild(firstChild);\r\n      el.style.animation = 'infiniteSlide 2.5s';\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    // handle injected html\r\n    if(this.htmlRef.current){\r\n      let injectedHtmlElCollection = this.htmlRef.current.children; // object\r\n      for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n        let el = injectedHtmlElCollection[n];\r\n        if(el.classList.contains('link-container')){\r\n          el.setAttribute(\"style\",\"height:22px;overflow:hidden;line-height:22px;\");\r\n          if(el.children[0].tagName==='UL'){\r\n            let ul = el.children[0];\r\n            this.setAnimation(ul,'li');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    // handle closing action\r\n    let closeBtn = this.closeBtn.current;\r\n    closeBtn.addEventListener('click',(e)=>{\r\n      // #todo add script when appending to page to hide the bar element\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    // handle injected html\r\n    if(this.htmlRef.current){\r\n      let injectedHtmlElCollection = this.htmlRef.current.children; // object\r\n      for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n        let el = injectedHtmlElCollection[n];\r\n        if(el.classList.contains('link-container')){\r\n          el.setAttribute(\"style\",\"height:22px;overflow:hidden;line-height:22px;\");\r\n          if(el.children[0].tagName==='UL'){\r\n            let ul = el.children[0];\r\n            this.setAnimation(ul,'li');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log('finished top bar',this.topBar.current);\r\n  }\r\n\r\n\r\n  injectHtml(html){\r\n    let contExp = /link\\-container/;\r\n    let havCont = contExp.test(html);\r\n    if(havCont){\r\n\r\n    }\r\n    return (\r\n      <span dangerouslySetInnerHTML={{__html:html}} ref={this.htmlRef} style={{textAlign:'center'}}></span>\r\n    )\r\n  }\r\n\r\n  renderBarFirstLine(barConfig){\r\n    const {goal,inpTxt,spColor} = barConfig;\r\n    return (\r\n      <span>{inpTxt}<span style={{color:spColor,fontWeight:400}}>${goal}</span></span>\r\n    )\r\n  }\r\n\r\n  renderInnerBar(barConfig){\r\n    const {inpTxt,addedHtml,ftColor,goal,opacity,bgImg,fontFamily,paddingUpDown,fontSize} = barConfig;\r\n    let {bgColor} = barConfig,imgSize=bgImg.size,imgUrl;\r\n    console.log('bgColor',bgColor);\r\n    let padding = paddingUpDown? `${paddingUpDown}px 5px` : '8px 5px';\r\n\r\n    if(opacity !== 100){\r\n      bgColor = this._hexToRgba(bgColor,opacity);\r\n    }\r\n    \r\n    if(imgSize){\r\n      imgUrl = 'url(\"'+window.URL.createObjectURL(bgImg)+'\")';\r\n    }\r\n    \r\n    return (\r\n      <div style={{padding:padding,fontSize:fontSize? fontSize+'px' : '18px',lineHeight:'22.5px',textAlign:'center',position:'relative',backgroundColor:bgColor,color:ftColor,backgroundImage:imgUrl,fontFamily:fontFamily}}>\r\n        { goal?\r\n          this.renderBarFirstLine(barConfig)\r\n          :\r\n          inpTxt+bgColor\r\n        }\r\n        { addedHtml?\r\n            this.injectHtml(addedHtml) \r\n            :\r\n            null\r\n        }\r\n        <div style={{position:'absolute',top:'8px',right:'8px',cursor:'pointer'}} ref={this.closeBtn}>X</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _hexToRgba(h,op){\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length == 4) {\r\n      r = \"0x\" + h[1] + h[1];\r\n      g = \"0x\" + h[2] + h[2];\r\n      b = \"0x\" + h[3] + h[3];\r\n\r\n    // 6 digits\r\n    } else if (h.length == 7) {\r\n      r = \"0x\" + h[1] + h[2];\r\n      g = \"0x\" + h[3] + h[4];\r\n      b = \"0x\" + h[5] + h[6];\r\n    }\r\n    \r\n    return \"rgba(\"+ +r + \",\" + +g + \",\" + +b + \",\" + op/100 + \")\";\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={{margin:'20px 0'}}>\r\n        <div ref={this.topBar}>\r\n          { this.props.barLink.url.length !== 0 ?\r\n            <a href={this.props.barLink.url} target={this.props.barLink.openNew? \"_blank\" : \"_self\"} style={{textDecoration:'none',color:'initial'}}>\r\n              { this.renderInnerBar(this.props.barConfig) }\r\n            </a>\r\n            :\r\n            this.renderInnerBar(this.props.barConfig)\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewBar;"]},"metadata":{},"sourceType":"module"}