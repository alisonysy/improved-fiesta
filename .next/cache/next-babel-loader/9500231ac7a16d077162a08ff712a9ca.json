{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { DropZone, Banner, Stack, List, Thumbnail, Caption, Card } from '@shopify/polaris';\n\nvar ImageDropZone =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageDropZone, _React$Component);\n\n  function ImageDropZone(props) {\n    var _this;\n\n    _classCallCheck(this, ImageDropZone);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageDropZone).call(this, props));\n    _this.state = {};\n    _this.inputRef = React.createRef();\n    _this.handleInpImg = _this.handleInpImg.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ImageDropZone, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var inputBtn = this.inputRef.current;\n      var self = this;\n      inputBtn.addEventListener('change', function (e) {\n        self.handleInpImg(inputBtn);\n      });\n    }\n  }, {\n    key: \"handleInpImg\",\n    value: function handleInpImg(tg) {\n      var img = tg.files[0],\n          imgs,\n          al;\n      var imgWrapper = document.createElement('img');\n      var delBtn = document.createElement('button');\n      var self = this;\n      imgs = tg.parentNode.querySelector('.imgs'); // delete button handling\n\n      delBtn.textContent = 'Delete Image';\n      delBtn.addEventListener('click', function (e) {\n        e.preventDefault();\n        var uploadedImg = imgs.querySelector('img');\n        imgs.removeChild(uploadedImg);\n        imgs.removeChild(delBtn);\n        self.props.uploadBgImg({});\n      });\n      imgWrapper.src = window.URL.createObjectURL(img);\n      al = imgs.querySelector('img');\n\n      if (al) {\n        imgs.removeChild(al);\n        imgs.insertAdjacentElement('afterbegin', imgWrapper);\n      } else {\n        imgs.insertAdjacentElement('afterbegin', imgWrapper);\n        imgs.insertAdjacentElement('beforeend', delBtn);\n      }\n\n      this.props.uploadBgImg(img);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Card.Section, null, __jsx(\"label\", {\n        htmlFor: \"backgroundImg\"\n      }, \"Click the drop zone to continue uploading more images:\"), __jsx(\"div\", null, __jsx(\"input\", {\n        id: \"backgroundImg\",\n        type: \"file\",\n        accept: \"image/*\",\n        name: \"bgImg\",\n        ref: this.inputRef\n      }), __jsx(\"div\", {\n        className: \"imgs\"\n      })));\n    }\n  }]);\n\n  return ImageDropZone;\n}(React.Component);\n\nexport default ImageDropZone;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\imageDropZone.js"],"names":["DropZone","Banner","Stack","List","Thumbnail","Caption","Card","ImageDropZone","props","state","inputRef","React","createRef","handleInpImg","bind","inputBtn","current","self","addEventListener","e","tg","img","files","imgs","al","imgWrapper","document","createElement","delBtn","parentNode","querySelector","textContent","preventDefault","uploadedImg","removeChild","uploadBgImg","src","window","URL","createObjectURL","insertAdjacentElement","Component"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,SAAxC,EAAmDC,OAAnD,EAA4DC,IAA5D,QAAwE,kBAAxE;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAEA,UAAKC,QAAL,GAAgBC,KAAK,CAACC,SAAN,EAAhB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AALgB;AAMjB;;;;yCAEmB;AAClB,UAAMC,QAAQ,GAAG,KAAKL,QAAL,CAAcM,OAA/B;AACA,UAAMC,IAAI,GAAG,IAAb;AACAF,MAAAA,QAAQ,CAACG,gBAAT,CAA0B,QAA1B,EAAmC,UAASC,CAAT,EAAW;AAC5CF,QAAAA,IAAI,CAACJ,YAAL,CAAkBE,QAAlB;AACD,OAFD;AAGD;;;iCAEYK,E,EAAG;AACd,UAAIC,GAAG,GAAGD,EAAE,CAACE,KAAH,CAAS,CAAT,CAAV;AAAA,UAAsBC,IAAtB;AAAA,UAA2BC,EAA3B;AACA,UAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACA,UAAIC,MAAM,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACA,UAAMV,IAAI,GAAG,IAAb;AACAM,MAAAA,IAAI,GAAGH,EAAE,CAACS,UAAH,CAAcC,aAAd,CAA4B,OAA5B,CAAP,CALc,CAOd;;AACAF,MAAAA,MAAM,CAACG,WAAP,GAAqB,cAArB;AACAH,MAAAA,MAAM,CAACV,gBAAP,CAAwB,OAAxB,EAAgC,UAASC,CAAT,EAAW;AACzCA,QAAAA,CAAC,CAACa,cAAF;AACA,YAAIC,WAAW,GAAGV,IAAI,CAACO,aAAL,CAAmB,KAAnB,CAAlB;AACAP,QAAAA,IAAI,CAACW,WAAL,CAAiBD,WAAjB;AACAV,QAAAA,IAAI,CAACW,WAAL,CAAiBN,MAAjB;AACAX,QAAAA,IAAI,CAACT,KAAL,CAAW2B,WAAX,CAAuB,EAAvB;AACD,OAND;AAOAV,MAAAA,UAAU,CAACW,GAAX,GAAiBC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BlB,GAA3B,CAAjB;AAEAG,MAAAA,EAAE,GAAGD,IAAI,CAACO,aAAL,CAAmB,KAAnB,CAAL;;AACA,UAAGN,EAAH,EAAM;AACJD,QAAAA,IAAI,CAACW,WAAL,CAAiBV,EAAjB;AACAD,QAAAA,IAAI,CAACiB,qBAAL,CAA2B,YAA3B,EAAwCf,UAAxC;AACD,OAHD,MAGK;AACHF,QAAAA,IAAI,CAACiB,qBAAL,CAA2B,YAA3B,EAAwCf,UAAxC;AACAF,QAAAA,IAAI,CAACiB,qBAAL,CAA2B,WAA3B,EAAuCZ,MAAvC;AACD;;AAED,WAAKpB,KAAL,CAAW2B,WAAX,CAAuBd,GAAvB;AACD;;;6BAEO;AACN,aACE,MAAC,IAAD,CAAM,OAAN,QACE;AAAO,QAAA,OAAO,EAAC;AAAf,kEADF,EAEE,mBACE;AAAO,QAAA,EAAE,EAAC,eAAV;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,MAAM,EAAC,SAA7C;AAAuD,QAAA,IAAI,EAAC,OAA5D;AAAoE,QAAA,GAAG,EAAE,KAAKX;AAA9E,QADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,QAFF,CAFF,CADF;AASD;;;;EAzDyBC,KAAK,CAAC8B,S;;AA4DlC,eAAelC,aAAf","sourcesContent":["import { DropZone, Banner, Stack, List, Thumbnail, Caption, Card } from '@shopify/polaris';\r\n\r\nclass ImageDropZone extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n    this.inputRef = React.createRef();\r\n    this.handleInpImg = this.handleInpImg.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    const inputBtn = this.inputRef.current;\r\n    const self = this;\r\n    inputBtn.addEventListener('change',function(e){\r\n      self.handleInpImg(inputBtn);\r\n    });\r\n  }\r\n\r\n  handleInpImg(tg){\r\n    let img = tg.files[0],imgs,al;\r\n    let imgWrapper = document.createElement('img');\r\n    let delBtn = document.createElement('button');\r\n    const self = this;\r\n    imgs = tg.parentNode.querySelector('.imgs');\r\n\r\n    // delete button handling\r\n    delBtn.textContent = 'Delete Image';\r\n    delBtn.addEventListener('click',function(e){\r\n      e.preventDefault();\r\n      let uploadedImg = imgs.querySelector('img');\r\n      imgs.removeChild(uploadedImg);\r\n      imgs.removeChild(delBtn);\r\n      self.props.uploadBgImg({});\r\n    });\r\n    imgWrapper.src = window.URL.createObjectURL(img);\r\n\r\n    al = imgs.querySelector('img');\r\n    if(al){\r\n      imgs.removeChild(al);\r\n      imgs.insertAdjacentElement('afterbegin',imgWrapper);\r\n    }else{\r\n      imgs.insertAdjacentElement('afterbegin',imgWrapper);\r\n      imgs.insertAdjacentElement('beforeend',delBtn);\r\n    }\r\n    \r\n    this.props.uploadBgImg(img);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card.Section>\r\n        <label htmlFor=\"backgroundImg\">Click the drop zone to continue uploading more images:</label>\r\n        <div>\r\n          <input id=\"backgroundImg\" type=\"file\" accept=\"image/*\" name=\"bgImg\" ref={this.inputRef}/>\r\n          <div className=\"imgs\"></div>\r\n        </div>\r\n      </Card.Section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageDropZone;"]},"metadata":{},"sourceType":"module"}