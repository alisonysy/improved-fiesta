{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nclass PreviewBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      animReq: null\n    };\n    this.htmlRef = React.createRef();\n    this.closeBtn = React.createRef();\n    this.injectHtml = this.injectHtml.bind(this);\n    this.setAnimation = this.setAnimation.bind(this);\n  }\n\n  setAnimation(el, childToQuery) {\n    let keyframeEl = document.createElement('style');\n    keyframeEl.textContent = `\n      @keyframes infiniteSlide{\n          from {\n            margin-top:0\n          }\n          to {\n            margin-top: -22px\n          }\n      }\n    `;\n    el.insertAdjacentElement('afterbegin', keyframeEl);\n    el.setAttribute('style', \"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s;\");\n    el.addEventListener('animationend', function () {\n      el.style.animation = '';\n      void el.offsetWidth;\n      let elNode = el.children[0].parentNode;\n      let firstChild = elNode.querySelector(childToQuery);\n      let clonedFirstChild = firstChild.cloneNode(true);\n      elNode.insertAdjacentElement('beforeend', clonedFirstChild);\n      elNode.removeChild(firstChild);\n      el.style.animation = 'infiniteSlide 2.5s';\n    });\n  }\n\n  componentDidMount() {\n    // handle injected html\n    let injectedHtmlElCollection = this.htmlRef.current.children; // object\n\n    for (let n = 0; n < injectedHtmlElCollection.length; n++) {\n      let el = injectedHtmlElCollection[n];\n\n      if (el.classList.contains('link-container')) {\n        el.setAttribute(\"style\", \"height:22px;overflow:hidden;line-height:22px;\");\n\n        if (el.children[0].tagName === 'UL') {\n          let ul = el.children[0];\n          this.setAnimation(ul, 'li');\n        }\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    console.log('component updated');\n  }\n\n  injectHtml(html) {\n    let contExp = /link\\-container/;\n    let havCont = contExp.test(html);\n\n    if (havCont) {}\n\n    console.log('injected');\n    return __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: html\n      },\n      ref: this.htmlRef,\n      style: {\n        textAlign: 'center'\n      }\n    });\n  }\n\n  render() {\n    const {\n      bgColor,\n      ftColor\n    } = this.props.barConfig;\n    return __jsx(\"div\", {\n      style: {\n        margin: '20px 0'\n      }\n    }, __jsx(\"div\", {\n      style: {\n        padding: '8px 5px',\n        textAlign: 'center',\n        position: 'relative',\n        backgroundColor: bgColor,\n        color: ftColor\n      }\n    }, this.props.barConfig.goal ? this.props.barConfig.inpTxt + '$' + this.props.barConfig.goal : this.props.barConfig.inpTxt, this.props.barConfig.addedHtml ? this.injectHtml(this.props.barConfig.addedHtml) : null, __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '8px',\n        right: '8px',\n        cursor: 'pointer'\n      },\n      ref: this.closeBtn\n    }, \"X\")));\n  }\n\n}\n\nexport default PreviewBar;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\previewBar.js"],"names":["PreviewBar","React","Component","constructor","props","state","animReq","htmlRef","createRef","closeBtn","injectHtml","bind","setAnimation","el","childToQuery","keyframeEl","document","createElement","textContent","insertAdjacentElement","setAttribute","addEventListener","style","animation","offsetWidth","elNode","children","parentNode","firstChild","querySelector","clonedFirstChild","cloneNode","removeChild","componentDidMount","injectedHtmlElCollection","current","n","length","classList","contains","tagName","ul","componentDidUpdate","console","log","html","contExp","havCont","test","__html","textAlign","render","bgColor","ftColor","barConfig","margin","padding","position","backgroundColor","color","goal","inpTxt","addedHtml","top","right","cursor"],"mappings":"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","sourcesContent":["\r\nclass PreviewBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {animReq:null};\r\n    this.htmlRef = React.createRef();\r\n    this.closeBtn = React.createRef();\r\n    this.injectHtml = this.injectHtml.bind(this);\r\n    this.setAnimation = this.setAnimation.bind(this);\r\n  }\r\n\r\n  setAnimation(el,childToQuery){\r\n    let keyframeEl = document.createElement('style');\r\n    keyframeEl.textContent = `\r\n      @keyframes infiniteSlide{\r\n          from {\r\n            margin-top:0\r\n          }\r\n          to {\r\n            margin-top: -22px\r\n          }\r\n      }\r\n    `;\r\n    el.insertAdjacentElement('afterbegin',keyframeEl);\r\n    el.setAttribute('style',\"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s;\");\r\n    el.addEventListener('animationend',function(){\r\n      el.style.animation = '';\r\n      void el.offsetWidth;\r\n      let elNode = el.children[0].parentNode;\r\n      let firstChild = elNode.querySelector(childToQuery);\r\n      let clonedFirstChild = firstChild.cloneNode(true);\r\n      elNode.insertAdjacentElement('beforeend',clonedFirstChild);\r\n      elNode.removeChild(firstChild);\r\n      el.style.animation = 'infiniteSlide 2.5s';\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    // handle injected html\r\n    let injectedHtmlElCollection = this.htmlRef.current.children; // object\r\n    for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n      let el = injectedHtmlElCollection[n];\r\n      if(el.classList.contains('link-container')){\r\n        el.setAttribute(\"style\",\"height:22px;overflow:hidden;line-height:22px;\");\r\n        if(el.children[0].tagName==='UL'){\r\n          let ul = el.children[0];\r\n          this.setAnimation(ul,'li');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log('component updated')\r\n  }\r\n\r\n  injectHtml(html){\r\n    let contExp = /link\\-container/;\r\n    let havCont = contExp.test(html);\r\n    if(havCont){\r\n\r\n    }\r\n    console.log('injected')\r\n    return (\r\n      <div dangerouslySetInnerHTML={{__html:html}} ref={this.htmlRef} style={{textAlign:'center'}}></div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    const {bgColor, ftColor } = this.props.barConfig;\r\n    return (\r\n      <div style={{margin:'20px 0'}}>\r\n        <div style={{padding:'8px 5px',textAlign:'center',position:'relative',backgroundColor:bgColor,color:ftColor}}>\r\n          { this.props.barConfig.goal?\r\n            this.props.barConfig.inpTxt + '$' + this.props.barConfig.goal\r\n            :\r\n            this.props.barConfig.inpTxt\r\n          }\r\n          {/* #question: how to turn user input into raw html */}\r\n          { this.props.barConfig.addedHtml?\r\n              this.injectHtml(this.props.barConfig.addedHtml) \r\n              :\r\n              null\r\n          }\r\n          <div style={{position:'absolute',top:'8px',right:'8px',cursor:'pointer'}} ref={this.closeBtn}>X</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewBar;"]},"metadata":{},"sourceType":"module"}