{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, DisplayText, ChoiceList, TextField, Form, FormLayout } from '@shopify/polaris';\nimport { useCallback, useState } from 'react';\n\nfunction IncludePage() {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(['all']);\n  const {\n    0: urlInp,\n    1: setUrlInp\n  } = useState('');\n  const {\n    0: urlExc,\n    1: setUrlExc\n  } = useState('');\n  const handleChange = useCallback(value => {\n    console.log('choose display on which page', value);\n    setSelected(value);\n  }, []);\n  const handleUrlInp = useCallback(value => {\n    console.log('url provided', value);\n    setUrlInp(value);\n  }, []);\n  const handleUrlExc = useCallback(val => console.log(val), []);\n  const renderUrlInp = useCallback(isSelected => isSelected && __jsx(TextField, {\n    label: \"\",\n    labelHidden: true,\n    onChange: handleUrlInp,\n    value: urlInp\n  }), [handleUrlInp, urlInp]);\n  const renderPageToExc = useCallback(isSelected => isSelected && __jsx(TextField, {\n    labelHidden: true,\n    onChange: handleUrlExc,\n    value: urlExc\n  }), [handleUrlExc, urlExc]);\n  return __jsx(FormLayout.Group, null, __jsx(ChoiceList, {\n    title: \"Display on page:\",\n    choices: [{\n      label: 'All pages',\n      value: 'all'\n    }, {\n      label: 'Homepage only',\n      value: 'homepage'\n    }, {\n      label: 'Only on page with URL',\n      value: 'url',\n      renderChildren: renderUrlInp\n    }, {\n      label: 'Pages to exclude',\n      value: 'exclude',\n      renderChildren: renderPageToExc\n    }],\n    selected: selected,\n    onChange: handleChange\n  }));\n}\n\nclass TargetConfigPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return __jsx(Card, null, __jsx(Form, null, __jsx(FormLayout, null, __jsx(DisplayText, {\n      size: \"small\"\n    }, \"Target Configuration\"), __jsx(IncludePage, null))));\n  }\n\n}\n\nexport default TargetConfigPage;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\targetConfig.js"],"names":["Card","DisplayText","ChoiceList","TextField","Form","FormLayout","useCallback","useState","IncludePage","selected","setSelected","urlInp","setUrlInp","urlExc","setUrlExc","handleChange","value","console","log","handleUrlInp","handleUrlExc","val","renderUrlInp","isSelected","renderPageToExc","label","renderChildren","TargetConfigPage","React","Component","constructor","props","state","render"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAkDC,IAAlD,EAAwDC,UAAxD,QAA0E,kBAA1E;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,SAASC,WAAT,GAAuB;AACrB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BH,QAAQ,CAAC,CAAC,KAAD,CAAD,CAAxC;AACA,QAAM;AAAA,OAACI,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMQ,YAAY,GAAGT,WAAW,CAC7BU,KAAD,IAAW;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CF,KAA3C;AACAN,IAAAA,WAAW,CAACM,KAAD,CAAX;AACD,GAJ6B,EAK9B,EAL8B,CAAhC;AAQA,QAAMG,YAAY,GAAGb,WAAW,CAC7BU,KAAD,IAAW;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,KAA3B;AACAJ,IAAAA,SAAS,CAACI,KAAD,CAAT;AACD,GAJ6B,EAK9B,EAL8B,CAAhC;AAOA,QAAMI,YAAY,GAAGd,WAAW,CAC7Be,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CADqB,EAE9B,EAF8B,CAAhC;AAKA,QAAMC,YAAY,GAAGhB,WAAW,CAC7BiB,UAAD,IACEA,UAAU,IACR,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,EADR;AAEE,IAAA,WAAW,MAFb;AAGE,IAAA,QAAQ,EAAEJ,YAHZ;AAIE,IAAA,KAAK,EAAER;AAJT,IAH0B,EAU9B,CAACQ,YAAD,EAAeR,MAAf,CAV8B,CAAhC;AAaA,QAAMa,eAAe,GAAGlB,WAAW,CAChCiB,UAAD,IACEA,UAAU,IACR,MAAC,SAAD;AACE,IAAA,WAAW,MADb;AAEE,IAAA,QAAQ,EAAEH,YAFZ;AAGE,IAAA,KAAK,EAAEP;AAHT,IAH6B,EASjC,CAACO,YAAD,EAAeP,MAAf,CATiC,CAAnC;AAYA,SACE,MAAC,UAAD,CAAY,KAAZ,QACE,MAAC,UAAD;AACE,IAAA,KAAK,EAAC,kBADR;AAEE,IAAA,OAAO,EAAE,CACP;AAACY,MAAAA,KAAK,EAAE,WAAR;AAAqBT,MAAAA,KAAK,EAAE;AAA5B,KADO,EAEP;AAACS,MAAAA,KAAK,EAAE,eAAR;AAAyBT,MAAAA,KAAK,EAAE;AAAhC,KAFO,EAGP;AAACS,MAAAA,KAAK,EAAE,uBAAR;AAAiCT,MAAAA,KAAK,EAAE,KAAxC;AAA8CU,MAAAA,cAAc,EAACJ;AAA7D,KAHO,EAIP;AAACG,MAAAA,KAAK,EAAC,kBAAP;AAA0BT,MAAAA,KAAK,EAAC,SAAhC;AAA0CU,MAAAA,cAAc,EAACF;AAAzD,KAJO,CAFX;AAQE,IAAA,QAAQ,EAAEf,QARZ;AASE,IAAA,QAAQ,EAAEM;AATZ,IADF,CADF;AAeD;;AAED,MAAMY,gBAAN,SAA+BC,KAAK,CAACC,SAArC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE,MAAC,IAAD,QACE,MAAC,IAAD,QACE,MAAC,UAAD,QACE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAC;AAAlB,8BADF,EAEE,MAAC,WAAD,OAFF,CADF,CADF,CADF;AAUD;;AAjB2C;;AAoB9C,eAAeN,gBAAf","sourcesContent":["import { Card, DisplayText, ChoiceList, TextField,Form, FormLayout } from '@shopify/polaris';\r\nimport { useCallback, useState } from 'react';\r\n\r\nfunction IncludePage() {\r\n  const [selected, setSelected] = useState(['all']);\r\n  const [urlInp, setUrlInp] = useState('');\r\n  const [urlExc, setUrlExc] = useState('');\r\n\r\n  const handleChange = useCallback(\r\n    (value) => {\r\n      console.log('choose display on which page',value)\r\n      setSelected(value)\r\n    }, \r\n    []\r\n  );\r\n\r\n  const handleUrlInp = useCallback(\r\n    (value) => {\r\n      console.log('url provided',value)\r\n      setUrlInp(value)\r\n    },\r\n    [],\r\n  );\r\n  const handleUrlExc = useCallback(\r\n    (val) => console.log(val),\r\n    []\r\n  );\r\n\r\n  const renderUrlInp = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField\r\n          label=\"\"\r\n          labelHidden\r\n          onChange={handleUrlInp}\r\n          value={urlInp}\r\n        />\r\n      ),\r\n    [handleUrlInp, urlInp],\r\n  );\r\n\r\n  const renderPageToExc = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField \r\n          labelHidden\r\n          onChange={handleUrlExc}\r\n          value={urlExc}\r\n        />\r\n      ),\r\n    [handleUrlExc, urlExc]\r\n  )\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <ChoiceList\r\n        title=\"Display on page:\"\r\n        choices={[\r\n          {label: 'All pages', value: 'all'},\r\n          {label: 'Homepage only', value: 'homepage'},\r\n          {label: 'Only on page with URL', value: 'url',renderChildren:renderUrlInp},\r\n          {label:'Pages to exclude',value:'exclude',renderChildren:renderPageToExc}\r\n        ]}\r\n        selected={selected}\r\n        onChange={handleChange}\r\n      />\r\n    </FormLayout.Group>\r\n  );\r\n}\r\n\r\nclass TargetConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <DisplayText size=\"small\">Target Configuration</DisplayText>\r\n            <IncludePage />\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TargetConfigPage;"]},"metadata":{},"sourceType":"module"}