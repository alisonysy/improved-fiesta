{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation scriptTagCreate($input: ScriptTagInput!) {\\n    scriptTagCreate(input: $input) {\\n      scriptTag {\\n        id\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Layout, Page, ButtonGroup, Button } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport gql from 'graphql-tag';\nimport { useMutation } from 'react-apollo';\nimport store from 'store-js';\nimport ResourceListWithProducts from '../components/ResourceList';\nimport BarList from '../components/barList';\nimport TemplateStyle from '../components/templateStyle';\nimport ContentConfigPage from '../components/contentConfig';\nimport StyleConfigPage from '../components/styleConfig';\nimport TargetConfigPage from '../components/targetConfig';\nimport CustomCodePage from '../components/customCode';\nimport PreviewPage from '../components/preview';\nvar INJECT_SCRIPT = gql(_templateObject());\n\nfunction SaveUserPreference() {\n  var _useMutation = useMutation(INJECT_SCRIPT),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      injectScriptTag = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      error = _useMutation2$.error;\n\n  return __jsx(ButtonGroup, null, __jsx(Button, null, \"Cancel\"), __jsx(Button, {\n    primary: true,\n    onClick: function onClick(e) {\n      e.preventDefault();\n      console.log('calling useMutation hooks');\n      injectScriptTag({\n        variables: {\n          input: {\n            displayScope: 'ONLINE_STORE',\n            src: 'https://5be47b78.ngrok.io/_next/static/chunks/topBarInjection.js'\n          }\n        },\n        onCompleted: function onCompleted() {\n          console.log(data);\n        },\n        onError: function onError() {\n          console.log(error);\n        }\n      });\n    }\n  }, \"Save\"));\n}\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelection\", function (src) {\n      var idsFromSrc = src.selection.map(function (prod) {\n        return prod.id;\n      });\n\n      _this.setState({\n        open: false\n      });\n\n      console.log(src);\n      store.set('ids', idsFromSrc);\n    });\n\n    _this.state = {\n      open: false,\n      onEdit: false,\n      barTxtConfig: {\n        initialMsg1: '',\n        prgMsg1: '',\n        achievedMsg: ''\n      },\n      barFrShGl: 30,\n      barLink: {\n        url: '',\n        openNew: false\n      },\n      barPosition: '',\n      bgImg: {},\n      styleConfig: {\n        colorConfig: {\n          bgColor: '#000',\n          txtColor: '#b31219',\n          bgOpacity: 100,\n          specialColor: '#fff'\n        },\n        fontConfig: {\n          fontFamily: 'sans-serif'\n        }\n      }\n    };\n    _this.handleEditId = _this.handleEditId.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"handleEditId\",\n    value: function handleEditId(id) {\n      console.log(id);\n      this.setState({\n        onEdit: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var emptyState = !store.get('ids');\n      var _this$state = this.state,\n          barTxtConfig = _this$state.barTxtConfig,\n          barFrShGl = _this$state.barFrShGl,\n          barLink = _this$state.barLink,\n          styleConfig = _this$state.styleConfig,\n          bgImg = _this$state.bgImg;\n      return __jsx(Page, null, __jsx(TitleBar, {\n        primaryAction: {\n          content: 'Select prod',\n          onAction: function onAction() {\n            return _this2.setState({\n              open: true\n            });\n          }\n        }\n      }), __jsx(Layout.Section, null, __jsx(BarList, {\n        handleEditId: function handleEditId(id) {\n          return _this2.handleEditId(id);\n        }\n      }), this.state.onEdit ? __jsx(\"div\", {\n        style: {\n          marginTop: '3em'\n        }\n      }, __jsx(TemplateStyle, null), __jsx(PreviewPage, {\n        contentConfig: {\n          barTxtConfig: barTxtConfig,\n          barFrShGl: barFrShGl,\n          barLink: barLink\n        },\n        styleConfig: _objectSpread({}, styleConfig),\n        bgImg: bgImg\n      }), __jsx(ContentConfigPage, {\n        handleContentConfig_msg: function handleContentConfig_msg(msg) {\n          return _this2.setState({\n            barTxtConfig: _objectSpread({}, _this2.barTxtConfig, msg)\n          });\n        },\n        handleContentConfig_goal: function handleContentConfig_goal(gl) {\n          return _this2.setState({\n            barFrShGl: gl\n          });\n        },\n        handleContentConfig_link: function handleContentConfig_link(val) {\n          return _this2.setState({\n            barLink: _objectSpread({}, _this2.state.barLink, val)\n          });\n        }\n      }), __jsx(StyleConfigPage, {\n        handleStyleConfig: function handleStyleConfig(colorCf, fontCf) {\n          _this2.setState({\n            styleConfig: {\n              colorConfig: colorCf,\n              fontConfig: fontCf\n            }\n          });\n        },\n        uploadBgImg: function uploadBgImg(bgFile) {\n          return _this2.setState({\n            bgImg: bgFile\n          });\n        }\n      }), __jsx(TargetConfigPage, null), __jsx(CustomCodePage, null), __jsx(SaveUserPreference, null)) : null));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\n;\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\pages\\index.js"],"names":["Layout","Page","ButtonGroup","Button","ResourcePicker","TitleBar","gql","useMutation","store","ResourceListWithProducts","BarList","TemplateStyle","ContentConfigPage","StyleConfigPage","TargetConfigPage","CustomCodePage","PreviewPage","INJECT_SCRIPT","SaveUserPreference","injectScriptTag","data","error","e","preventDefault","console","log","variables","input","displayScope","src","onCompleted","onError","Index","props","idsFromSrc","selection","map","prod","id","setState","open","set","state","onEdit","barTxtConfig","initialMsg1","prgMsg1","achievedMsg","barFrShGl","barLink","url","openNew","barPosition","bgImg","styleConfig","colorConfig","bgColor","txtColor","bgOpacity","specialColor","fontConfig","fontFamily","handleEditId","bind","emptyState","get","content","onAction","marginTop","msg","gl","val","colorCf","fontCf","bgFile","React","Component"],"mappings":"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","sourcesContent":["import { Layout, Page, ButtonGroup, Button } from '@shopify/polaris';\r\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from 'react-apollo';\r\nimport store from 'store-js';\r\n\r\nimport ResourceListWithProducts from '../components/ResourceList';\r\nimport BarList from '../components/barList';\r\nimport TemplateStyle from '../components/templateStyle';\r\nimport ContentConfigPage from '../components/contentConfig';\r\nimport StyleConfigPage from '../components/styleConfig';\r\nimport TargetConfigPage from '../components/targetConfig';\r\nimport CustomCodePage from '../components/customCode';\r\nimport PreviewPage from '../components/preview';\r\n\r\n\r\nconst INJECT_SCRIPT = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SaveUserPreference(){\r\n  const [injectScriptTag, {data,error}] = useMutation(INJECT_SCRIPT);\r\n  return (\r\n    <ButtonGroup>\r\n      <Button>Cancel</Button>\r\n      <Button primary \r\n        onClick={(e)=>{\r\n          e.preventDefault();\r\n          console.log('calling useMutation hooks');\r\n          injectScriptTag({\r\n            variables:{\r\n              input:{\r\n                displayScope:'ONLINE_STORE',\r\n                src:'https://5be47b78.ngrok.io/_next/static/chunks/topBarInjection.js'\r\n              }\r\n            },\r\n            onCompleted(){\r\n              console.log(data)\r\n            },\r\n            onError(){\r\n              console.log(error);\r\n            }\r\n          })\r\n        }}\r\n      >\r\n        Save\r\n      </Button>\r\n    </ButtonGroup>\r\n  )\r\n}\r\n\r\nclass Index extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      onEdit:false,\r\n      barTxtConfig:{initialMsg1:'',prgMsg1:'',achievedMsg:''},\r\n      barFrShGl:30,\r\n      barLink:{url:'',openNew:false},\r\n      barPosition:'',\r\n      bgImg:{},\r\n      styleConfig:{colorConfig:{bgColor:'#000',txtColor:'#b31219',bgOpacity:100,specialColor:'#fff'},fontConfig:{fontFamily:'sans-serif'}}\r\n    };\r\n    this.handleEditId = this.handleEditId.bind(this);\r\n  }\r\n\r\n  handleEditId(id){\r\n    console.log(id);\r\n    this.setState({onEdit:true});\r\n  }\r\n\r\n  render(){\r\n    const emptyState = !store.get('ids');\r\n    const {barTxtConfig,barFrShGl,barLink,styleConfig,bgImg} = this.state;\r\n    return (\r\n      <Page>\r\n        <TitleBar \r\n          primaryAction={{\r\n            content:'Select prod',\r\n            onAction: () => this.setState({ open: true }),\r\n          }}\r\n        />\r\n        {/* <ResourcePicker \r\n          resourceType=\"Product\"\r\n          showVariants={true}\r\n          open={this.state.open}\r\n          onSelection={(src)=> this.handleSelection(src)}\r\n          onCancel={ () => this.setState({ open: false })}\r\n        /> */}\r\n        <Layout.Section>\r\n          <BarList handleEditId={(id) => this.handleEditId(id)}/>\r\n          {\r\n            this.state.onEdit?\r\n            <div style={{marginTop:'3em'}}>\r\n              <TemplateStyle />\r\n              <PreviewPage \r\n                contentConfig={{barTxtConfig,barFrShGl,barLink}} \r\n                styleConfig = {{...styleConfig}}\r\n                bgImg = {bgImg}\r\n              />\r\n              <ContentConfigPage \r\n                handleContentConfig_msg={(msg)=> this.setState({barTxtConfig:{...this.barTxtConfig,...msg}})} \r\n                handleContentConfig_goal={(gl) => this.setState({barFrShGl:gl})}\r\n                handleContentConfig_link={(val)=> this.setState({barLink:{...this.state.barLink,...val}})}\r\n              />\r\n              <StyleConfigPage \r\n                handleStyleConfig={(colorCf,fontCf) => {\r\n                  this.setState({styleConfig:{colorConfig:colorCf,fontConfig:fontCf}})\r\n                }}\r\n                uploadBgImg={(bgFile) => this.setState({bgImg:bgFile})}\r\n              />\r\n              <TargetConfigPage />\r\n              <CustomCodePage />\r\n              <SaveUserPreference />\r\n            </div>\r\n            :\r\n            null\r\n          }\r\n        </Layout.Section>\r\n      </Page>\r\n    )\r\n  };\r\n\r\n  handleSelection = (src) => {\r\n    const idsFromSrc = src.selection.map((prod)=> prod.id);\r\n    this.setState({ open: false })\r\n    console.log(src);\r\n    store.set('ids',idsFromSrc)\r\n  }\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}