{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation scriptTagCreate($input: ScriptTagInput!) {\\n    scriptTagCreate(input: $input) {\\n      scriptTag {\\n        id\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Layout, Page, ButtonGroup, Button, Toast, Frame } from '@shopify/polaris';\nimport { useState, useCallback } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation, useSubscription } from 'react-apollo';\nimport store from 'store-js';\nimport BarList from '../components/barList';\nimport TemplateStyle from '../components/templateStyle';\nimport ContentConfigPage from '../components/contentConfig';\nimport StyleConfigPage from '../components/styleConfig';\nimport TargetConfigPage from '../components/targetConfig';\nimport CustomCodePage from '../components/customCode';\nimport PreviewPage from '../components/preview';\nvar INJECT_SCRIPT = gql(_templateObject());\n\nfunction SaveUserPreference(props) {\n  var _useMutation = useMutation(INJECT_SCRIPT),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      injectScriptTag = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      error = _useMutation2$.error;\n\n  var handleInjectionSuccess = function handleInjectionSuccess(data, b) {\n    console.log(data);\n    setTimeout(function (b) {\n      b = 'dismiss';\n    }, 2500);\n    return b === 'success' ? __jsx(Toast, {\n      content: \"Saved successfully.\",\n      onDismiss: function onDismiss() {}\n    }) : b === 'error' ? __jsx(Toast, {\n      content: \"Something went wrong.\",\n      onDismiss: function onDismiss() {}\n    }) : null;\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: '50px',\n      height: '100px'\n    }\n  }, __jsx(ButtonGroup, null, __jsx(Button, {\n    onClick: function onClick() {\n      props.handleEdit();\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    primary: true,\n    onClick: function onClick(e) {\n      e.preventDefault();\n      console.log('calling useMutation hooks');\n      injectScriptTag({\n        variables: {\n          input: {\n            displayScope: 'ONLINE_STORE',\n            src: 'https://8a9648bd.ngrok.io/_next/static/chunks/topBarInjection.js'\n          }\n        }\n      });\n    }\n  }, \"Save\")), __jsx(Frame, null, data && handleInjectionSuccess(data, 'success'), error && handleInjectionSuccess(error, 'error')));\n}\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.state = {\n      open: false,\n      onEdit: false,\n      barTxtConfig: {\n        initialMsg1: '',\n        prgMsg1: '',\n        achievedMsg: ''\n      },\n      barFrShGl: 30,\n      barLink: {\n        url: '',\n        openNew: false\n      },\n      barPosition: '',\n      bgImg: {},\n      styleConfig: {\n        colorConfig: {\n          bgColor: '#000',\n          txtColor: '#b31219',\n          bgOpacity: 100,\n          specialColor: '#fff'\n        },\n        fontConfig: {\n          fontFamily: 'sans-serif'\n        }\n      }\n    };\n    _this.baseState = _this.state;\n    _this.handleEditId = _this.handleEditId.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"handleEditId\",\n    value: function handleEditId(id) {\n      console.log(id);\n      this.setState({\n        onEdit: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var emptyState = !store.get('ids');\n      var _this$state = this.state,\n          barTxtConfig = _this$state.barTxtConfig,\n          barFrShGl = _this$state.barFrShGl,\n          barLink = _this$state.barLink,\n          styleConfig = _this$state.styleConfig,\n          bgImg = _this$state.bgImg;\n      return __jsx(Page, null, __jsx(Layout.Section, null, __jsx(BarList, {\n        handleEditId: function handleEditId(id) {\n          return _this2.handleEditId(id);\n        }\n      }), this.state.onEdit ? __jsx(\"div\", {\n        style: {\n          marginTop: '3em'\n        }\n      }, __jsx(TemplateStyle, {\n        handleClickedLi: function handleClickedLi(bg, ftColor) {\n          return _this2.setState();\n        }\n      }), __jsx(PreviewPage, {\n        contentConfig: {\n          barTxtConfig: barTxtConfig,\n          barFrShGl: barFrShGl,\n          barLink: barLink\n        },\n        styleConfig: _objectSpread({}, styleConfig),\n        bgImg: bgImg\n      }), __jsx(ContentConfigPage, {\n        handleContentConfig_msg: function handleContentConfig_msg(msg) {\n          return _this2.setState({\n            barTxtConfig: _objectSpread({}, _this2.barTxtConfig, msg)\n          });\n        },\n        handleContentConfig_goal: function handleContentConfig_goal(gl) {\n          return _this2.setState({\n            barFrShGl: gl\n          });\n        },\n        handleContentConfig_link: function handleContentConfig_link(val) {\n          return _this2.setState({\n            barLink: _objectSpread({}, _this2.state.barLink, val)\n          });\n        }\n      }), __jsx(StyleConfigPage, {\n        handleStyleConfig: function handleStyleConfig(colorCf, fontCf) {\n          _this2.setState({\n            styleConfig: {\n              colorConfig: colorCf,\n              fontConfig: fontCf\n            }\n          });\n        },\n        uploadBgImg: function uploadBgImg(bgFile) {\n          return _this2.setState({\n            bgImg: bgFile\n          });\n        }\n      }), __jsx(TargetConfigPage, null), __jsx(CustomCodePage, null), __jsx(SaveUserPreference, {\n        handleEdit: function handleEdit() {\n          _this2.setState(_this2.baseState);\n        }\n      })) : null));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\n;\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\pages\\index.js"],"names":["Layout","Page","ButtonGroup","Button","Toast","Frame","useState","useCallback","gql","useMutation","useSubscription","store","BarList","TemplateStyle","ContentConfigPage","StyleConfigPage","TargetConfigPage","CustomCodePage","PreviewPage","INJECT_SCRIPT","SaveUserPreference","props","injectScriptTag","data","error","handleInjectionSuccess","b","console","log","setTimeout","marginTop","height","handleEdit","e","preventDefault","variables","input","displayScope","src","Index","state","open","onEdit","barTxtConfig","initialMsg1","prgMsg1","achievedMsg","barFrShGl","barLink","url","openNew","barPosition","bgImg","styleConfig","colorConfig","bgColor","txtColor","bgOpacity","specialColor","fontConfig","fontFamily","baseState","handleEditId","bind","id","setState","emptyState","get","bg","ftColor","msg","gl","val","colorCf","fontCf","bgFile","React","Component"],"mappings":"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","sourcesContent":["import { Layout, Page, ButtonGroup, Button, Toast, Frame } from '@shopify/polaris';\r\nimport { useState, useCallback } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, useSubscription } from 'react-apollo';\r\nimport store from 'store-js';\r\n\r\nimport BarList from '../components/barList';\r\nimport TemplateStyle from '../components/templateStyle';\r\nimport ContentConfigPage from '../components/contentConfig';\r\nimport StyleConfigPage from '../components/styleConfig';\r\nimport TargetConfigPage from '../components/targetConfig';\r\nimport CustomCodePage from '../components/customCode';\r\nimport PreviewPage from '../components/preview';\r\n\r\n\r\nconst INJECT_SCRIPT = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SaveUserPreference(props){\r\n  const [injectScriptTag, {data,error}] = useMutation(INJECT_SCRIPT);\r\n\r\n  const handleInjectionSuccess = (data,b) =>{\r\n    console.log(data);\r\n    setTimeout((b) => {\r\n      b='dismiss'\r\n    }, 2500);\r\n    return (\r\n      b === 'success'? \r\n      <Toast\r\n        content=\"Saved successfully.\"\r\n        onDismiss={() => {}}\r\n      />\r\n      :\r\n      b === 'error' ?\r\n      <Toast\r\n        content=\"Something went wrong.\"\r\n        onDismiss={ () => {}}\r\n      />\r\n      :\r\n      null\r\n    )\r\n  };\r\n  \r\n  return (\r\n    <div style={{marginTop:'50px',height:'100px'}}>\r\n      <ButtonGroup>\r\n        <Button\r\n          onClick = {()=>{\r\n            props.handleEdit();\r\n          }}\r\n        >Cancel</Button>\r\n        <Button primary \r\n          onClick={(e)=>{\r\n            e.preventDefault();\r\n            console.log('calling useMutation hooks');\r\n            injectScriptTag({\r\n              variables:{\r\n                input:{\r\n                  displayScope:'ONLINE_STORE',\r\n                  src:'https://8a9648bd.ngrok.io/_next/static/chunks/topBarInjection.js'\r\n                }\r\n              }\r\n            })\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Frame>\r\n        { data && handleInjectionSuccess(data,'success')}\r\n        { error &&  handleInjectionSuccess(error,'error') }\r\n      </Frame>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Index extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      onEdit:false,\r\n      barTxtConfig:{initialMsg1:'',prgMsg1:'',achievedMsg:''},\r\n      barFrShGl:30,\r\n      barLink:{url:'',openNew:false},\r\n      barPosition:'',\r\n      bgImg:{},\r\n      styleConfig:{colorConfig:{bgColor:'#000',txtColor:'#b31219',bgOpacity:100,specialColor:'#fff'},fontConfig:{fontFamily:'sans-serif'}}\r\n    };\r\n    this.baseState = this.state;\r\n    this.handleEditId = this.handleEditId.bind(this);\r\n  }\r\n\r\n  handleEditId(id){\r\n    console.log(id);\r\n    this.setState({onEdit:true});\r\n  }\r\n\r\n  render(){\r\n    const emptyState = !store.get('ids');\r\n    const {barTxtConfig,barFrShGl,barLink,styleConfig,bgImg} = this.state;\r\n    return (\r\n      <Page>\r\n        <Layout.Section>\r\n          <BarList handleEditId={(id) => this.handleEditId(id)}/>\r\n          {\r\n            this.state.onEdit?\r\n            <div style={{marginTop:'3em'}}>\r\n              <TemplateStyle handleClickedLi={(bg,ftColor) => this.setState()}/>\r\n              <PreviewPage \r\n                contentConfig={{barTxtConfig,barFrShGl,barLink}} \r\n                styleConfig = {{...styleConfig}}\r\n                bgImg = {bgImg}\r\n              />\r\n              <ContentConfigPage \r\n                handleContentConfig_msg={(msg)=> this.setState({barTxtConfig:{...this.barTxtConfig,...msg}})} \r\n                handleContentConfig_goal={(gl) => this.setState({barFrShGl:gl})}\r\n                handleContentConfig_link={(val)=> this.setState({barLink:{...this.state.barLink,...val}})}\r\n              />\r\n              <StyleConfigPage \r\n                handleStyleConfig={(colorCf,fontCf) => {\r\n                  this.setState({styleConfig:{colorConfig:colorCf,fontConfig:fontCf}})\r\n                }}\r\n                uploadBgImg={(bgFile) => this.setState({bgImg:bgFile})}\r\n              />\r\n              <TargetConfigPage />\r\n              <CustomCodePage />\r\n              <SaveUserPreference handleEdit={()=> {\r\n                  this.setState(this.baseState);\r\n                }}\r\n              />\r\n            </div>\r\n            :\r\n            null\r\n          }\r\n        </Layout.Section>\r\n      </Page>\r\n    )\r\n  };\r\n\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}