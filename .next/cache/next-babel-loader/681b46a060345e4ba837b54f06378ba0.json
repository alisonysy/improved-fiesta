{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, DisplayText, Stack, TextField, Button, Form, FormLayout } from '@shopify/polaris';\nimport { useState, useCallback, useEffect } from 'react';\nimport ImageDropZone from '../snippets/imageDropZone';\nimport '../css/fonts.css';\n\nfunction BackgroundSetting(props) {\n  var rgbToHex = function rgbToHex(rgb) {\n    if (rgb.includes('#')) return rgb;\n    var regExp = /\\(\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)\\)/;\n    var re = rgb.match(regExp);\n    var r = re[1].toString(16),\n        g = re[2].toString(16),\n        b = re[3].toString(16);\n    if (r.length == 1) r = \"0\" + r;\n    if (g.length == 1) g = \"0\" + g;\n    if (b.length == 1) b = \"0\" + b;\n    return \"#\" + r + g + b;\n  };\n\n  var _useState = useState(rgbToHex(props.colorConfig.bgColor)),\n      bgColor = _useState[0],\n      setBgColor = _useState[1];\n\n  var _useState2 = useState('100'),\n      bgOpacity = _useState2[0],\n      setBgOpacity = _useState2[1];\n\n  var _useState3 = useState(rgbToHex(props.colorConfig.bgColor)),\n      txtColor = _useState3[0],\n      setTxtColor = _useState3[1];\n\n  var _useState4 = useState('#fff'),\n      specialColor = _useState4[0],\n      setSpecialColor = _useState4[1];\n\n  console.log('inside bgSettings', props);\n  useEffect(function () {\n    props.handleStyleConfig({\n      bgColor: rgbToHex(props.colorConfig.bgColor),\n      bgOpacity: bgOpacity,\n      txtColor: txtColor,\n      specialColor: specialColor\n    }, undefined);\n  }, [bgColor, bgOpacity, txtColor, specialColor]);\n  return __jsx(Card.Section, null, __jsx(Stack, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Background color:\"), __jsx(\"div\", {\n    style: {\n      height: '25px',\n      width: '25px',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#ddd',\n      display: 'inline-block',\n      backgroundColor: bgColor\n    }\n  }), __jsx(TextField, {\n    value: bgColor,\n    onChange: function onChange(nw) {\n      return setBgColor(nw);\n    }\n  })), __jsx(\"div\", null, __jsx(\"h3\", null, \"Background opacity:\"), __jsx(\"div\", {\n    style: {\n      display: 'inline-block'\n    }\n  }, bgOpacity), __jsx(TextField, {\n    value: bgOpacity,\n    onChange: function onChange(nw) {\n      return setBgOpacity(nw);\n    },\n    type: \"number\",\n    helpText: \"0 is transparent, 100 is opaque.\"\n  }))), __jsx(Stack, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Text color:\"), __jsx(\"div\", {\n    style: {\n      height: '25px',\n      width: '25px',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#ddd',\n      display: 'inline-block',\n      backgroundColor: txtColor\n    }\n  }), __jsx(TextField, {\n    value: txtColor,\n    onChange: function onChange(nw) {\n      return setTxtColor(nw);\n    }\n  })), __jsx(\"div\", null, __jsx(\"h3\", null, \"Special text color:\"), __jsx(\"div\", {\n    style: {\n      height: '25px',\n      width: '25px',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#ddd',\n      display: 'inline-block',\n      backgroundColor: specialColor\n    }\n  }), __jsx(TextField, {\n    value: specialColor,\n    onChange: function onChange(nw) {\n      return setSpecialColor(nw);\n    }\n  }))));\n}\n\nfunction Fonts(props) {\n  var _useState5 = useState(18),\n      fontSize = _useState5[0],\n      setFontSize = _useState5[1];\n\n  var _useState6 = useState(10),\n      padding = _useState6[0],\n      setPadding = _useState6[1];\n\n  var _useState7 = useState('sans-serif'),\n      fontFam = _useState7[0],\n      setFontFam = _useState7[1];\n\n  var handleFontFam = useCallback(function (val) {\n    setFontFam(val);\n    props.handleStyleConfig(undefined, {\n      fontFamily: val\n    });\n  }, [fontFam]);\n  var handleFontSize = useCallback(function (val) {\n    setFontSize(val);\n    props.handleStyleConfig(undefined, {\n      fontSize: val\n    });\n  }, []);\n  var handlePadding = useCallback(function (val) {\n    setPadding(val);\n    props.handleStyleConfig(undefined, {\n      barPadding: val\n    });\n  }, []);\n  return __jsx(Card.Section, null, __jsx(\"div\", null, \"Font family:\"), __jsx(Button, {\n    onClick: function onClick() {\n      return handleFontFam('Montserrat');\n    }\n  }, \"Montserrat\"), __jsx(Button, {\n    onClick: function onClick() {\n      return handleFontFam('sans-serif');\n    }\n  }, \"Sans serif\"), __jsx(TextField, {\n    label: \"Font size:\",\n    suffix: \"px\",\n    type: \"number\",\n    value: fontSize,\n    onChange: handleFontSize\n  }), __jsx(TextField, {\n    label: \"Bar padding:\",\n    suffix: \"px\",\n    type: \"number\",\n    value: padding,\n    onChange: handlePadding\n  }));\n}\n\nvar StyleConfigPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StyleConfigPage, _React$Component);\n\n  function StyleConfigPage(props) {\n    var _this;\n\n    _classCallCheck(this, StyleConfigPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StyleConfigPage).call(this, props));\n    _this.state = {\n      colorConfig: {},\n      fontConfig: {},\n      bgImg: {}\n    };\n    _this.handleStyleConfig = _this.handleStyleConfig.bind(_assertThisInitialized(_this));\n    _this.uploadBgImg = _this.uploadBgImg.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(StyleConfigPage, [{\n    key: \"handleStyleConfig\",\n    value: function handleStyleConfig(colorCf, fontCf) {\n      this.setState(function (state) {\n        if (colorCf === undefined) {\n          fontCf = _objectSpread({}, state.fontConfig, fontCf);\n          return {\n            colorConfig: state.colorConfig,\n            fontConfig: fontCf\n          };\n        } else if (fontCf === undefined) {\n          colorCf = _objectSpread({}, state.colorConfig, colorCf);\n          return {\n            colorConfig: colorCf,\n            fontConfig: state.fontConfig\n          };\n        }\n      }, function () {\n        this.props.handleStyleConfig(this.state.colorConfig, this.state.fontConfig);\n      });\n    }\n  }, {\n    key: \"uploadBgImg\",\n    value: function uploadBgImg(bgFile) {\n      this.setState({\n        bgImg: bgFile\n      }, function () {\n        this.props.uploadBgImg(this.state.bgImg);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('passed from index', this.props.styleConfig);\n      return __jsx(Card, null, __jsx(Form, null, __jsx(FormLayout, null, __jsx(DisplayText, null, \"Style Configuration\"), __jsx(BackgroundSetting, _extends({\n        handleStyleConfig: this.handleStyleConfig\n      }, this.props.styleConfig)), __jsx(ImageDropZone, {\n        uploadBgImg: this.uploadBgImg\n      }), __jsx(Fonts, {\n        handleStyleConfig: this.handleStyleConfig\n      }))));\n    }\n  }]);\n\n  return StyleConfigPage;\n}(React.Component);\n\nexport default StyleConfigPage;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\styleConfig.js"],"names":["Card","DisplayText","Stack","TextField","Button","Form","FormLayout","useState","useCallback","useEffect","ImageDropZone","BackgroundSetting","props","rgbToHex","rgb","includes","regExp","re","match","r","toString","g","b","length","colorConfig","bgColor","setBgColor","bgOpacity","setBgOpacity","txtColor","setTxtColor","specialColor","setSpecialColor","console","log","handleStyleConfig","undefined","height","width","borderWidth","borderStyle","borderColor","display","backgroundColor","nw","Fonts","fontSize","setFontSize","padding","setPadding","fontFam","setFontFam","handleFontFam","val","fontFamily","handleFontSize","handlePadding","barPadding","StyleConfigPage","state","fontConfig","bgImg","bind","uploadBgImg","colorCf","fontCf","setState","bgFile","styleConfig","React","Component"],"mappings":"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","sourcesContent":["import { Card, DisplayText, Stack, TextField, Button, Form, FormLayout} from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport ImageDropZone from '../snippets/imageDropZone';\r\nimport '../css/fonts.css';\r\n\r\nfunction BackgroundSetting(props){\r\n  const rgbToHex = (rgb) => {\r\n    if(rgb.includes('#')) return rgb;\r\n    let regExp = /\\(\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)\\)/;\r\n    let re = rgb.match(regExp);\r\n    let r=re[1].toString(16),\r\n        g=re[2].toString(16),\r\n        b=re[3].toString(16);\r\n\r\n    if (r.length == 1)\r\n      r = \"0\" + r;\r\n    if (g.length == 1)\r\n      g = \"0\" + g;\r\n    if (b.length == 1)\r\n      b = \"0\" + b;\r\n  \r\n    return \"#\" + r + g + b;\r\n\r\n  };\r\n  const [bgColor, setBgColor] = useState(rgbToHex(props.colorConfig.bgColor));\r\n  const [bgOpacity, setBgOpacity] = useState('100');\r\n\r\n  const [txtColor, setTxtColor] = useState(rgbToHex(props.colorConfig.bgColor));\r\n  const [specialColor, setSpecialColor] = useState('#fff');\r\n\r\n\r\n  console.log('inside bgSettings',props)\r\n  useEffect(()=>{\r\n    props.handleStyleConfig({\r\n      bgColor:rgbToHex(props.colorConfig.bgColor),\r\n      bgOpacity:bgOpacity,\r\n      txtColor:txtColor,\r\n      specialColor:specialColor\r\n    },undefined);\r\n  },[bgColor,bgOpacity,txtColor,specialColor]);\r\n\r\n  \r\n\r\n  return (\r\n    <Card.Section>\r\n      <Stack>\r\n        <div>\r\n          <h3>Background color:</h3>\r\n          <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:bgColor}}></div>\r\n          <TextField \r\n            value={bgColor}\r\n            onChange={nw => setBgColor(nw)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Background opacity:</h3>\r\n          <div style={{display:'inline-block'}}>{bgOpacity}</div>\r\n          <TextField \r\n            value={bgOpacity}\r\n            onChange={nw => setBgOpacity(nw)}\r\n            type=\"number\"\r\n            helpText=\"0 is transparent, 100 is opaque.\"\r\n          />\r\n        </div>\r\n      </Stack>\r\n      <Stack>\r\n        <div>\r\n          <h3>Text color:</h3>\r\n          <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:txtColor}}></div>\r\n          <TextField \r\n            value={txtColor}\r\n            onChange={nw => setTxtColor(nw)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Special text color:</h3>\r\n          <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:specialColor}}></div>\r\n          <TextField \r\n            value={specialColor}\r\n            onChange={nw => setSpecialColor(nw)}\r\n          />\r\n        </div>\r\n      </Stack>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction Fonts(props){\r\n  const [fontSize,setFontSize] = useState(18);\r\n  const [padding,setPadding] = useState(10);\r\n  const [fontFam,setFontFam] = useState('sans-serif');\r\n\r\n  const handleFontFam = useCallback(\r\n    (val) => {\r\n      setFontFam(val);\r\n      props.handleStyleConfig(undefined,{fontFamily:val});\r\n    },\r\n    [fontFam]\r\n  )\r\n\r\n  const handleFontSize = useCallback(\r\n    (val) => {\r\n      setFontSize(val);\r\n      props.handleStyleConfig(undefined,{fontSize:val})\r\n    },\r\n    []\r\n  );\r\n\r\n  const handlePadding = useCallback(\r\n    (val) => {\r\n      setPadding(val);\r\n      props.handleStyleConfig(undefined,{barPadding:val})\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Card.Section>\r\n      <div>Font family:</div>\r\n      <Button onClick={() => handleFontFam('Montserrat')}>Montserrat</Button>\r\n      <Button onClick={() => handleFontFam('sans-serif')}>Sans serif</Button>\r\n      <TextField \r\n        label=\"Font size:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={fontSize}\r\n        onChange={handleFontSize}\r\n      />\r\n      <TextField \r\n        label=\"Bar padding:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={padding}\r\n        onChange={handlePadding}\r\n      />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nclass StyleConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      colorConfig:{},\r\n      fontConfig:{},\r\n      bgImg:{}\r\n    }\r\n    this.handleStyleConfig = this.handleStyleConfig.bind(this);\r\n    this.uploadBgImg = this.uploadBgImg.bind(this);\r\n  }\r\n\r\n  handleStyleConfig(colorCf,fontCf){\r\n    this.setState((state)=>{\r\n      if(colorCf===undefined){\r\n        fontCf = {...state.fontConfig,...fontCf};\r\n        return {colorConfig:state.colorConfig,fontConfig:fontCf}\r\n      }else if(fontCf === undefined){\r\n        colorCf = {...state.colorConfig,...colorCf};\r\n        return {colorConfig:colorCf,fontConfig:state.fontConfig}\r\n      }\r\n    },function(){\r\n      this.props.handleStyleConfig(this.state.colorConfig,this.state.fontConfig);\r\n    })\r\n  }\r\n\r\n  uploadBgImg(bgFile){\r\n    this.setState({bgImg:bgFile},function(){\r\n      this.props.uploadBgImg(this.state.bgImg)\r\n    })\r\n  }\r\n\r\n  render(){\r\n    console.log('passed from index',this.props.styleConfig)\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <DisplayText>Style Configuration</DisplayText>\r\n            <BackgroundSetting handleStyleConfig={this.handleStyleConfig} {...this.props.styleConfig}/>\r\n            <ImageDropZone uploadBgImg={this.uploadBgImg}/>\r\n            <Fonts  handleStyleConfig={this.handleStyleConfig}/>\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StyleConfigPage;"]},"metadata":{},"sourceType":"module"}