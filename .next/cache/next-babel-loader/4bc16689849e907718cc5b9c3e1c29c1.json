{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Layout, Page, ButtonGroup, Button, Toast, Frame } from '@shopify/polaris';\nimport { useState, useCallback } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation, useSubscription } from 'react-apollo';\nimport store from 'store-js';\nimport BarList from '../components/barList';\nimport TemplateStyle from '../components/templateStyle';\nimport ContentConfigPage from '../components/contentConfig';\nimport StyleConfigPage from '../components/styleConfig';\nimport TargetConfigPage from '../components/targetConfig';\nimport CustomCodePage from '../components/customCode';\nimport PreviewPage from '../components/preview';\nconst INJECT_SCRIPT = gql`\n  mutation scriptTagCreate($input: ScriptTagInput!) {\n    scriptTagCreate(input: $input) {\n      scriptTag {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n\nfunction SaveUserPreference(props) {\n  const [injectScriptTag, {\n    data,\n    error\n  }] = useMutation(INJECT_SCRIPT);\n\n  const handleInjectionSuccess = (data, b) => {\n    console.log(data);\n    setTimeout(b => {\n      b = 'dismiss';\n    }, 2500);\n    return b === 'success' ? __jsx(Toast, {\n      content: \"Saved successfully.\",\n      onDismiss: () => {}\n    }) : b === 'error' ? __jsx(Toast, {\n      content: \"Something went wrong.\",\n      onDismiss: () => {}\n    }) : null;\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: '50px',\n      height: '100px'\n    }\n  }, __jsx(ButtonGroup, null, __jsx(Button, {\n    onClick: () => {\n      props.handleEdit();\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    primary: true,\n    onClick: e => {\n      e.preventDefault();\n      console.log('calling useMutation hooks'); // injectScriptTag({\n      //   variables:{\n      //     input:{\n      //       displayScope:'ONLINE_STORE',\n      //       src:'https://5c3aa12b.ngrok.io/_next/static/chunks/topBarInjection.js'\n      //     }\n      //   }\n      // })\n\n      props.handleSaving();\n    }\n  }, \"Save\")), __jsx(Frame, null, data && handleInjectionSuccess(data, 'success'), error && handleInjectionSuccess(error, 'error')));\n}\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      onEdit: false,\n      savedName: '',\n      barTxtConfig: {\n        initialMsg1: '',\n        prgMsg1: '',\n        achievedMsg: ''\n      },\n      barFrShGl: 30,\n      barLink: {\n        url: '',\n        openNew: false\n      },\n      barPosition: '',\n      bgImg: {},\n      styleConfig: {\n        colorConfig: {\n          bgColor: '#000',\n          txtColor: '#b31219',\n          bgOpacity: 100,\n          specialColor: '#fff'\n        },\n        fontConfig: {\n          fontFamily: 'sans-serif'\n        }\n      },\n      customCode: {\n        script: '',\n        style: ''\n      },\n      dspOnPage: {\n        selected: '',\n        url: ''\n      },\n      shipsToCountries: [],\n      selectedTargets: [],\n      scheduleTime: {}\n    };\n    this.baseState = this.state;\n    this.finalBars = React.createRef();\n    this.handleEditId = this.handleEditId.bind(this);\n  }\n\n  handleEditId(id) {\n    console.log(id);\n    this.setState({\n      onEdit: true\n    });\n  }\n\n  render() {\n    const emptyState = !store.get('ids');\n    const {\n      barTxtConfig,\n      barFrShGl,\n      barLink,\n      styleConfig,\n      bgImg,\n      savedName,\n      barPosition,\n      dspOnPage,\n      selectedTargets,\n      scheduleTime,\n      customCode\n    } = this.state;\n    return __jsx(Page, null, __jsx(Layout.Section, null, __jsx(BarList, {\n      handleEditId: id => this.handleEditId(id),\n      handleTargetCountries: arr => this.setState({\n        shipsToCountries: arr\n      }, function () {\n        console.log(this.state.shipsToCountries);\n      })\n    }), this.state.onEdit ? __jsx(\"div\", {\n      style: {\n        marginTop: '3em'\n      }\n    }, __jsx(TemplateStyle, {\n      handleClickedLi: (bg, ftColor) => this.setState({\n        styleConfig: _objectSpread({}, this.state.styleConfig, {\n          colorConfig: _objectSpread({}, this.state.styleConfig.colorConfig, {\n            bgColor: bg,\n            txtColor: ftColor\n          })\n        })\n      })\n    }), __jsx(PreviewPage, {\n      others: {\n        savedName,\n        barPosition,\n        dspOnPage,\n        selectedTargets,\n        scheduleTime\n      },\n      customCode: {\n        customCode\n      },\n      contentConfig: {\n        barTxtConfig,\n        barFrShGl,\n        barLink\n      },\n      styleConfig: _objectSpread({}, styleConfig),\n      bgImg: bgImg,\n      ref: this.finalBars\n    }), __jsx(ContentConfigPage, {\n      handleContentConfig_msg: msg => this.setState({\n        barTxtConfig: _objectSpread({}, this.barTxtConfig, msg)\n      }),\n      handleContentConfig_goal: gl => this.setState({\n        barFrShGl: gl\n      }, function () {\n        console.log('index -----', gl);\n      }),\n      handleContentConfig_link: val => this.setState({\n        barLink: _objectSpread({}, this.state.barLink, val)\n      }),\n      handleName: name => this.setState({\n        savedName: name\n      }),\n      handleBarPosition: p => this.setState({\n        barPosition: p\n      })\n    }), __jsx(StyleConfigPage, _extends({\n      handleStyleConfig: (colorCf, fontCf) => {\n        this.setState({\n          styleConfig: {\n            colorConfig: colorCf,\n            fontConfig: fontCf\n          }\n        });\n      },\n      uploadBgImg: bgFile => this.setState({\n        bgImg: bgFile\n      })\n    }, this.state)), __jsx(TargetConfigPage, {\n      handleDisplayOnPage: (sec, url) => this.setState({\n        dspOnPage: {\n          selected: sec,\n          url: url\n        }\n      }),\n      shipsToCountries: this.state.shipsToCountries,\n      handleSelectedTargets: val => this.setState({\n        selectedTargets: val\n      }),\n      handleTimeSetting: timeObj => this.setState({\n        scheduleTime: timeObj\n      })\n    }), __jsx(CustomCodePage, {\n      handleCustomCode: (script, style) => {\n        this.setState({\n          customCode: {\n            script: script,\n            style: style\n          }\n        });\n      }\n    }), __jsx(SaveUserPreference, {\n      handleEdit: () => {\n        this.setState(this.baseState);\n      },\n      handleSaving: () => {\n        console.log(this.finalBars.current);\n      }\n    })) : null));\n  }\n\n}\n\n;\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\pages\\index.js"],"names":["Layout","Page","ButtonGroup","Button","Toast","Frame","useState","useCallback","gql","useMutation","useSubscription","store","BarList","TemplateStyle","ContentConfigPage","StyleConfigPage","TargetConfigPage","CustomCodePage","PreviewPage","INJECT_SCRIPT","SaveUserPreference","props","injectScriptTag","data","error","handleInjectionSuccess","b","console","log","setTimeout","marginTop","height","handleEdit","e","preventDefault","handleSaving","Index","React","Component","constructor","state","open","onEdit","savedName","barTxtConfig","initialMsg1","prgMsg1","achievedMsg","barFrShGl","barLink","url","openNew","barPosition","bgImg","styleConfig","colorConfig","bgColor","txtColor","bgOpacity","specialColor","fontConfig","fontFamily","customCode","script","style","dspOnPage","selected","shipsToCountries","selectedTargets","scheduleTime","baseState","finalBars","createRef","handleEditId","bind","id","setState","render","emptyState","get","arr","bg","ftColor","msg","gl","val","name","p","colorCf","fontCf","bgFile","sec","timeObj","current"],"mappings":"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","sourcesContent":["import { Layout, Page, ButtonGroup, Button, Toast, Frame } from '@shopify/polaris';\r\nimport { useState, useCallback } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation, useSubscription } from 'react-apollo';\r\nimport store from 'store-js';\r\n\r\nimport BarList from '../components/barList';\r\nimport TemplateStyle from '../components/templateStyle';\r\nimport ContentConfigPage from '../components/contentConfig';\r\nimport StyleConfigPage from '../components/styleConfig';\r\nimport TargetConfigPage from '../components/targetConfig';\r\nimport CustomCodePage from '../components/customCode';\r\nimport PreviewPage from '../components/preview';\r\n\r\nconst INJECT_SCRIPT = gql`\r\n  mutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SaveUserPreference(props){\r\n  const [injectScriptTag, {data,error}] = useMutation(INJECT_SCRIPT);\r\n\r\n  const handleInjectionSuccess = (data,b) =>{\r\n    console.log(data);\r\n    setTimeout((b) => {\r\n      b='dismiss'\r\n    }, 2500);\r\n    return (\r\n      b === 'success'? \r\n      <Toast\r\n        content=\"Saved successfully.\"\r\n        onDismiss={() => {}}\r\n      />\r\n      :\r\n      b === 'error' ?\r\n      <Toast\r\n        content=\"Something went wrong.\"\r\n        onDismiss={ () => {}}\r\n      />\r\n      :\r\n      null\r\n    )\r\n  };\r\n  \r\n  return (\r\n    <div style={{marginTop:'50px',height:'100px'}}>\r\n      <ButtonGroup>\r\n        <Button\r\n          onClick = {()=>{\r\n            props.handleEdit();\r\n          }}\r\n        >Cancel</Button>\r\n        <Button primary \r\n          onClick={(e)=>{\r\n            e.preventDefault();\r\n            console.log('calling useMutation hooks');\r\n            // injectScriptTag({\r\n            //   variables:{\r\n            //     input:{\r\n            //       displayScope:'ONLINE_STORE',\r\n            //       src:'https://5c3aa12b.ngrok.io/_next/static/chunks/topBarInjection.js'\r\n            //     }\r\n            //   }\r\n            // })\r\n            props.handleSaving();\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Frame>\r\n        { data && handleInjectionSuccess(data,'success')}\r\n        { error &&  handleInjectionSuccess(error,'error') }\r\n      </Frame>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Index extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      onEdit:false,\r\n      savedName:'',\r\n      barTxtConfig:{initialMsg1:'',prgMsg1:'',achievedMsg:''},\r\n      barFrShGl:30,\r\n      barLink:{url:'',openNew:false},\r\n      barPosition:'',\r\n      bgImg:{},\r\n      styleConfig:{colorConfig:{bgColor:'#000',txtColor:'#b31219',bgOpacity:100,specialColor:'#fff'},fontConfig:{fontFamily:'sans-serif'}},\r\n      customCode:{script:'',style:''},\r\n      dspOnPage:{selected:'',url:''},\r\n      shipsToCountries:[],\r\n      selectedTargets:[],\r\n      scheduleTime:{}\r\n    };\r\n    this.baseState = this.state;\r\n    this.finalBars = React.createRef();\r\n    this.handleEditId = this.handleEditId.bind(this);\r\n  }\r\n\r\n  handleEditId(id){\r\n    console.log(id);\r\n    this.setState({onEdit:true});\r\n  }\r\n\r\n  render(){\r\n    const emptyState = !store.get('ids');\r\n    const {barTxtConfig,barFrShGl,barLink,styleConfig,bgImg,savedName,barPosition,dspOnPage,selectedTargets,scheduleTime,customCode} = this.state;\r\n    return (\r\n      <Page>\r\n        <Layout.Section>\r\n          <BarList \r\n            handleEditId={(id) => this.handleEditId(id)}\r\n            handleTargetCountries={(arr)=> this.setState({shipsToCountries:arr},function(){console.log(this.state.shipsToCountries)})}\r\n          />\r\n          {\r\n            this.state.onEdit?\r\n            <div style={{marginTop:'3em'}}>\r\n              <TemplateStyle handleClickedLi={(bg,ftColor) => this.setState({styleConfig:{...this.state.styleConfig,colorConfig:{...this.state.styleConfig.colorConfig,bgColor:bg,txtColor:ftColor}}})}/>\r\n              <PreviewPage \r\n                others={{savedName,barPosition,dspOnPage,selectedTargets,scheduleTime}}\r\n                customCode={{customCode}}\r\n                contentConfig={{barTxtConfig,barFrShGl,barLink}} \r\n                styleConfig = {{...styleConfig}}\r\n                bgImg = {bgImg}\r\n                ref={this.finalBars}\r\n              />\r\n              <ContentConfigPage \r\n                handleContentConfig_msg={(msg)=> this.setState({barTxtConfig:{...this.barTxtConfig,...msg}})} \r\n                handleContentConfig_goal={(gl) => this.setState({barFrShGl:gl},function(){console.log('index -----',gl)})}\r\n                handleContentConfig_link={(val)=> this.setState({barLink:{...this.state.barLink,...val}})}\r\n                handleName={(name)=> this.setState({savedName:name})}\r\n                handleBarPosition={(p)=> this.setState({barPosition:p})}\r\n              />\r\n              <StyleConfigPage \r\n                handleStyleConfig={(colorCf,fontCf) => {\r\n                  this.setState({styleConfig:{colorConfig:colorCf,fontConfig:fontCf}})\r\n                }}\r\n                uploadBgImg={(bgFile) => this.setState({bgImg:bgFile})}\r\n                {...this.state}\r\n              />\r\n              <TargetConfigPage \r\n                handleDisplayOnPage={(sec,url)=>this.setState({dspOnPage:{selected:sec,url:url}})}\r\n                shipsToCountries={this.state.shipsToCountries}\r\n                handleSelectedTargets={(val)=>this.setState({selectedTargets:val})}\r\n                handleTimeSetting={(timeObj) => this.setState({scheduleTime:timeObj})}\r\n              />\r\n              <CustomCodePage handleCustomCode={(script,style) => {this.setState({customCode:{script:script,style:style}})}}/>\r\n              <SaveUserPreference \r\n                handleEdit={()=> {\r\n                  this.setState(this.baseState);\r\n                }}\r\n                handleSaving={()=>{\r\n                  console.log(this.finalBars.current);\r\n                }}\r\n              />\r\n            </div>\r\n            :\r\n            null\r\n          }\r\n        </Layout.Section>\r\n      </Page>\r\n    )\r\n  };\r\n\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}