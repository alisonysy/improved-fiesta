{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries2 from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useCallback } from 'react';\nimport { Card, Button, TextField } from '@shopify/polaris';\nimport '../css/fonts.css';\nvar fontsJson = {\n  \"sans-serif\": \"Sans serif\",\n  \"Lato\": \"Lato\",\n  \"Montserrat\": \"Montserrat\",\n  \"Raleway\": \"Raleway\",\n  \"Righteous\": \"Righteous\",\n  \"Josefin Sans\": \"Josefin Sans\"\n};\n\nfunction FontItem(props) {\n  var fontFam = props.fontFam;\n  var fontName = props.fontName;\n  return __jsx(\"span\", {\n    style: {\n      margin: '0 .6em .6em 0',\n      fontFamily: fontFam\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return props.handleFontFam(fontFam);\n    }\n  }, fontName));\n}\n\nfunction Fonts(props) {\n  var fontsArr = [];\n\n  var _useState = useState(props.styleConfig.fontConfig && props.styleConfig.fontConfig.fontSize ? props.styleConfig.fontConfig.fontSize : 18),\n      fontSize = _useState[0],\n      setFontSize = _useState[1];\n\n  var _useState2 = useState(props.styleConfig.fontConfig && props.styleConfig.fontConfig.barPadding ? props.styleConfig.fontConfig.barPadding : 10),\n      padding = _useState2[0],\n      setPadding = _useState2[1];\n\n  var _useState3 = useState(props.styleConfig.fontConfig && props.styleConfig.fontConfig.fontFamily && props.styleConfig.fontConfig.fontFamily.length > 0 ? props.styleConfig.fontConfig.fontFamily : 'sans-serif'),\n      fontFam = _useState3[0],\n      setFontFam = _useState3[1];\n\n  var handleFontFam = useCallback(function (val) {\n    setFontFam(val);\n  }, [fontFam]);\n  var handleFontSize = useCallback(function (val) {\n    setFontSize(val);\n  }, [fontSize]);\n  var handlePadding = useCallback(function (val) {\n    setPadding(val);\n  }, [padding]);\n  useEffect(function () {\n    props.handleStyleConfig(undefined, {\n      fontFamily: fontFam,\n      fontSize: fontSize,\n      barPadding: padding\n    });\n  }, [fontFam, fontSize, padding]);\n\n  var renderFontItem = function renderFontItem() {\n    for (var _i = 0, _Object$entries = _Object$entries2(fontsJson); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          val = _Object$entries$_i[1];\n\n      fontsArr.push(__jsx(FontItem, {\n        fontFam: key,\n        fontName: val,\n        handleFontFam: handleFontFam,\n        key: key\n      }));\n    }\n\n    return fontsArr;\n  };\n\n  return __jsx(Card.Section, null, __jsx(\"div\", {\n    style: {\n      marginBottom: '5px'\n    }\n  }, \"Font family:\"), renderFontItem(), __jsx(\"div\", {\n    style: {\n      margin: '1em 0'\n    }\n  }, __jsx(TextField, {\n    label: \"Font size:\",\n    suffix: \"px\",\n    type: \"number\",\n    value: fontSize,\n    onChange: handleFontSize\n  })), __jsx(\"div\", null, __jsx(TextField, {\n    label: \"Bar padding:\",\n    suffix: \"px\",\n    type: \"number\",\n    value: padding,\n    onChange: handlePadding\n  })));\n}\n\nexport default Fonts;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\fonts.js"],"names":["useState","useEffect","useCallback","Card","Button","TextField","fontsJson","FontItem","props","fontFam","fontName","margin","fontFamily","handleFontFam","Fonts","fontsArr","styleConfig","fontConfig","fontSize","setFontSize","barPadding","padding","setPadding","length","setFontFam","val","handleFontSize","handlePadding","handleStyleConfig","undefined","renderFontItem","key","push","marginBottom"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport { Card, Button, TextField } from '@shopify/polaris';\r\nimport '../css/fonts.css';\r\n\r\nconst fontsJson={\r\n  \"sans-serif\":\"Sans serif\",\r\n  \"Lato\":\"Lato\",\r\n  \"Montserrat\":\"Montserrat\",\r\n  \"Raleway\":\"Raleway\",\r\n  \"Righteous\":\"Righteous\",\r\n  \"Josefin Sans\":\"Josefin Sans\"\r\n}\r\n\r\nfunction FontItem(props){\r\n  const fontFam = props.fontFam;\r\n  const fontName = props.fontName;\r\n\r\n  return (\r\n    <span style={{margin:'0 .6em .6em 0',fontFamily:fontFam}}>\r\n      <Button onClick={() => props.handleFontFam(fontFam)} >\r\n        {fontName}\r\n      </Button>\r\n    </span>\r\n  )\r\n}\r\n\r\nfunction Fonts(props){\r\n  let fontsArr =[];\r\n  const [fontSize,setFontSize] = useState(\r\n    props.styleConfig.fontConfig && props.styleConfig.fontConfig.fontSize ?\r\n      props.styleConfig.fontConfig.fontSize\r\n      :\r\n      18\r\n    );\r\n  const [padding,setPadding] = useState(\r\n    props.styleConfig.fontConfig && props.styleConfig.fontConfig.barPadding ?\r\n      props.styleConfig.fontConfig.barPadding\r\n      :\r\n      10\r\n    );\r\n  const [fontFam,setFontFam] = useState(\r\n    props.styleConfig.fontConfig && props.styleConfig.fontConfig.fontFamily && props.styleConfig.fontConfig.fontFamily.length > 0 ?\r\n      props.styleConfig.fontConfig.fontFamily\r\n      :\r\n      'sans-serif'\r\n    );\r\n\r\n  const handleFontFam = useCallback(\r\n    (val) => {\r\n      setFontFam(val);\r\n    },\r\n    [fontFam]\r\n  )\r\n\r\n  const handleFontSize = useCallback(\r\n    (val) => {\r\n      setFontSize(val);\r\n    },\r\n    [fontSize]\r\n  );\r\n\r\n  const handlePadding = useCallback(\r\n    (val) => {\r\n      setPadding(val);\r\n    },\r\n    [padding]\r\n  );\r\n\r\n  useEffect(()=>{\r\n    props.handleStyleConfig(undefined,{fontFamily:fontFam,fontSize:fontSize,barPadding:padding});\r\n  },[fontFam,fontSize,padding])\r\n\r\n\r\n  const renderFontItem=() => {\r\n    for(var [key,val] of Object.entries(fontsJson)){\r\n      fontsArr.push(<FontItem fontFam={key} fontName={val} handleFontFam={handleFontFam} key={key} />);\r\n    }\r\n    return fontsArr;\r\n  }\r\n\r\n  return (\r\n    <Card.Section>\r\n      <div style={{marginBottom:'5px'}}>Font family:</div>\r\n      {\r\n        renderFontItem()\r\n      }\r\n      <div style={{margin:'1em 0'}}>\r\n        <TextField \r\n          label=\"Font size:\"\r\n          suffix=\"px\"\r\n          type=\"number\"\r\n          value={fontSize}\r\n          onChange={handleFontSize}\r\n        />\r\n      </div>\r\n      <div>\r\n        <TextField \r\n          label=\"Bar padding:\"\r\n          suffix=\"px\"\r\n          type=\"number\"\r\n          value={padding}\r\n          onChange={handlePadding}\r\n        />\r\n      </div>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nexport default Fonts;"]},"metadata":{},"sourceType":"module"}