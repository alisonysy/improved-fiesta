{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, DatePicker, ChoiceList } from '@shopify/polaris';\nimport { useCallback, useState, useEffect } from 'react';\n\nfunction Choose(props) {\n  var _useState = useState(['always']),\n      selected = _useState[0],\n      setSelected = _useState[1];\n\n  var handleChange = useCallback(function (value) {\n    return setSelected(value);\n  }, []);\n  var renderDatePicker = useCallback(function (isSelected) {\n    return isSelected && __jsx(Schedule, null);\n  });\n  return __jsx(ChoiceList, {\n    choices: [{\n      label: 'Always display',\n      value: 'always'\n    }, {\n      label: 'Only display within the giving period of time',\n      value: 'scheduled',\n      renderChildren: renderDatePicker\n    }],\n    selected: selected,\n    onChange: handleChange\n  });\n}\n\n;\n\nfunction SelectTime(props) {\n  return __jsx(\"div\", {\n    style: {\n      margin: '1em 0'\n    }\n  }, __jsx(\"div\", null, \"Please enter the hour (from 0 to 23) and minute (from 0 to 59) that the display \", __jsx(\"strong\", null, \"starts\"), \":\"), __jsx(\"div\", {\n    style: {\n      marginTop: '.5em'\n    }\n  }, __jsx(\"span\", {\n    style: {\n      marginRight: '.3em'\n    }\n  }, \"Hour:\"), __jsx(\"input\", {\n    id: \"start_hour\",\n    type: \"number\",\n    min: 0,\n    max: 23,\n    style: {\n      marginRight: '1em'\n    }\n  }), __jsx(\"span\", {\n    style: {\n      marginRight: '.3em'\n    }\n  }, \"Minute:\"), __jsx(\"input\", {\n    id: \"start_min\",\n    type: \"number\",\n    min: 0,\n    max: 59\n  })), __jsx(\"div\", {\n    style: {\n      marginTop: '.5em'\n    }\n  }, \"Please enter the hour (from 0 to 23) and minute (from 0 to 59) that the display \", __jsx(\"strong\", null, \"ends\"), \":\"), __jsx(\"div\", {\n    style: {\n      marginTop: '.5em'\n    }\n  }, __jsx(\"span\", {\n    style: {\n      marginRight: '.3em'\n    }\n  }, \"Hour:\"), __jsx(\"input\", {\n    id: \"end_hour\",\n    type: \"number\",\n    min: 0,\n    max: 23,\n    style: {\n      marginRight: '1em'\n    }\n  }), __jsx(\"span\", {\n    style: {\n      marginRight: '.3em'\n    }\n  }, \"Minute:\"), __jsx(\"input\", {\n    id: \"end_min\",\n    type: \"number\",\n    min: 0,\n    max: 59\n  })));\n}\n\nfunction Schedule(props) {\n  var _useState2 = useState({\n    month: 9,\n    year: 2019\n  }),\n      _useState2$ = _useState2[0],\n      month = _useState2$.month,\n      year = _useState2$.year,\n      setDate = _useState2[1];\n\n  var _useState3 = useState({\n    start: new Date(),\n    end: new Date()\n  }),\n      selectedDates = _useState3[0],\n      setSelectedDates = _useState3[1];\n\n  var _useState4 = useState({\n    leftMon: month + 1,\n    rightMon: month + 2\n  }),\n      _useState4$ = _useState4[0],\n      leftMon = _useState4$.leftMon,\n      rightMon = _useState4$.rightMon,\n      setMonth = _useState4[1];\n\n  var handleMonthChange = useCallback(function (month, year) {\n    setDate({\n      month: month,\n      year: year\n    });\n    setMonth({\n      leftMon: month + 1,\n      rightMon: month + 2\n    });\n  }, []);\n\n  var transpileMonth = function transpileMonth(month) {\n    month = '' + month;\n\n    switch (month) {\n      case '1':\n        return 'January';\n        break;\n\n      case '2':\n        return 'Feburary';\n        break;\n\n      case '3':\n        return 'March';\n        break;\n\n      case '4':\n        return 'April';\n\n      case '5':\n        return 'May';\n\n      case '6':\n        return 'June';\n\n      case '7':\n        return 'July';\n\n      case '8':\n        return 'August';\n\n      case '9':\n        return 'September';\n\n      case '10':\n        return 'October';\n\n      case '11':\n        return 'November';\n\n      case '12':\n        return 'December';\n\n      case '13':\n        return 'January';\n    }\n  };\n\n  var handleTimeSelection = function handleTimeSelection() {\n    var startH = document.getElementById('start_hour'),\n        startM = document.getElementById('start_min'),\n        endH = document.getElementById('end_hour'),\n        endM = document.getElementById('end_min');\n    startH.addEventListener('input', function (e) {\n      console.log(e);\n    });\n  };\n\n  useEffect(function () {\n    console.log('selected dates are', selectedDates);\n  }, [selectedDates]);\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexFlow: 'row nowrap',\n      justifyContent: 'stretch'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '50%',\n      textAlign: 'center'\n    }\n  }, transpileMonth(leftMon)), __jsx(\"div\", {\n    style: {\n      width: '50%',\n      textAlign: 'center'\n    }\n  }, transpileMonth(rightMon))), __jsx(DatePicker, {\n    month: month,\n    year: year,\n    onChange: setSelectedDates,\n    onMonthChange: handleMonthChange,\n    selected: selectedDates,\n    multiMonth: true,\n    allowRange: true\n  }), __jsx(SelectTime, null));\n}\n\nvar DisplaySchedule =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DisplaySchedule, _React$Component);\n\n  function DisplaySchedule(props) {\n    var _this;\n\n    _classCallCheck(this, DisplaySchedule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DisplaySchedule).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(DisplaySchedule, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Card.Section, null, __jsx(\"div\", {\n        style: {\n          marginBottom: '1em',\n          fontSize: '1.1em'\n        }\n      }, \"Display schedule:\"), __jsx(Choose, null), __jsx(\"div\", null, \"Define the Start Time and End Time of the display period.\"));\n    }\n  }]);\n\n  return DisplaySchedule;\n}(React.Component);\n\nexport default DisplaySchedule;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\displaySchedule.js"],"names":["Card","DatePicker","ChoiceList","useCallback","useState","useEffect","Choose","props","selected","setSelected","handleChange","value","renderDatePicker","isSelected","label","renderChildren","SelectTime","margin","marginTop","marginRight","Schedule","month","year","setDate","start","Date","end","selectedDates","setSelectedDates","leftMon","rightMon","setMonth","handleMonthChange","transpileMonth","handleTimeSelection","startH","document","getElementById","startM","endH","endM","addEventListener","e","console","log","display","flexFlow","justifyContent","width","textAlign","DisplaySchedule","state","marginBottom","fontSize","React","Component"],"mappings":"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","sourcesContent":["import {Card, DatePicker, ChoiceList} from '@shopify/polaris';\r\nimport {useCallback, useState, useEffect}  from 'react';\r\n\r\nfunction Choose(props){\r\n  const [selected, setSelected] = useState(['always']);\r\n\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n\r\n  const renderDatePicker = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <Schedule />\r\n      )\r\n  )\r\n\r\n  return (\r\n    <ChoiceList\r\n      choices={[\r\n        {label: 'Always display', value: 'always'},\r\n        {label: 'Only display within the giving period of time', value: 'scheduled',renderChildren:renderDatePicker},\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nfunction SelectTime(props){\r\n  \r\n  return (\r\n    <div style={{margin:'1em 0'}}>\r\n      <div>Please enter the hour (from 0 to 23) and minute (from 0 to 59) that the display <strong>starts</strong>:</div>\r\n      <div style={{marginTop:'.5em'}}>\r\n        <span style={{marginRight:'.3em'}}>Hour:</span>\r\n        <input id=\"start_hour\" type='number' min={0} max={23}  style={{marginRight:'1em'}}/>\r\n        <span style={{marginRight:'.3em'}}>Minute:</span>\r\n        <input id=\"start_min\" type='number' min={0} max={59}/>\r\n      </div>\r\n      <div style={{marginTop:'.5em'}}>Please enter the hour (from 0 to 23) and minute (from 0 to 59) that the display <strong>ends</strong>:</div>\r\n      <div style={{marginTop:'.5em'}}>\r\n        <span style={{marginRight:'.3em'}}>Hour:</span>\r\n        <input id=\"end_hour\" type='number' min={0} max={23}  style={{marginRight:'1em'}}/>\r\n        <span  style={{marginRight:'.3em'}}>Minute:</span>\r\n        <input id=\"end_min\" type='number' min={0} max={59}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Schedule(props){\r\n  const [{ month, year }, setDate] = useState({\r\n    month: 9,\r\n    year: 2019\r\n  });\r\n  const [selectedDates, setSelectedDates] = useState({\r\n    start: new Date(),\r\n    end: new Date()\r\n  });\r\n  const [{leftMon,rightMon},setMonth] = useState({\r\n    leftMon:month+1,\r\n    rightMon:month+2\r\n  })\r\n\r\n  const handleMonthChange = useCallback((month, year) => {\r\n    setDate({ month, year });\r\n    setMonth({leftMon:month+1,rightMon:month+2})\r\n  }, []);\r\n\r\n  const transpileMonth = (month) => {\r\n    month = ''+month;\r\n    switch(month){\r\n      case '1':\r\n        return 'January';\r\n        break;\r\n      case '2':\r\n        return 'Feburary';\r\n        break;\r\n      case '3':\r\n        return 'March';\r\n        break;\r\n      case '4':\r\n        return 'April';\r\n      case '5':\r\n        return 'May';\r\n      case '6':\r\n        return 'June';\r\n      case '7':\r\n        return 'July';\r\n      case '8':\r\n        return 'August';\r\n      case '9':\r\n        return 'September';\r\n      case '10':\r\n        return 'October';\r\n      case '11':\r\n        return 'November';\r\n      case '12':\r\n        return 'December';\r\n      case '13':\r\n        return 'January';\r\n    }\r\n  };\r\n\r\n  const handleTimeSelection = () => {\r\n    const startH = document.getElementById('start_hour'),\r\n          startM = document.getElementById('start_min'),\r\n          endH = document.getElementById('end_hour'),\r\n          endM = document.getElementById('end_min');\r\n    startH.addEventListener('input',function(e){\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  useEffect(()=>{\r\n    console.log('selected dates are',selectedDates);\r\n    \r\n  },[selectedDates]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div style={{display:'flex',flexFlow:'row nowrap',justifyContent:'stretch'}}>\r\n        <div style={{width:'50%',textAlign:'center'}}>{transpileMonth(leftMon)}</div>\r\n        <div style={{width:'50%',textAlign:'center'}}>{transpileMonth(rightMon)}</div>\r\n      </div>\r\n      <DatePicker \r\n      month={month} \r\n      year={year} \r\n      onChange={setSelectedDates} \r\n      onMonthChange={handleMonthChange} \r\n      selected={selectedDates} \r\n      multiMonth={true} \r\n      allowRange={true} \r\n      />\r\n      <SelectTime />\r\n    </div>\r\n  );\r\n}\r\n\r\nclass DisplaySchedule extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={}\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card.Section>\r\n        <div style={{marginBottom:'1em',fontSize:'1.1em'}}>Display schedule:</div>\r\n        <Choose />\r\n        <div>Define the Start Time and End Time of the display period.</div>\r\n      </Card.Section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplaySchedule;"]},"metadata":{},"sourceType":"module"}