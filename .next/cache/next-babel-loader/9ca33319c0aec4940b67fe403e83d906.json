{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, DisplayText, Stack, TextField, Button, Form, FormLayout } from '@shopify/polaris';\nimport { useState, useCallback, useEffect } from 'react';\nimport ImageDropZone from '../snippets/imageDropZone';\nimport '../css/fonts.css';\n\nfunction BackgroundSetting(props) {\n  const {\n    0: bgColor,\n    1: setBgColor\n  } = useState('#000');\n  const {\n    0: bgOpacity,\n    1: setBgOpacity\n  } = useState('100');\n  const {\n    0: txtColor,\n    1: setTxtColor\n  } = useState('#b31219');\n  const {\n    0: specialColor,\n    1: setSpecialColor\n  } = useState('#fff');\n  console.log(this.props.styleConfig);\n  useEffect(() => {\n    props.handleStyleConfig({\n      bgColor: bgColor,\n      bgOpacity: bgOpacity,\n      txtColor: txtColor,\n      specialColor: specialColor\n    }, undefined);\n  }, [bgColor, bgOpacity, txtColor, specialColor]);\n  return __jsx(Card.Section, null, __jsx(Stack, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Background color:\"), __jsx(\"div\", {\n    style: {\n      height: '25px',\n      width: '25px',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#ddd',\n      display: 'inline-block',\n      backgroundColor: bgColor\n    }\n  }), __jsx(TextField, {\n    value: bgColor,\n    onChange: nw => setBgColor(nw)\n  })), __jsx(\"div\", null, __jsx(\"h3\", null, \"Background opacity:\"), __jsx(\"div\", {\n    style: {\n      display: 'inline-block'\n    }\n  }, bgOpacity), __jsx(TextField, {\n    value: bgOpacity,\n    onChange: nw => setBgOpacity(nw),\n    type: \"number\",\n    helpText: \"0 is transparent, 100 is opaque.\"\n  }))), __jsx(Stack, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Text color:\"), __jsx(\"div\", {\n    style: {\n      height: '25px',\n      width: '25px',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#ddd',\n      display: 'inline-block',\n      backgroundColor: txtColor\n    }\n  }), __jsx(TextField, {\n    value: txtColor,\n    onChange: nw => setTxtColor(nw)\n  })), __jsx(\"div\", null, __jsx(\"h3\", null, \"Special text color:\"), __jsx(\"div\", {\n    style: {\n      height: '25px',\n      width: '25px',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#ddd',\n      display: 'inline-block',\n      backgroundColor: specialColor\n    }\n  }), __jsx(TextField, {\n    value: specialColor,\n    onChange: nw => setSpecialColor(nw)\n  }))));\n}\n\nfunction Fonts(props) {\n  const {\n    0: fontSize,\n    1: setFontSize\n  } = useState(18);\n  const {\n    0: padding,\n    1: setPadding\n  } = useState(10);\n  const {\n    0: fontFam,\n    1: setFontFam\n  } = useState('sans-serif');\n  const handleFontFam = useCallback(val => {\n    setFontFam(val);\n    props.handleStyleConfig(undefined, {\n      fontFamily: val\n    });\n  }, [fontFam]);\n  const handleFontSize = useCallback(val => {\n    setFontSize(val);\n    props.handleStyleConfig(undefined, {\n      fontSize: val\n    });\n  }, []);\n  const handlePadding = useCallback(val => {\n    setPadding(val);\n    props.handleStyleConfig(undefined, {\n      barPadding: val\n    });\n  }, []);\n  return __jsx(Card.Section, null, __jsx(\"div\", null, \"Font family:\"), __jsx(Button, {\n    onClick: () => handleFontFam('Montserrat')\n  }, \"Montserrat\"), __jsx(Button, {\n    onClick: () => handleFontFam('sans-serif')\n  }, \"Sans serif\"), __jsx(TextField, {\n    label: \"Font size:\",\n    suffix: \"px\",\n    type: \"number\",\n    value: fontSize,\n    onChange: handleFontSize\n  }), __jsx(TextField, {\n    label: \"Bar padding:\",\n    suffix: \"px\",\n    type: \"number\",\n    value: padding,\n    onChange: handlePadding\n  }));\n}\n\nclass StyleConfigPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colorConfig: {},\n      fontConfig: {},\n      bgImg: {}\n    };\n    this.handleStyleConfig = this.handleStyleConfig.bind(this);\n    this.uploadBgImg = this.uploadBgImg.bind(this);\n  }\n\n  handleStyleConfig(colorCf, fontCf) {\n    this.setState(state => {\n      if (colorCf === undefined) {\n        fontCf = _objectSpread({}, state.fontConfig, fontCf);\n        return {\n          colorConfig: state.colorConfig,\n          fontConfig: fontCf\n        };\n      } else if (fontCf === undefined) {\n        colorCf = _objectSpread({}, state.colorConfig, colorCf);\n        return {\n          colorConfig: colorCf,\n          fontConfig: state.fontConfig\n        };\n      }\n    }, function () {\n      this.props.handleStyleConfig(this.state.colorConfig, this.state.fontConfig);\n    });\n  }\n\n  uploadBgImg(bgFile) {\n    this.setState({\n      bgImg: bgFile\n    }, function () {\n      this.props.uploadBgImg(this.state.bgImg);\n    });\n  }\n\n  render() {\n    console.log('passed from index', this.props.styleConfig);\n    return __jsx(Card, null, __jsx(Form, null, __jsx(FormLayout, null, __jsx(DisplayText, null, \"Style Configuration\"), __jsx(BackgroundSetting, _extends({\n      handleStyleConfig: this.handleStyleConfig\n    }, this.props.styleConfig)), __jsx(ImageDropZone, {\n      uploadBgImg: this.uploadBgImg\n    }), __jsx(Fonts, {\n      handleStyleConfig: this.handleStyleConfig\n    }))));\n  }\n\n}\n\nexport default StyleConfigPage;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\styleConfig.js"],"names":["Card","DisplayText","Stack","TextField","Button","Form","FormLayout","useState","useCallback","useEffect","ImageDropZone","BackgroundSetting","props","bgColor","setBgColor","bgOpacity","setBgOpacity","txtColor","setTxtColor","specialColor","setSpecialColor","console","log","styleConfig","handleStyleConfig","undefined","height","width","borderWidth","borderStyle","borderColor","display","backgroundColor","nw","Fonts","fontSize","setFontSize","padding","setPadding","fontFam","setFontFam","handleFontFam","val","fontFamily","handleFontSize","handlePadding","barPadding","StyleConfigPage","React","Component","constructor","state","colorConfig","fontConfig","bgImg","bind","uploadBgImg","colorCf","fontCf","setState","bgFile","render"],"mappings":"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","sourcesContent":["import { Card, DisplayText, Stack, TextField, Button, Form, FormLayout } from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport ImageDropZone from '../snippets/imageDropZone';\r\nimport '../css/fonts.css';\r\n\r\nfunction BackgroundSetting(props){\r\n  const [bgColor, setBgColor] = useState('#000');\r\n  const [bgOpacity, setBgOpacity] = useState('100');\r\n\r\n  const [txtColor, setTxtColor] = useState('#b31219');\r\n  const [specialColor, setSpecialColor] = useState('#fff');\r\n\r\n  console.log(this.props.styleConfig)\r\n  useEffect(()=>{\r\n    props.handleStyleConfig({\r\n      bgColor:bgColor,\r\n      bgOpacity:bgOpacity,\r\n      txtColor:txtColor,\r\n      specialColor:specialColor\r\n    },undefined);\r\n  },[bgColor,bgOpacity,txtColor,specialColor])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <Stack>\r\n        <div>\r\n          <h3>Background color:</h3>\r\n          <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:bgColor}}></div>\r\n          <TextField \r\n            value={bgColor}\r\n            onChange={nw => setBgColor(nw)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Background opacity:</h3>\r\n          <div style={{display:'inline-block'}}>{bgOpacity}</div>\r\n          <TextField \r\n            value={bgOpacity}\r\n            onChange={nw => setBgOpacity(nw)}\r\n            type=\"number\"\r\n            helpText=\"0 is transparent, 100 is opaque.\"\r\n          />\r\n        </div>\r\n      </Stack>\r\n      <Stack>\r\n        <div>\r\n          <h3>Text color:</h3>\r\n          <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:txtColor}}></div>\r\n          <TextField \r\n            value={txtColor}\r\n            onChange={nw => setTxtColor(nw)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <h3>Special text color:</h3>\r\n          <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:specialColor}}></div>\r\n          <TextField \r\n            value={specialColor}\r\n            onChange={nw => setSpecialColor(nw)}\r\n          />\r\n        </div>\r\n      </Stack>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction Fonts(props){\r\n  const [fontSize,setFontSize] = useState(18);\r\n  const [padding,setPadding] = useState(10);\r\n  const [fontFam,setFontFam] = useState('sans-serif');\r\n\r\n  const handleFontFam = useCallback(\r\n    (val) => {\r\n      setFontFam(val);\r\n      props.handleStyleConfig(undefined,{fontFamily:val});\r\n    },\r\n    [fontFam]\r\n  )\r\n\r\n  const handleFontSize = useCallback(\r\n    (val) => {\r\n      setFontSize(val);\r\n      props.handleStyleConfig(undefined,{fontSize:val})\r\n    },\r\n    []\r\n  );\r\n\r\n  const handlePadding = useCallback(\r\n    (val) => {\r\n      setPadding(val);\r\n      props.handleStyleConfig(undefined,{barPadding:val})\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Card.Section>\r\n      <div>Font family:</div>\r\n      <Button onClick={() => handleFontFam('Montserrat')}>Montserrat</Button>\r\n      <Button onClick={() => handleFontFam('sans-serif')}>Sans serif</Button>\r\n      <TextField \r\n        label=\"Font size:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={fontSize}\r\n        onChange={handleFontSize}\r\n      />\r\n      <TextField \r\n        label=\"Bar padding:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={padding}\r\n        onChange={handlePadding}\r\n      />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nclass StyleConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      colorConfig:{},\r\n      fontConfig:{},\r\n      bgImg:{}\r\n    }\r\n    this.handleStyleConfig = this.handleStyleConfig.bind(this);\r\n    this.uploadBgImg = this.uploadBgImg.bind(this);\r\n  }\r\n\r\n  handleStyleConfig(colorCf,fontCf){\r\n    this.setState((state)=>{\r\n      if(colorCf===undefined){\r\n        fontCf = {...state.fontConfig,...fontCf};\r\n        return {colorConfig:state.colorConfig,fontConfig:fontCf}\r\n      }else if(fontCf === undefined){\r\n        colorCf = {...state.colorConfig,...colorCf};\r\n        return {colorConfig:colorCf,fontConfig:state.fontConfig}\r\n      }\r\n    },function(){\r\n      this.props.handleStyleConfig(this.state.colorConfig,this.state.fontConfig);\r\n    })\r\n  }\r\n\r\n  uploadBgImg(bgFile){\r\n    this.setState({bgImg:bgFile},function(){\r\n      this.props.uploadBgImg(this.state.bgImg)\r\n    })\r\n  }\r\n\r\n  render(){\r\n    console.log('passed from index',this.props.styleConfig)\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <DisplayText>Style Configuration</DisplayText>\r\n            <BackgroundSetting handleStyleConfig={this.handleStyleConfig} {...this.props.styleConfig}/>\r\n            <ImageDropZone uploadBgImg={this.uploadBgImg}/>\r\n            <Fonts  handleStyleConfig={this.handleStyleConfig}/>\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StyleConfigPage;"]},"metadata":{},"sourceType":"module"}