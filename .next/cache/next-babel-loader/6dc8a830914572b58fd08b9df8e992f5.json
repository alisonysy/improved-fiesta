{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Card } from \"@shopify/polaris\";\nconst countryName = {\n  'AF': 'Afghanistan',\n  'AX': 'Aland Islands',\n  'AL': 'Albania',\n  'DZ': 'Algeria',\n  'AS': 'American Samoa',\n  'AD': 'Andorra',\n  'AO': 'Angola',\n  'AI': 'Anguilla',\n  'AQ': 'Antarctica',\n  'AG': 'Antigua And Barbuda',\n  'AR': 'Argentina',\n  'AM': 'Armenia',\n  'AW': 'Aruba',\n  'AU': 'Australia',\n  'AT': 'Austria',\n  'AZ': 'Azerbaijan',\n  'BS': 'Bahamas',\n  'BH': 'Bahrain',\n  'BD': 'Bangladesh',\n  'BB': 'Barbados',\n  'BY': 'Belarus',\n  'BE': 'Belgium',\n  'BZ': 'Belize',\n  'BJ': 'Benin',\n  'BM': 'Bermuda',\n  'BT': 'Bhutan',\n  'BO': 'Bolivia',\n  'BQ': 'Bonaire, Sint Eustatius and Saba',\n  'BA': 'Bosnia And Herzegovina',\n  'BW': 'Botswana',\n  'BV': 'Bouvet Island',\n  'BR': 'Brazil',\n  'IO': 'British Indian Ocean Territory',\n  'BN': 'Brunei Darussalam',\n  'BG': 'Bulgaria',\n  'BF': 'Burkina Faso',\n  'BI': 'Burundi',\n  'KH': 'Cambodia',\n  'CM': 'Cameroon',\n  'CA': 'Canada',\n  'CV': 'Cape Verde',\n  'CW': 'CuraÃ§ao',\n  'KY': 'Cayman Islands',\n  'CF': 'Central African Republic',\n  'TD': 'Chad',\n  'CL': 'Chile',\n  'CN': 'China',\n  'CX': 'Christmas Island',\n  'CC': 'Cocos (Keeling) Islands',\n  'CO': 'Colombia',\n  'KM': 'Comoros',\n  'CG': 'Congo',\n  'CD': 'Congo, Democratic Republic',\n  'CK': 'Cook Islands',\n  'CR': 'Costa Rica',\n  'CI': 'Cote D\\'Ivoire',\n  'HR': 'Croatia',\n  'CU': 'Cuba',\n  'CY': 'Cyprus',\n  'CZ': 'Czech Republic',\n  'DK': 'Denmark',\n  'DJ': 'Djibouti',\n  'DM': 'Dominica',\n  'DO': 'Dominican Republic',\n  'EC': 'Ecuador',\n  'EG': 'Egypt',\n  'SV': 'El Salvador',\n  'GQ': 'Equatorial Guinea',\n  'ER': 'Eritrea',\n  'EE': 'Estonia',\n  'ET': 'Ethiopia',\n  'FK': 'Falkland Islands (Malvinas)',\n  'FO': 'Faroe Islands',\n  'FJ': 'Fiji',\n  'FI': 'Finland',\n  'FR': 'France',\n  'GF': 'French Guiana',\n  'PF': 'French Polynesia',\n  'TF': 'French Southern Territories',\n  'GA': 'Gabon',\n  'GM': 'Gambia',\n  'GE': 'Georgia',\n  'DE': 'Germany',\n  'GH': 'Ghana',\n  'GI': 'Gibraltar',\n  'GR': 'Greece',\n  'GL': 'Greenland',\n  'GD': 'Grenada',\n  'GP': 'Guadeloupe',\n  'GU': 'Guam',\n  'GT': 'Guatemala',\n  'GG': 'Guernsey',\n  'GN': 'Guinea',\n  'GW': 'Guinea-Bissau',\n  'GY': 'Guyana',\n  'HT': 'Haiti',\n  'HM': 'Heard Island & Mcdonald Islands',\n  'VA': 'Holy See (Vatican City State)',\n  'HN': 'Honduras',\n  'HK': 'Hong Kong',\n  'HU': 'Hungary',\n  'IS': 'Iceland',\n  'IN': 'India',\n  'ID': 'Indonesia',\n  'IR': 'Iran, Islamic Republic Of',\n  'IQ': 'Iraq',\n  'IE': 'Ireland',\n  'IM': 'Isle Of Man',\n  'IL': 'Israel',\n  'IT': 'Italy',\n  'JM': 'Jamaica',\n  'JP': 'Japan',\n  'JE': 'Jersey',\n  'JO': 'Jordan',\n  'KZ': 'Kazakhstan',\n  'KE': 'Kenya',\n  'KI': 'Kiribati',\n  'KR': 'Korea',\n  'KP': 'Korea, Democratic People\\'s Republic Of',\n  'KW': 'Kuwait',\n  'KG': 'Kyrgyzstan',\n  'LA': 'Lao People\\'s Democratic Republic',\n  'LV': 'Latvia',\n  'LB': 'Lebanon',\n  'LS': 'Lesotho',\n  'LR': 'Liberia',\n  'LY': 'Libyan Arab Jamahiriya',\n  'LI': 'Liechtenstein',\n  'LT': 'Lithuania',\n  'LU': 'Luxembourg',\n  'MO': 'Macao',\n  'MK': 'Macedonia',\n  'MG': 'Madagascar',\n  'MW': 'Malawi',\n  'MY': 'Malaysia',\n  'MV': 'Maldives',\n  'ML': 'Mali',\n  'MT': 'Malta',\n  'MH': 'Marshall Islands',\n  'MQ': 'Martinique',\n  'MR': 'Mauritania',\n  'MU': 'Mauritius',\n  'YT': 'Mayotte',\n  'MX': 'Mexico',\n  'FM': 'Micronesia, Federated States Of',\n  'MD': 'Moldova',\n  'MC': 'Monaco',\n  'MN': 'Mongolia',\n  'ME': 'Montenegro',\n  'MS': 'Montserrat',\n  'MA': 'Morocco',\n  'MZ': 'Mozambique',\n  'MM': 'Myanmar',\n  'NA': 'Namibia',\n  'NR': 'Nauru',\n  'NP': 'Nepal',\n  'NL': 'Netherlands',\n  'AN': 'Netherlands Antilles',\n  'NC': 'New Caledonia',\n  'NZ': 'New Zealand',\n  'NI': 'Nicaragua',\n  'NE': 'Niger',\n  'NG': 'Nigeria',\n  'NU': 'Niue',\n  'NF': 'Norfolk Island',\n  'MP': 'Northern Mariana Islands',\n  'NO': 'Norway',\n  'OM': 'Oman',\n  'PK': 'Pakistan',\n  'PW': 'Palau',\n  'PS': 'Palestinian Territory, Occupied',\n  'PA': 'Panama',\n  'PG': 'Papua New Guinea',\n  'PY': 'Paraguay',\n  'PE': 'Peru',\n  'PH': 'Philippines',\n  'PN': 'Pitcairn',\n  'PL': 'Poland',\n  'PT': 'Portugal',\n  'PR': 'Puerto Rico',\n  'QA': 'Qatar',\n  'RE': 'Reunion',\n  'RO': 'Romania',\n  'RU': 'Russian Federation',\n  'RW': 'Rwanda',\n  'BL': 'Saint Barthelemy',\n  'SH': 'Saint Helena',\n  'KN': 'Saint Kitts And Nevis',\n  'LC': 'Saint Lucia',\n  'MF': 'Saint Martin',\n  'PM': 'Saint Pierre And Miquelon',\n  'VC': 'Saint Vincent And Grenadines',\n  'WS': 'Samoa',\n  'SM': 'San Marino',\n  'ST': 'Sao Tome And Principe',\n  'SA': 'Saudi Arabia',\n  'SN': 'Senegal',\n  'RS': 'Serbia',\n  'SC': 'Seychelles',\n  'SL': 'Sierra Leone',\n  'SG': 'Singapore',\n  'SK': 'Slovakia',\n  'SI': 'Slovenia',\n  'SB': 'Solomon Islands',\n  'SO': 'Somalia',\n  'ZA': 'South Africa',\n  'GS': 'South Georgia And Sandwich Isl.',\n  'ES': 'Spain',\n  'LK': 'Sri Lanka',\n  'SD': 'Sudan',\n  'SS': 'South Sudan',\n  'SR': 'Suriname',\n  'SJ': 'Svalbard And Jan Mayen',\n  'SZ': 'Swaziland',\n  'SE': 'Sweden',\n  'SX': 'Sint Maarten',\n  'CH': 'Switzerland',\n  'SY': 'Syrian Arab Republic',\n  'TW': 'Taiwan',\n  'TJ': 'Tajikistan',\n  'TZ': 'Tanzania',\n  'TH': 'Thailand',\n  'TL': 'Timor-Leste',\n  'TG': 'Togo',\n  'TK': 'Tokelau',\n  'TO': 'Tonga',\n  'TT': 'Trinidad And Tobago',\n  'TN': 'Tunisia',\n  'TR': 'Turkey',\n  'TM': 'Turkmenistan',\n  'TC': 'Turks And Caicos Islands',\n  'TV': 'Tuvalu',\n  'UG': 'Uganda',\n  'UA': 'Ukraine',\n  'AE': 'United Arab Emirates',\n  'GB': 'United Kingdom',\n  'US': 'United States',\n  'UM': 'United States Outlying Islands',\n  'UY': 'Uruguay',\n  'UZ': 'Uzbekistan',\n  'VU': 'Vanuatu',\n  'VE': 'Venezuela',\n  'VN': 'Viet Nam',\n  'VG': 'Virgin Islands, British',\n  'VI': 'Virgin Islands, U.S.',\n  'WF': 'Wallis And Futuna',\n  'EH': 'Western Sahara',\n  'XK': 'Kosovo',\n  'YE': 'Yemen',\n  'ZM': 'Zambia',\n  'ZW': 'Zimbabwe'\n};\n\nclass SelectCountries extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.selectEl = React.createRef();\n    this.showSelected = React.createRef();\n    this.handleShipsToCountries = this.handleShipsToCountries.bind(this);\n    this.handleSelectEvt = this.handleSelectEvt.bind(this);\n    this.handleClearAllSelected = this.handleClearAllSelected.bind(this);\n  }\n\n  componentDidMount() {\n    let selectEl = this.selectEl.current;\n    let cnArr = this.props.shipsToCountries;\n    this.handleShipsToCountries(selectEl, cnArr);\n    this.handleSelectEvt(selectEl);\n  }\n\n  handleShipsToCountries(select, arr) {\n    let c = arr.map(i => {\n      if (countryName.hasOwnProperty(i)) {\n        let el = document.createElement('option');\n        el.style.padding = '5px 0';\n        el.setAttribute('value', i);\n        el.textContent = countryName[i];\n        select.insertAdjacentElement('afterbegin', el);\n        return countryName[i];\n      }\n    });\n  }\n\n  handleSelectEvt(el) {\n    const self = this;\n    const sp = this.showSelected.current;\n    el.addEventListener('change', function (evt) {\n      let selectedOpts = [];\n      let selectedArr = evt.target.selectedOptions;\n      sp.innerHTML = '';\n\n      for (let n = 0; n < selectedArr.length; n++) {\n        if (!selectedOpts.includes(selectedArr[n].value)) {\n          selectedOpts.push(selectedArr[n].value);\n          let selectedTxt = document.createElement('span');\n          selectedTxt.textContent = selectedArr[n].textContent + ', ';\n          sp.appendChild(selectedTxt);\n        }\n      }\n\n      ;\n      self.handleClearAllSelected(sp);\n      self.props.handleSelectedTargets(selectedOpts);\n    });\n  }\n\n  handleClearAllSelected(el) {\n    let ch = el.querySelectorAll('span');\n    console.log('children inside show selected spans', ch);\n\n    if (ch.length > 0) {\n      let del = document.createElement('div');\n      del.textContent = 'Clear all selected locations';\n      el.appendChild();\n    }\n  }\n\n  render() {\n    return __jsx(Card.Section, null, __jsx(\"div\", {\n      style: {\n        marginBottom: '1em',\n        fontSize: '1.1em'\n      }\n    }, \"Target locations:\"), __jsx(\"div\", null, \"You have selected: \", __jsx(\"span\", {\n      ref: this.showSelected,\n      style: {\n        fontWeight: '700'\n      }\n    })), __jsx(\"select\", {\n      name: \"targetCountries\",\n      id: \"targetCountries\",\n      multiple: true,\n      ref: this.selectEl,\n      style: {\n        height: '100px',\n        width: '50%',\n        paddingLeft: '.6em'\n      }\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: '5px'\n      }\n    }, \"Please hold \", __jsx(\"span\", {\n      style: {\n        backgroundColor: '#ddd',\n        borderRadius: '5px'\n      }\n    }, \"Ctrl\"), \" to select multiple locations. Leave it blank if you want to target ALL countires.\"));\n  }\n\n}\n\nexport default SelectCountries;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\selectCountries.js"],"names":["Card","countryName","SelectCountries","React","Component","constructor","props","state","selectEl","createRef","showSelected","handleShipsToCountries","bind","handleSelectEvt","handleClearAllSelected","componentDidMount","current","cnArr","shipsToCountries","select","arr","c","map","i","hasOwnProperty","el","document","createElement","style","padding","setAttribute","textContent","insertAdjacentElement","self","sp","addEventListener","evt","selectedOpts","selectedArr","target","selectedOptions","innerHTML","n","length","includes","value","push","selectedTxt","appendChild","handleSelectedTargets","ch","querySelectorAll","console","log","del","render","marginBottom","fontSize","fontWeight","height","width","paddingLeft","marginTop","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import { Card } from \"@shopify/polaris\";\r\n\r\nconst countryName = {\r\n  'AF' : 'Afghanistan',\r\n  'AX' : 'Aland Islands',\r\n  'AL' : 'Albania',\r\n  'DZ' : 'Algeria',\r\n  'AS' : 'American Samoa',\r\n  'AD' : 'Andorra',\r\n  'AO' : 'Angola',\r\n  'AI' : 'Anguilla',\r\n  'AQ' : 'Antarctica',\r\n  'AG' : 'Antigua And Barbuda',\r\n  'AR' : 'Argentina',\r\n  'AM' : 'Armenia',\r\n  'AW' : 'Aruba',\r\n  'AU' : 'Australia',\r\n  'AT' : 'Austria',\r\n  'AZ' : 'Azerbaijan',\r\n  'BS' : 'Bahamas',\r\n  'BH' : 'Bahrain',\r\n  'BD' : 'Bangladesh',\r\n  'BB' : 'Barbados',\r\n  'BY' : 'Belarus',\r\n  'BE' : 'Belgium',\r\n  'BZ' : 'Belize',\r\n  'BJ' : 'Benin',\r\n  'BM' : 'Bermuda',\r\n  'BT' : 'Bhutan',\r\n  'BO' : 'Bolivia',\r\n  'BQ' : 'Bonaire, Sint Eustatius and Saba',\r\n  'BA' : 'Bosnia And Herzegovina',\r\n  'BW' : 'Botswana',\r\n  'BV' : 'Bouvet Island',\r\n  'BR' : 'Brazil',\r\n  'IO' : 'British Indian Ocean Territory',\r\n  'BN' : 'Brunei Darussalam',\r\n  'BG' : 'Bulgaria',\r\n  'BF' : 'Burkina Faso',\r\n  'BI' : 'Burundi',\r\n  'KH' : 'Cambodia',\r\n  'CM' : 'Cameroon',\r\n  'CA' : 'Canada',\r\n  'CV' : 'Cape Verde',\r\n  'CW' : 'CuraÃ§ao',\r\n  'KY' : 'Cayman Islands',\r\n  'CF' : 'Central African Republic',\r\n  'TD' : 'Chad',\r\n  'CL' : 'Chile',\r\n  'CN' : 'China',\r\n  'CX' : 'Christmas Island',\r\n  'CC' : 'Cocos (Keeling) Islands',\r\n  'CO' : 'Colombia',\r\n  'KM' : 'Comoros',\r\n  'CG' : 'Congo',\r\n  'CD' : 'Congo, Democratic Republic',\r\n  'CK' : 'Cook Islands',\r\n  'CR' : 'Costa Rica',\r\n  'CI' : 'Cote D\\'Ivoire',\r\n  'HR' : 'Croatia',\r\n  'CU' : 'Cuba',\r\n  'CY' : 'Cyprus',\r\n  'CZ' : 'Czech Republic',\r\n  'DK' : 'Denmark',\r\n  'DJ' : 'Djibouti',\r\n  'DM' : 'Dominica',\r\n  'DO' : 'Dominican Republic',\r\n  'EC' : 'Ecuador',\r\n  'EG' : 'Egypt',\r\n  'SV' : 'El Salvador',\r\n  'GQ' : 'Equatorial Guinea',\r\n  'ER' : 'Eritrea',\r\n  'EE' : 'Estonia',\r\n  'ET' : 'Ethiopia',\r\n  'FK' : 'Falkland Islands (Malvinas)',\r\n  'FO' : 'Faroe Islands',\r\n  'FJ' : 'Fiji',\r\n  'FI' : 'Finland',\r\n  'FR' : 'France',\r\n  'GF' : 'French Guiana',\r\n  'PF' : 'French Polynesia',\r\n  'TF' : 'French Southern Territories',\r\n  'GA' : 'Gabon',\r\n  'GM' : 'Gambia',\r\n  'GE' : 'Georgia',\r\n  'DE' : 'Germany',\r\n  'GH' : 'Ghana',\r\n  'GI' : 'Gibraltar',\r\n  'GR' : 'Greece',\r\n  'GL' : 'Greenland',\r\n  'GD' : 'Grenada',\r\n  'GP' : 'Guadeloupe',\r\n  'GU' : 'Guam',\r\n  'GT' : 'Guatemala',\r\n  'GG' : 'Guernsey',\r\n  'GN' : 'Guinea',\r\n  'GW' : 'Guinea-Bissau',\r\n  'GY' : 'Guyana',\r\n  'HT' : 'Haiti',\r\n  'HM' : 'Heard Island & Mcdonald Islands',\r\n  'VA' : 'Holy See (Vatican City State)',\r\n  'HN' : 'Honduras',\r\n  'HK' : 'Hong Kong',\r\n  'HU' : 'Hungary',\r\n  'IS' : 'Iceland',\r\n  'IN' : 'India',\r\n  'ID' : 'Indonesia',\r\n  'IR' : 'Iran, Islamic Republic Of',\r\n  'IQ' : 'Iraq',\r\n  'IE' : 'Ireland',\r\n  'IM' : 'Isle Of Man',\r\n  'IL' : 'Israel',\r\n  'IT' : 'Italy',\r\n  'JM' : 'Jamaica',\r\n  'JP' : 'Japan',\r\n  'JE' : 'Jersey',\r\n  'JO' : 'Jordan',\r\n  'KZ' : 'Kazakhstan',\r\n  'KE' : 'Kenya',\r\n  'KI' : 'Kiribati',\r\n  'KR' : 'Korea',\r\n  'KP' : 'Korea, Democratic People\\'s Republic Of',\r\n  'KW' : 'Kuwait',\r\n  'KG' : 'Kyrgyzstan',\r\n  'LA' : 'Lao People\\'s Democratic Republic',\r\n  'LV' : 'Latvia',\r\n  'LB' : 'Lebanon',\r\n  'LS' : 'Lesotho',\r\n  'LR' : 'Liberia',\r\n  'LY' : 'Libyan Arab Jamahiriya',\r\n  'LI' : 'Liechtenstein',\r\n  'LT' : 'Lithuania',\r\n  'LU' : 'Luxembourg',\r\n  'MO' : 'Macao',\r\n  'MK' : 'Macedonia',\r\n  'MG' : 'Madagascar',\r\n  'MW' : 'Malawi',\r\n  'MY' : 'Malaysia',\r\n  'MV' : 'Maldives',\r\n  'ML' : 'Mali',\r\n  'MT' : 'Malta',\r\n  'MH' : 'Marshall Islands',\r\n  'MQ' : 'Martinique',\r\n  'MR' : 'Mauritania',\r\n  'MU' : 'Mauritius',\r\n  'YT' : 'Mayotte',\r\n  'MX' : 'Mexico',\r\n  'FM' : 'Micronesia, Federated States Of',\r\n  'MD' : 'Moldova',\r\n  'MC' : 'Monaco',\r\n  'MN' : 'Mongolia',\r\n  'ME' : 'Montenegro',\r\n  'MS' : 'Montserrat',\r\n  'MA' : 'Morocco',\r\n  'MZ' : 'Mozambique',\r\n  'MM' : 'Myanmar',\r\n  'NA' : 'Namibia',\r\n  'NR' : 'Nauru',\r\n  'NP' : 'Nepal',\r\n  'NL' : 'Netherlands',\r\n  'AN' : 'Netherlands Antilles',\r\n  'NC' : 'New Caledonia',\r\n  'NZ' : 'New Zealand',\r\n  'NI' : 'Nicaragua',\r\n  'NE' : 'Niger',\r\n  'NG' : 'Nigeria',\r\n  'NU' : 'Niue',\r\n  'NF' : 'Norfolk Island',\r\n  'MP' : 'Northern Mariana Islands',\r\n  'NO' : 'Norway',\r\n  'OM' : 'Oman',\r\n  'PK' : 'Pakistan',\r\n  'PW' : 'Palau',\r\n  'PS' : 'Palestinian Territory, Occupied',\r\n  'PA' : 'Panama',\r\n  'PG' : 'Papua New Guinea',\r\n  'PY' : 'Paraguay',\r\n  'PE' : 'Peru',\r\n  'PH' : 'Philippines',\r\n  'PN' : 'Pitcairn',\r\n  'PL' : 'Poland',\r\n  'PT' : 'Portugal',\r\n  'PR' : 'Puerto Rico',\r\n  'QA' : 'Qatar',\r\n  'RE' : 'Reunion',\r\n  'RO' : 'Romania',\r\n  'RU' : 'Russian Federation',\r\n  'RW' : 'Rwanda',\r\n  'BL' : 'Saint Barthelemy',\r\n  'SH' : 'Saint Helena',\r\n  'KN' : 'Saint Kitts And Nevis',\r\n  'LC' : 'Saint Lucia',\r\n  'MF' : 'Saint Martin',\r\n  'PM' : 'Saint Pierre And Miquelon',\r\n  'VC' : 'Saint Vincent And Grenadines',\r\n  'WS' : 'Samoa',\r\n  'SM' : 'San Marino',\r\n  'ST' : 'Sao Tome And Principe',\r\n  'SA' : 'Saudi Arabia',\r\n  'SN' : 'Senegal',\r\n  'RS' : 'Serbia',\r\n  'SC' : 'Seychelles',\r\n  'SL' : 'Sierra Leone',\r\n  'SG' : 'Singapore',\r\n  'SK' : 'Slovakia',\r\n  'SI' : 'Slovenia',\r\n  'SB' : 'Solomon Islands',\r\n  'SO' : 'Somalia',\r\n  'ZA' : 'South Africa',\r\n  'GS' : 'South Georgia And Sandwich Isl.',\r\n  'ES' : 'Spain',\r\n  'LK' : 'Sri Lanka',\r\n  'SD' : 'Sudan',\r\n  'SS' : 'South Sudan',\r\n  'SR' : 'Suriname',\r\n  'SJ' : 'Svalbard And Jan Mayen',\r\n  'SZ' : 'Swaziland',\r\n  'SE' : 'Sweden',\r\n  'SX' : 'Sint Maarten',\r\n  'CH' : 'Switzerland',\r\n  'SY' : 'Syrian Arab Republic',\r\n  'TW' : 'Taiwan',\r\n  'TJ' : 'Tajikistan',\r\n  'TZ' : 'Tanzania',\r\n  'TH' : 'Thailand',\r\n  'TL' : 'Timor-Leste',\r\n  'TG' : 'Togo',\r\n  'TK' : 'Tokelau',\r\n  'TO' : 'Tonga',\r\n  'TT' : 'Trinidad And Tobago',\r\n  'TN' : 'Tunisia',\r\n  'TR' : 'Turkey',\r\n  'TM' : 'Turkmenistan',\r\n  'TC' : 'Turks And Caicos Islands',\r\n  'TV' : 'Tuvalu',\r\n  'UG' : 'Uganda',\r\n  'UA' : 'Ukraine',\r\n  'AE' : 'United Arab Emirates',\r\n  'GB' : 'United Kingdom',\r\n  'US' : 'United States',\r\n  'UM' : 'United States Outlying Islands',\r\n  'UY' : 'Uruguay',\r\n  'UZ' : 'Uzbekistan',\r\n  'VU' : 'Vanuatu',\r\n  'VE' : 'Venezuela',\r\n  'VN' : 'Viet Nam',\r\n  'VG' : 'Virgin Islands, British',\r\n  'VI' : 'Virgin Islands, U.S.',\r\n  'WF' : 'Wallis And Futuna',\r\n  'EH' : 'Western Sahara',\r\n  'XK' : 'Kosovo',\r\n  'YE' : 'Yemen',\r\n  'ZM' : 'Zambia',\r\n  'ZW' : 'Zimbabwe'\r\n};\r\n\r\nclass SelectCountries extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={}\r\n    this.selectEl = React.createRef();\r\n    this.showSelected = React.createRef();\r\n    this.handleShipsToCountries = this.handleShipsToCountries.bind(this);\r\n    this.handleSelectEvt = this.handleSelectEvt.bind(this);\r\n    this.handleClearAllSelected = this.handleClearAllSelected.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    let selectEl = this.selectEl.current;\r\n    let cnArr = this.props.shipsToCountries;\r\n    this.handleShipsToCountries(selectEl,cnArr);\r\n    this.handleSelectEvt(selectEl);\r\n  }\r\n\r\n  handleShipsToCountries(select,arr){\r\n    let c = arr.map((i) => {\r\n      if(countryName.hasOwnProperty(i)){\r\n        let el=document.createElement('option');\r\n        el.style.padding='5px 0';\r\n        el.setAttribute('value',i);\r\n        el.textContent=countryName[i];\r\n        select.insertAdjacentElement('afterbegin',el);\r\n        return countryName[i];\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSelectEvt(el){\r\n    const self=this;\r\n    const sp = this.showSelected.current;\r\n    el.addEventListener('change',function(evt){\r\n      let selectedOpts = [];\r\n      let selectedArr = evt.target.selectedOptions;\r\n      sp.innerHTML = '';\r\n      for(let n=0;n<selectedArr.length;n++){\r\n        if(!selectedOpts.includes(selectedArr[n].value)){\r\n          selectedOpts.push(selectedArr[n].value);\r\n          let selectedTxt = document.createElement('span');\r\n          selectedTxt.textContent = selectedArr[n].textContent+', ';\r\n          sp.appendChild(selectedTxt);\r\n        }\r\n      };\r\n      self.handleClearAllSelected(sp);\r\n      self.props.handleSelectedTargets(selectedOpts);\r\n    })\r\n  }\r\n\r\n  handleClearAllSelected(el){\r\n    let ch = el.querySelectorAll('span');\r\n    console.log('children inside show selected spans',ch);\r\n    if(ch.length>0){\r\n      let del=document.createElement('div');\r\n      del.textContent='Clear all selected locations';\r\n      el.appendChild()\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card.Section>\r\n        <div style={{marginBottom:'1em',fontSize:'1.1em'}}>Target locations:</div>\r\n        <div>You have selected: <span ref={this.showSelected} style={{fontWeight:'700'}}></span></div>\r\n        <select name=\"targetCountries\" id=\"targetCountries\" multiple={true} ref={this.selectEl} style={{height:'100px',width:'50%',paddingLeft:'.6em'}}>\r\n        </select>\r\n        <div style={{marginTop:'5px'}}>Please hold <span style={{backgroundColor:'#ddd',borderRadius:'5px',}}>Ctrl</span> to select multiple locations. Leave it blank if you want to target ALL countires.</div>\r\n      </Card.Section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectCountries;"]},"metadata":{},"sourceType":"module"}