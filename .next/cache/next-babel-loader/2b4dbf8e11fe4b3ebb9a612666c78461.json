{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Form, FormLayout } from '@shopify/polaris';\n\nclass CustomCodePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customCode: ''\n    };\n    this.handleCustomCode = this.handleCustomCode.bind(this);\n    this.parseCssString = this.parseCssString.bind(this);\n  }\n\n  handleCustomCode(val) {\n    const self = this;\n    let scriptStart = val.indexOf('<script>'),\n        scriptEnd = val.indexOf('</script>'),\n        styleStart = val.indexOf('<style>'),\n        styleEnd = val.indexOf('</style>');\n    let scriptTxt, styleTxt;\n\n    if (scriptStart !== -1 && scriptEnd !== -1) {\n      scriptTxt = val.slice(scriptStart + 8, scriptEnd).trim();\n    }\n\n    if (styleStart !== -1 && styleEnd !== -1) {\n      styleTxt = val.slice(styleStart + 7, styleEnd).trim();\n    }\n\n    ;\n\n    if (this.state.timer) {\n      clearTimeout(this.state.timer);\n    }\n\n    ;\n    this.setState(() => {\n      let timerN = setTimeout(() => {\n        console.log('codes are sent');\n        self.props.handleCustomCode(scriptTxt, styleTxt);\n      }, 5000);\n      return {\n        timer: timerN\n      };\n    });\n  }\n\n  parseCssString(code) {\n    let style = code,\n        selectors = [];\n    if (!style) return;\n    let styleArr = style.split('}');\n    let sl_regExp = /(.+)\\s*{/;\n    styleArr.map(i => {\n      if (i.trim() !== '') {\n        let re = i.match(sl_regExp);\n\n        if (re) {\n          let selector = re[1],\n              selectorObj = {};\n          let propStr = i.slice(selector.length + 1);\n          propStr = propStr.split(';');\n\n          if (propStr.length) {\n            propStr = propStr.map(i => {\n              let prop_name,\n                  prop_val,\n                  reg = /.+/; //handle extra {\n\n              let a = i.indexOf('{');\n              a !== -1 ? i = i.slice(a + 1) : i = i; //handle carriage return\n\n              if (!i.match(reg)) return;\n              i = i.match(reg)[0]; //handle colons inside property value;\n\n              let notUrl = /:[^\\/]/;\n              let re_notUrl = i.match(notUrl);\n              if (!re_notUrl) return;\n              prop_name = i.substring(0, re_notUrl.index);\n              prop_val = i.substring(re_notUrl.index + 1);\n              selectorObj[prop_name] = prop_val;\n            });\n            selectors.push({\n              [selector]: selectorObj\n            });\n          }\n        }\n      }\n    });\n    return selectors;\n  }\n\n  render() {\n    return __jsx(Card, null, __jsx(Form, null, __jsx(FormLayout, null, __jsx(\"div\", {\n      style: {\n        fontSize: '18px',\n        padding: '1.5em 0 0 1em'\n      }\n    }, \"Custom Codes\"), __jsx(Card, {\n      sectioned: true\n    }), __jsx(\"textarea\", {\n      rows: \"10\",\n      cols: \"80\",\n      placeholder: \"Please put your custom codes here...\",\n      style: {\n        marginLeft: '1em',\n        border: '1px solid #bbb',\n        borderRadius: '5px',\n        width: 'calc(100% - 2em)',\n        marginBottom: '2em'\n      },\n      onChange: evt => {\n        evt.persist();\n        this.setState({\n          timer: null\n        });\n        this.handleCustomCode(evt.nativeEvent.target.value);\n      }\n    }))));\n  }\n\n}\n\nexport default CustomCodePage;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\customCode.js"],"names":["Card","Form","FormLayout","CustomCodePage","React","Component","constructor","props","state","customCode","handleCustomCode","bind","parseCssString","val","self","scriptStart","indexOf","scriptEnd","styleStart","styleEnd","scriptTxt","styleTxt","slice","trim","timer","clearTimeout","setState","timerN","setTimeout","console","log","code","style","selectors","styleArr","split","sl_regExp","map","i","re","match","selector","selectorObj","propStr","length","prop_name","prop_val","reg","a","notUrl","re_notUrl","substring","index","push","render","fontSize","padding","marginLeft","border","borderRadius","width","marginBottom","evt","persist","nativeEvent","target","value"],"mappings":"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","sourcesContent":["import { Card, Form, FormLayout } from '@shopify/polaris'\r\n\r\nclass CustomCodePage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      customCode:''\r\n    }\r\n    this.handleCustomCode = this.handleCustomCode.bind(this);\r\n    this.parseCssString = this.parseCssString.bind(this);\r\n  }\r\n\r\n  handleCustomCode(val){\r\n    const self = this;\r\n    let scriptStart = val.indexOf('<script>'), scriptEnd = val.indexOf('</script>'), styleStart = val.indexOf('<style>'), styleEnd = val.indexOf('</style>');\r\n    let scriptTxt, styleTxt;\r\n    if(scriptStart !== -1 && scriptEnd !== -1){\r\n      scriptTxt = val.slice(scriptStart+8,scriptEnd).trim();\r\n    }\r\n    if(styleStart !== -1 && styleEnd !== -1){\r\n      styleTxt = val.slice(styleStart+7,styleEnd).trim();\r\n    };\r\n    if(this.state.timer){\r\n      clearTimeout(this.state.timer);\r\n    };\r\n    this.setState(()=>{\r\n      let timerN = setTimeout(() => {\r\n        console.log('codes are sent');\r\n        self.props.handleCustomCode(scriptTxt,styleTxt);\r\n      }, 5000);\r\n      return {timer:timerN}\r\n    });\r\n    \r\n  }\r\n\r\n  parseCssString(code){\r\n    let style = code,selectors=[];\r\n    if(!style) return;\r\n    let styleArr = style.split('}');\r\n    let sl_regExp = /(.+)\\s*{/;\r\n    styleArr.map( i => {\r\n      if(i.trim()!==''){\r\n        let re = i.match(sl_regExp);\r\n        if(re){\r\n          let selector = re[1],selectorObj={};\r\n          let propStr =  i.slice(selector.length+1);\r\n          propStr = propStr.split(';');\r\n          if(propStr.length){\r\n            propStr = propStr.map( i => {\r\n              let prop_name,prop_val,reg=/.+/;\r\n              //handle extra {\r\n              let a = i.indexOf('{');\r\n              a !== -1 ? \r\n              i=i.slice(a+1)\r\n              :\r\n              i=i;\r\n              //handle carriage return\r\n              if(!i.match(reg)) return;\r\n              i = i.match(reg)[0];              \r\n              //handle colons inside property value;\r\n              let notUrl = /:[^\\/]/;\r\n              let re_notUrl = i.match(notUrl);\r\n              if(!re_notUrl) return;\r\n              prop_name = i.substring(0,re_notUrl.index);\r\n              prop_val = i.substring(re_notUrl.index+1);\r\n              selectorObj[prop_name] = prop_val;\r\n            });\r\n            selectors.push({[selector]:selectorObj})\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return selectors;\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <div style={{fontSize:'18px',padding:'1.5em 0 0 1em'}}>Custom Codes</div>\r\n            <Card sectioned></Card>\r\n            <textarea rows=\"10\" cols=\"80\" placeholder=\"Please put your custom codes here...\" \r\n              style={{marginLeft:'1em',border:'1px solid #bbb',borderRadius:'5px',width:'calc(100% - 2em)',marginBottom:'2em'}} \r\n              onChange={(evt) => {\r\n                evt.persist();\r\n                this.setState({timer:null})\r\n                this.handleCustomCode(evt.nativeEvent.target.value)\r\n              }}\r\n            />\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomCodePage;"]},"metadata":{},"sourceType":"module"}