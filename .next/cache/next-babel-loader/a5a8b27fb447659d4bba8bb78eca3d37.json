{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar PreviewBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PreviewBar, _React$Component);\n\n  function PreviewBar(props) {\n    var _this;\n\n    _classCallCheck(this, PreviewBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PreviewBar).call(this, props));\n    _this.state = {};\n    _this.handleAddedHtml = _this.handleAddedHtml.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PreviewBar, [{\n    key: \"handleAddedHtml\",\n    value: function handleAddedHtml(userInp) {\n      // console.log(userInp);\n      // if 'link-container' class exists, have a fixed height, hide overflows and alternate the inner content;\n      var tagExp = /<\\/(\\w+)>/g;\n      var tagNProps = /<(\\w+[-'\"=\\s(\\w)\\:]*)>/g;\n      var re, tagWhole;\n      var tagArr = [],\n          tagWhArr = [];\n      var classes = userInp.match(/class=\"([-\\w\\s]+)\"/);\n      var containerLinkStyle = {};\n\n      while (re = tagExp.exec(userInp)) {\n        tagArr.push(re[1]);\n        if (!re) break;\n      }\n\n      while (tagWhole = tagNProps.exec(userInp)) {\n        tagWhArr.push(tagWhole[1]);\n        if (!tagWhole) break;\n      }\n\n      console.log(tagWhArr); // to parse tagWhArr, make it an array of objects containing tag, prop and children\n\n      tagWhArr.map(function (item, idx) {\n        var result,\n            propArr = [],\n            props,\n            classExp = /([-\\w]+)=\"(.*)\"/g; // console.log(classExp.exec(item));\n        // [1] is attribute name, [2] is attribute value;\n\n        while (props = classExp.exec(item)) {\n          propArr.push(props[1]);\n        }\n      });\n\n      if (classes) {\n        classes = classes[1].split(' ');\n\n        if (classes.includes('container-link')) {\n          containerLinkStyle = {\n            height: '22px',\n            overflow: 'hidden'\n          };\n        }\n      }\n\n      if (userInp) {\n        var prop = {}; // if(tag==='a'){\n        //   prop['href']='https://wwww.baidu.com'\n        //   prop['style']={display:'block',color:'#fff'}\n        // }\n\n        for (var n = 0; n < tagArr.length; n++) {\n          switch (tagArr[n]) {\n            case 'a':\n              prop['href'] = '';\n              break;\n          }\n\n          return React.createElement(tagArr[n], prop, 'any text');\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$barConfig = this.props.barConfig,\n          bgColor = _this$props$barConfig.bgColor,\n          ftColor = _this$props$barConfig.ftColor;\n      return __jsx(\"div\", {\n        style: {\n          margin: '20px 0'\n        }\n      }, __jsx(\"div\", {\n        style: {\n          padding: '8px 0',\n          position: 'relative',\n          backgroundColor: bgColor,\n          color: ftColor\n        }\n      }, this.props.barConfig.goal ? this.props.barConfig.inpTxt + '$' + this.props.barConfig.goal : this.props.barConfig.inpTxt, this.props.barConfig.addedHtml ? this.handleAddedHtml(this.props.barConfig.addedHtml) : null, __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '8px',\n          right: '8px'\n        }\n      }, \"X\")));\n    }\n  }]);\n\n  return PreviewBar;\n}(React.Component);\n\nexport default PreviewBar;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\previewBar.js"],"names":["PreviewBar","props","state","handleAddedHtml","bind","userInp","tagExp","tagNProps","re","tagWhole","tagArr","tagWhArr","classes","match","containerLinkStyle","exec","push","console","log","map","item","idx","result","propArr","classExp","split","includes","height","overflow","prop","n","length","React","createElement","barConfig","bgColor","ftColor","margin","padding","position","backgroundColor","color","goal","inpTxt","addedHtml","top","right","Component"],"mappings":"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","sourcesContent":["\r\nclass PreviewBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {}\r\n    this.handleAddedHtml = this.handleAddedHtml.bind(this);\r\n  }\r\n\r\n  handleAddedHtml(userInp){\r\n    // console.log(userInp);\r\n    // if 'link-container' class exists, have a fixed height, hide overflows and alternate the inner content;\r\n    let tagExp = /<\\/(\\w+)>/g;\r\n    let tagNProps = /<(\\w+[-'\"=\\s(\\w)\\:]*)>/g;\r\n    let re, tagWhole ;\r\n    let tagArr = [],tagWhArr=[];\r\n    let classes = userInp.match(/class=\"([-\\w\\s]+)\"/);\r\n    let containerLinkStyle = {};\r\n    while(re= tagExp.exec(userInp)){\r\n      tagArr.push(re[1]);\r\n      if(!re) break;\r\n    }\r\n    while(tagWhole = tagNProps.exec(userInp)){\r\n      tagWhArr.push(tagWhole[1]);\r\n      if(!tagWhole) break;\r\n    }\r\n    console.log(tagWhArr);\r\n    // to parse tagWhArr, make it an array of objects containing tag, prop and children\r\n    tagWhArr.map((item,idx)=>{\r\n      let result,propArr=[], props,classExp=/([-\\w]+)=\"(.*)\"/g;\r\n      // console.log(classExp.exec(item));\r\n      // [1] is attribute name, [2] is attribute value;\r\n      while(props = classExp.exec(item)){\r\n        propArr.push(props[1]);\r\n        \r\n      }\r\n    })\r\n    if(classes){\r\n      classes = classes[1].split(' ');\r\n      if(classes.includes('container-link')){\r\n        containerLinkStyle = {height:'22px',overflow:'hidden'}\r\n      }\r\n    }\r\n    if(userInp) {\r\n      let prop={};\r\n      // if(tag==='a'){\r\n      //   prop['href']='https://wwww.baidu.com'\r\n      //   prop['style']={display:'block',color:'#fff'}\r\n      // }\r\n      for(let n=0;n<tagArr.length;n++){\r\n        switch(tagArr[n]){\r\n          case 'a':\r\n            prop['href']='';\r\n            break;\r\n        \r\n\r\n        }\r\n        return React.createElement(tagArr[n],prop,'any text')\r\n      }\r\n    } \r\n  }\r\n\r\n  render(){\r\n    const {bgColor, ftColor } = this.props.barConfig;\r\n    return (\r\n      <div style={{margin:'20px 0'}}>\r\n        <div style={{padding:'8px 0',position:'relative',backgroundColor:bgColor,color:ftColor}}>\r\n          { this.props.barConfig.goal?\r\n            this.props.barConfig.inpTxt + '$' + this.props.barConfig.goal\r\n            :\r\n            this.props.barConfig.inpTxt\r\n          }\r\n          {/* #question: how to turn user input into raw html */}\r\n          { this.props.barConfig.addedHtml?\r\n              this.handleAddedHtml(this.props.barConfig.addedHtml) \r\n              :\r\n              null\r\n          }\r\n          <div style={{position:'absolute',top:'8px',right:'8px'}}>X</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewBar;"]},"metadata":{},"sourceType":"module"}