{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, TextField, Stack, Form, FormLayout, Select, Checkbox, ChoiceList, Collapsible } from '@shopify/polaris';\nimport { useState, useCallback, useEffect } from 'react';\nimport SectionHead from '../snippets/sectionHead';\n\nfunction NameField(props) {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  useEffect(() => {\n    props.handleName(name);\n  }, [name]);\n  return __jsx(Card.Section, null, __jsx(TextField, {\n    label: \"Name: \",\n    value: name,\n    onChange: nw => setName(nw)\n  }));\n}\n\nfunction FreeShippingGoal(props) {\n  const {\n    0: goal,\n    1: setGoal\n  } = useState(30);\n\n  const _handleGoalChange = function (newGoal) {\n    setGoal(newGoal);\n    props.handleGoalChange(newGoal);\n  };\n\n  return __jsx(Card.Section, null, __jsx(TextField, {\n    label: \"Free Shipping Goal: \",\n    type: \"number\",\n    value: goal,\n    onChange: nw => _handleGoalChange(nw)\n  }));\n}\n\nfunction InitialMsg(props) {\n  const {\n    0: msg,\n    1: setMsg\n  } = useState('Free Shipping on All Orders Over ');\n  const {\n    0: added,\n    1: setAdded\n  } = useState('');\n  useEffect(() => {\n    props.handleMsgChange({\n      initialMsg1: msg,\n      initialMsg2: added\n    });\n  }, [msg, added]);\n  return __jsx(Card.Section, null, __jsx(Stack, {\n    alignment: \"center\",\n    distribution: \"fill\"\n  }, __jsx(TextField, {\n    label: \"Initial message: \",\n    type: \"text\",\n    value: msg,\n    onChange: nw => setMsg(nw),\n    helpText: \"Display when cart is empty\"\n  }), __jsx(\"div\", {\n    style: {\n      fontSize: '18px'\n    }\n  }, props.currency, \" \", props.goal), __jsx(TextField, {\n    label: \" \",\n    type: \"text\",\n    value: added,\n    onChange: nw => setAdded(nw)\n  })));\n}\n\nfunction ProgressMsg(props) {\n  const {\n    0: msg,\n    1: setMsg\n  } = useState('Only ');\n  const {\n    0: added,\n    1: setAdded\n  } = useState(' away from free shipping');\n  const gl = props.goal;\n  useEffect(() => {\n    props.handleMsgChange({\n      prgMsg1: msg,\n      prgMsg2: added\n    });\n  }, [msg, added]);\n  return __jsx(Card.Section, {\n    condensed: true\n  }, __jsx(Stack, {\n    alignment: \"center\",\n    distribution: \"fill\"\n  }, __jsx(TextField, {\n    label: \"Progress message: \",\n    type: \"text\",\n    value: msg,\n    onChange: nw => setMsg(nw),\n    helpText: \"Displays when cart value is less than the goal\"\n  }), __jsx(\"div\", {\n    style: {\n      fontSize: '18px'\n    }\n  }, props.currency, \" \", gl - 1), __jsx(TextField, {\n    label: \" \",\n    type: \"text\",\n    value: added,\n    onChange: nw => setAdded(nw)\n  })));\n}\n\nfunction GoalAchieved(props) {\n  const {\n    0: msg,\n    1: setMsg\n  } = useState('Free Shipping Worldwide');\n  useEffect(() => {\n    props.handleMsgChange({\n      achievedMsg: msg\n    });\n  }, [msg]);\n  return __jsx(Card.Section, null, __jsx(TextField, {\n    label: \"Goal Achieved Message: \",\n    type: \"text\",\n    value: msg,\n    onChange: nw => setMsg(nw),\n    helpText: \"Displays when cart value is greater than goal\"\n  }));\n}\n\nfunction AddLinkToBar(props) {\n  const {\n    0: havLink,\n    1: setHavLink\n  } = useState(false);\n  const {\n    0: url,\n    1: setUrl\n  } = useState('');\n  const {\n    0: checkbox,\n    1: setChecked\n  } = useState(false);\n  const opts = [{\n    label: 'Off',\n    value: false\n  }, {\n    label: 'On',\n    value: true\n  }];\n\n  const handleSwitch = val => {\n    val = val === 'true' ? true : false;\n    setHavLink(val);\n\n    if (!val) {\n      props.handleBarLinkChange('');\n    }\n  };\n\n  const handleCheckbox = val => {\n    setChecked(val);\n    props.handleBarLinkChange(val);\n  };\n\n  return __jsx(Card.Section, null, __jsx(Select, {\n    label: \"Add Link to the Bar: \",\n    options: opts,\n    onChange: handleSwitch,\n    value: havLink\n  }), havLink ? // <FormLayout.Group>\n  __jsx(\"div\", null, __jsx(TextField, {\n    label: \"Link URL: \",\n    type: \"url\",\n    value: url,\n    onChange: nw => {\n      setUrl(nw);\n      props.handleBarLinkChange(nw);\n    },\n    helpText: \"This address will be visited after clicking the bar\"\n  }), __jsx(Checkbox, {\n    label: \"Open the link in a NEW tab when clicked\",\n    checked: checkbox,\n    onChange: nw => handleCheckbox(nw)\n  })) // </FormLayout.Group>\n  : null);\n}\n\nfunction SetPosition(props) {\n  const {\n    0: isSelected,\n    1: setSelected\n  } = useState(['push-down']);\n  const choices = [{\n    label: 'Top bar pushes down the rest of the page',\n    value: 'push-down'\n  }, //body padding-top equals to the height of the bar, position: absolute\n  {\n    label: 'Top bar pushes down the rest of the page (always visible while scrolling)',\n    value: 'push-down-visible'\n  }, // body padding-top, and position: -webkit-sticky\n  {\n    label: 'Top bar overlaps top of the page',\n    value: 'overlap'\n  }, //no padding-top for body\n  {\n    label: 'Top bar overlaps top of the page (always visible while scrolling)',\n    value: 'overlap-visible'\n  }, //no padding-top for body, and position:sticky\n  {\n    label: 'Manual placement',\n    value: 'manual',\n    renderChildren: isSelected => {\n      return isSelected && __jsx(\"div\", null, \"Place \", __jsx(\"span\", {\n        style: {\n          fontFamily: 'monospace',\n          fontWeight: 800,\n          backgroundColor: '#ddd',\n          borderRadius: '5px',\n          padding: '2px 4px'\n        }\n      }, \"<div id=\\\"fsb_placeholder\\\"></div>\"), \" where you prefer in your theme file.\");\n    }\n  }];\n  useEffect(() => {\n    props.handleBarPosition(isSelected);\n  }, [isSelected]);\n  return __jsx(Card.Section, null, __jsx(ChoiceList, {\n    title: 'Select a Display Position: ',\n    choices: choices,\n    selected: isSelected,\n    onChange: nw => setSelected(nw)\n  }));\n}\n\nclass ContentConfigPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frShGl: 30,\n      msgText: {\n        initialMsg1: 'Free Shipping on All Orders Over ',\n        initialMsg2: '',\n        prgMsg1: 'Only ',\n        prgMsg2: ' away from free shipping',\n        achievedMsg: 'Free Shipping Worldwide'\n      }\n    };\n    this.handleGoalChange = this.handleGoalChange.bind(this);\n    this.handleMsgChange = this.handleMsgChange.bind(this);\n    this.handleBarLinkChange = this.handleBarLinkChange.bind(this);\n  }\n\n  handleGoalChange(newGoal) {\n    if (_parseFloat(newGoal) >= 0) {\n      this.setState(state => {\n        return {\n          frShGl: _parseFloat(newGoal)\n        };\n      }, function () {\n        this.props.handleContentConfig_goal(this.state.frShGl);\n      });\n    }\n  }\n\n  handleMsgChange(msg) {\n    this.setState(state => {\n      msg = _objectSpread({}, state.msgText, msg);\n      return {\n        msgText: msg\n      };\n    }, function () {\n      this.props.handleContentConfig_msg(this.state.msgText);\n    });\n  }\n\n  handleBarLinkChange(val) {\n    let barLinkConfig = {};\n\n    if (typeof val === 'boolean') {\n      barLinkConfig.openNew = val;\n    } else if (typeof val === 'string') {\n      barLinkConfig.url = val;\n    }\n\n    this.props.handleContentConfig_link(barLinkConfig);\n  }\n\n  render() {\n    const {\n      frShGl\n    } = this.state;\n    return __jsx(Card, {\n      Sectioned: true\n    }, __jsx(FormLayout, null, __jsx(SectionHead, {\n      handleToggle: active => this.setState({\n        sectionActive: active\n      }),\n      headerTxt: \"Content configuration\",\n      sectionActive: this.state.sectionActive\n    }), __jsx(Collapsible, {\n      open: this.state.sectionActive\n    }, __jsx(NameField, {\n      handleName: name => this.props.handleName(name)\n    }), __jsx(FreeShippingGoal, {\n      handleGoalChange: this.handleGoalChange\n    }), frShGl ? __jsx(FormLayout, null, __jsx(InitialMsg, {\n      goal: frShGl,\n      currency: \"$\",\n      handleMsgChange: this.handleMsgChange\n    }), __jsx(ProgressMsg, {\n      goal: frShGl,\n      currency: \"$\",\n      handleMsgChange: this.handleMsgChange\n    })) : null, __jsx(GoalAchieved, {\n      handleMsgChange: this.handleMsgChange\n    }), __jsx(AddLinkToBar, {\n      handleBarLinkChange: this.handleBarLinkChange\n    }), __jsx(SetPosition, {\n      handleBarPosition: val => this.props.handleBarPosition(val)\n    }))));\n  }\n\n}\n\nexport default ContentConfigPage;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\contentConfig.js"],"names":["Card","TextField","Stack","Form","FormLayout","Select","Checkbox","ChoiceList","Collapsible","useState","useCallback","useEffect","SectionHead","NameField","props","name","setName","handleName","nw","FreeShippingGoal","goal","setGoal","_handleGoalChange","newGoal","handleGoalChange","InitialMsg","msg","setMsg","added","setAdded","handleMsgChange","initialMsg1","initialMsg2","fontSize","currency","ProgressMsg","gl","prgMsg1","prgMsg2","GoalAchieved","achievedMsg","AddLinkToBar","havLink","setHavLink","url","setUrl","checkbox","setChecked","opts","label","value","handleSwitch","val","handleBarLinkChange","handleCheckbox","SetPosition","isSelected","setSelected","choices","renderChildren","fontFamily","fontWeight","backgroundColor","borderRadius","padding","handleBarPosition","ContentConfigPage","React","Component","constructor","state","frShGl","msgText","bind","setState","handleContentConfig_goal","handleContentConfig_msg","barLinkConfig","openNew","handleContentConfig_link","render","active","sectionActive"],"mappings":"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","sourcesContent":["import { Card, TextField, Stack, Form, FormLayout, Select, Checkbox, ChoiceList, Collapsible } from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport SectionHead from '../snippets/sectionHead';\r\n\r\nfunction NameField(props){\r\n  const [name,setName] = useState('');\r\n\r\n  useEffect(()=>{\r\n    props.handleName(name);\r\n  },[name]);\r\n\r\n  return ( \r\n    <Card.Section>\r\n      <TextField label=\"Name: \" value={name} onChange={ (nw) => setName(nw)} />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction FreeShippingGoal(props){\r\n  const [goal,setGoal] = useState(30);\r\n  const _handleGoalChange = function(newGoal){\r\n    setGoal(newGoal);\r\n    props.handleGoalChange(newGoal)\r\n  }\r\n  return (\r\n    <Card.Section>\r\n      <TextField \r\n        label=\"Free Shipping Goal: \" \r\n        type=\"number\"\r\n        value={goal} \r\n        onChange={(nw) => _handleGoalChange(nw)} \r\n      />\r\n    </Card.Section>\r\n  );\r\n}\r\n\r\nfunction InitialMsg(props){\r\n  const [msg,setMsg] = useState('Free Shipping on All Orders Over ');\r\n  const [added,setAdded] = useState('');\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({initialMsg1:msg,initialMsg2:added});\r\n  },[msg,added])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <Stack alignment=\"center\" distribution=\"fill\">\r\n        <TextField\r\n          label=\"Initial message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Display when cart is empty\"\r\n        />\r\n        <div style={{fontSize:'18px'}}>{props.currency} {props.goal}</div>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction ProgressMsg(props){\r\n  const [msg,setMsg] = useState('Only ');\r\n  const [added,setAdded] = useState(' away from free shipping');\r\n  const gl = props.goal;\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({prgMsg1:msg,prgMsg2:added})\r\n  },[msg,added])\r\n\r\n  return (\r\n    <Card.Section condensed>\r\n      <Stack alignment=\"center\" distribution=\"fill\">\r\n        <TextField\r\n          label=\"Progress message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Displays when cart value is less than the goal\"\r\n        />\r\n        <div style={{fontSize:'18px'}}>{props.currency} {gl-1}</div>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction GoalAchieved(props){\r\n  const [msg,setMsg] = useState('Free Shipping Worldwide');\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({achievedMsg:msg})\r\n  },[msg])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <TextField\r\n        label=\"Goal Achieved Message: \"\r\n        type=\"text\"\r\n        value={msg}\r\n        onChange={(nw) => setMsg(nw)}\r\n        helpText=\"Displays when cart value is greater than goal\"\r\n      />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction AddLinkToBar(props){\r\n  const [havLink,setHavLink] = useState(false);\r\n  const [url,setUrl] = useState('');\r\n  const [checkbox,setChecked] = useState(false);\r\n\r\n  const opts=[\r\n    {label:'Off',value:false},\r\n    {label:'On',value:true}\r\n  ]\r\n\r\n  const handleSwitch = (val) => {\r\n    val = val === 'true'? true : false;\r\n    setHavLink(val);\r\n    if(!val){\r\n      props.handleBarLinkChange('');\r\n    }\r\n  }\r\n\r\n  const handleCheckbox = (val) => {\r\n    setChecked(val);\r\n    props.handleBarLinkChange(val);\r\n  }\r\n\r\n  return(\r\n    <Card.Section>\r\n      <Select \r\n        label=\"Add Link to the Bar: \"\r\n        options={opts}\r\n        onChange={handleSwitch}\r\n        value={havLink}\r\n      />\r\n      {\r\n        havLink?\r\n        // <FormLayout.Group>\r\n        <div>\r\n          <TextField\r\n            label=\"Link URL: \"\r\n            type=\"url\"\r\n            value={url}\r\n            onChange={(nw) => {setUrl(nw); props.handleBarLinkChange(nw);}}\r\n            helpText=\"This address will be visited after clicking the bar\"\r\n          />\r\n          <Checkbox \r\n            label=\"Open the link in a NEW tab when clicked\"\r\n            checked={checkbox}\r\n            onChange={(nw) => handleCheckbox(nw)}\r\n          />\r\n        </div>\r\n        // </FormLayout.Group>\r\n        :\r\n        null\r\n      }\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction SetPosition(props){\r\n  const [isSelected,setSelected] = useState(['push-down']);\r\n\r\n  const choices = [\r\n    {label:'Top bar pushes down the rest of the page',value:'push-down'}, //body padding-top equals to the height of the bar, position: absolute\r\n    {label:'Top bar pushes down the rest of the page (always visible while scrolling)', value:'push-down-visible'}, // body padding-top, and position: -webkit-sticky\r\n    {label:'Top bar overlaps top of the page',value:'overlap'}, //no padding-top for body\r\n    {label:'Top bar overlaps top of the page (always visible while scrolling)',value:'overlap-visible'}, //no padding-top for body, and position:sticky\r\n    {\r\n      label:'Manual placement',\r\n      value:'manual',\r\n      renderChildren:(isSelected)=>{\r\n        return (\r\n          isSelected && (\r\n            <div>Place <span style={{fontFamily:'monospace',fontWeight:800,backgroundColor:'#ddd',borderRadius:'5px',padding:'2px 4px'}}>&lt;div id=\"fsb_placeholder\"&gt;&lt;/div&gt;</span> where you prefer in your theme file.</div>\r\n          )\r\n        )\r\n      }}\r\n  ];\r\n\r\n  useEffect(()=>{\r\n    props.handleBarPosition(isSelected);\r\n  },[isSelected])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <ChoiceList \r\n        title={'Select a Display Position: '}\r\n        choices={choices}\r\n        selected={isSelected}\r\n        onChange={(nw) => setSelected(nw)}\r\n      />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nclass ContentConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      frShGl:30,\r\n      msgText:{\r\n        initialMsg1:'Free Shipping on All Orders Over ',\r\n        initialMsg2:'',\r\n        prgMsg1:'Only ',\r\n        prgMsg2:' away from free shipping',\r\n        achievedMsg:'Free Shipping Worldwide'\r\n      }\r\n    }\r\n    this.handleGoalChange = this.handleGoalChange.bind(this);\r\n    this.handleMsgChange = this.handleMsgChange.bind(this);\r\n    this.handleBarLinkChange = this.handleBarLinkChange.bind(this);\r\n  }\r\n\r\n  handleGoalChange(newGoal){\r\n    if(parseFloat(newGoal) >= 0){\r\n      this.setState((state) => {\r\n        return {frShGl:parseFloat(newGoal)}\r\n      },function(){\r\n        this.props.handleContentConfig_goal(this.state.frShGl);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleMsgChange(msg){\r\n    this.setState((state)=>{\r\n      msg = {...state.msgText,...msg};\r\n      return {msgText:msg}\r\n    },function(){\r\n      this.props.handleContentConfig_msg(this.state.msgText)\r\n    });\r\n  };\r\n\r\n  handleBarLinkChange(val){\r\n    let barLinkConfig = {};\r\n    if(typeof val === 'boolean'){\r\n      barLinkConfig.openNew = val;\r\n    }else if(typeof val === 'string'){\r\n      barLinkConfig.url = val;\r\n    }\r\n    this.props.handleContentConfig_link(barLinkConfig);\r\n  }\r\n\r\n  render(){\r\n    const {frShGl} = this.state;\r\n    return (\r\n      <Card Sectioned> \r\n          <FormLayout>\r\n            <SectionHead \r\n              handleToggle={(active) => this.setState({sectionActive:active})}\r\n              headerTxt='Content configuration'\r\n              sectionActive={this.state.sectionActive}\r\n            />\r\n            <Collapsible open={this.state.sectionActive} >\r\n              <NameField handleName={(name)=> this.props.handleName(name)}/>\r\n\r\n              <FreeShippingGoal handleGoalChange={this.handleGoalChange}/>\r\n\r\n              { frShGl? \r\n                <FormLayout>\r\n                  <InitialMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange}/>\r\n                  <ProgressMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange} />\r\n                </FormLayout>\r\n                :\r\n                null\r\n              }\r\n              \r\n              <GoalAchieved handleMsgChange={this.handleMsgChange} />\r\n\r\n              <AddLinkToBar handleBarLinkChange={this.handleBarLinkChange} />\r\n\r\n              <SetPosition handleBarPosition={(val)=>this.props.handleBarPosition(val)}/>\r\n            </Collapsible>\r\n          </FormLayout>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContentConfigPage;"]},"metadata":{},"sourceType":"module"}