{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Banner, Card } from '@shopify/polaris';\nconst GET_CLIENT_ID = gql`\n  query {\n    shop{\n      id\n      name\n      shipsToCountries\n    }\n  }\n`;\n\nclass BarList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shippingCountries: []\n    };\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleTargetCountries = this.handleTargetCountries.bind(this);\n  }\n\n  handleEdit(e, id) {\n    console.log(id);\n  }\n\n  handleTargetCountries(c) {\n    this.setState({\n      shippingCountries: c\n    }, function () {\n      this.props.handleTargetCountries(c);\n    });\n  }\n\n  render() {\n    return __jsx(Query, {\n      query: GET_CLIENT_ID\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading...\");\n      if (error) return __jsx(Banner, {\n        status: \"critical\"\n      }, error.message);\n      console.log(data);\n\n      if (!this.state.shippingCountries[0]) {\n        this.handleTargetCountries(data.shop.shipsToCountries);\n      } // #toUpdate: to fetch from database\n\n\n      const arrs = [{\n        'name': 'ijji',\n        'geo': 'china',\n        'achievements': 253,\n        'id': 2\n      }, {\n        'name': 'fe',\n        'geo': 'nz',\n        'achievements': 76,\n        'id': 3\n      }];\n      return __jsx(Card, null, __jsx(\"table\", {\n        style: {\n          width: '100%',\n          padding: '2%'\n        }\n      }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Geo target\"), __jsx(\"th\", null, \"Actions\"), __jsx(\"th\", null, \"Achievements\"))), __jsx(\"tbody\", null, arrs.map((item, idx) => {\n        return __jsx(\"tr\", {\n          style: {\n            textAlign: 'center',\n            lineHeight: 3\n          },\n          key: idx\n        }, __jsx(\"td\", null, item.name), __jsx(\"td\", null, item.geo), __jsx(\"td\", null, __jsx(\"button\", {\n          onClick: e => this.props.handleEditId(item.id),\n          style: {\n            borderColor: 'transparent',\n            background: '#000',\n            color: '#fff',\n            borderRadius: 5\n          }\n        }, \"Edit\")), __jsx(\"td\", null, item.achievements));\n      }))));\n    });\n  }\n\n}\n\nexport default BarList;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\barList.js"],"names":["gql","Query","Banner","Card","GET_CLIENT_ID","BarList","React","Component","constructor","props","state","shippingCountries","handleEdit","bind","handleTargetCountries","e","id","console","log","c","setState","render","data","loading","error","message","shop","shipsToCountries","arrs","width","padding","map","item","idx","textAlign","lineHeight","name","geo","handleEditId","borderColor","background","color","borderRadius","achievements"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Banner, Card } from '@shopify/polaris';\r\n\r\nconst GET_CLIENT_ID = gql`\r\n  query {\r\n    shop{\r\n      id\r\n      name\r\n      shipsToCountries\r\n    }\r\n  }\r\n`;\r\n\r\nclass BarList extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      shippingCountries:[]\r\n    };\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleTargetCountries = this.handleTargetCountries.bind(this);\r\n  }\r\n\r\n  handleEdit(e,id){\r\n    console.log(id)\r\n  }\r\n\r\n  handleTargetCountries(c){\r\n    this.setState({shippingCountries:c},function(){\r\n      this.props.handleTargetCountries(c);\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Query query={GET_CLIENT_ID}>\r\n        {({data, loading, error}) => {\r\n          if(loading) return <div>Loading...</div>;\r\n          if(error) return <Banner status=\"critical\">{error.message}</Banner>\r\n          console.log(data);\r\n          if(!this.state.shippingCountries[0]){\r\n            this.handleTargetCountries(data.shop.shipsToCountries);\r\n          }\r\n          // #toUpdate: to fetch from database\r\n          const arrs = [{'name':'ijji','geo':'china','achievements':253,'id':2},{'name':'fe','geo':'nz','achievements':76,'id':3}]\r\n          \r\n          return (\r\n            <Card>\r\n              <table style={{width:'100%',padding:'2%'}}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Geo target</th>\r\n                    <th>Actions</th>\r\n                    <th>Achievements</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    arrs.map((item, idx)=>{\r\n                      return (\r\n                        <tr style={{textAlign:'center',lineHeight:3}} key={idx}>\r\n                          <td>{item.name}</td>\r\n                          <td>{item.geo}</td>\r\n                          <td><button onClick={(e) => this.props.handleEditId(item.id)} style={{borderColor:'transparent',background:'#000',color:'#fff',borderRadius:5}}>Edit</button></td>\r\n                          <td>{item.achievements}</td>\r\n                        </tr>\r\n                      )\r\n                    })\r\n                  }\r\n                </tbody>\r\n              </table>\r\n            </Card>\r\n          )\r\n        }}\r\n      </Query>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BarList;"]},"metadata":{},"sourceType":"module"}