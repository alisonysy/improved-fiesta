{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Stack, TextField, Button, Form, FormLayout, ColorPicker, RangeSlider } from '@shopify/polaris';\nimport { useState, useCallback, useEffect } from 'react';\nimport ImageDropZone from '../snippets/imageDropZone';\nimport '../css/fonts.css';\n\nfunction ColorPickers(props) {\n  const {\n    0: color,\n    1: setColor\n  } = useState({\n    hue: 0,\n    brightness: 0,\n    saturation: 0\n  });\n  useEffect(() => {\n    props.handleColorChange(color);\n  }, [color]);\n  return __jsx(\"div\", {\n    style: {\n      height: '100px',\n      width: 'auto',\n      position: 'absolute',\n      top: '25px',\n      left: '0',\n      zIndex: '99'\n    }\n  }, __jsx(ColorPicker, {\n    onChange: setColor,\n    color: color\n  }));\n}\n\nfunction OpacitySlider(props) {\n  const {\n    0: rangeValue,\n    1: setRangeValue\n  } = useState(100);\n  const handleRangeSliderChange = useCallback(value => setRangeValue(value), []);\n  const suffixStyles = {\n    minWidth: '24px',\n    textAlign: 'right'\n  };\n  useEffect(() => {\n    props.handleBgOpacity(rangeValue);\n  }, [rangeValue]);\n  return __jsx(RangeSlider, {\n    output: true,\n    label: \"Background Opacity\",\n    min: 0,\n    max: 100,\n    value: rangeValue,\n    onChange: handleRangeSliderChange,\n    prefix: __jsx(\"p\", null, \"0\"),\n    suffix: __jsx(\"p\", {\n      style: suffixStyles\n    }, rangeValue)\n  });\n}\n\nfunction BackgroundSetting(props) {\n  const rgbToHex = rgb => {\n    if (rgb.includes('#')) return rgb;\n    let regExp = /\\(\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)\\)/;\n    let re = rgb.match(regExp);\n\n    if (re) {\n      let r = _parseInt(re[1]).toString(16),\n          g = _parseInt(re[2]).toString(16),\n          b = _parseInt(re[3]).toString(16);\n\n      if (r.length == 1) r = \"0\" + r;\n      if (g.length == 1) g = \"0\" + g;\n      if (b.length == 1) b = \"0\" + b;\n      return \"#\" + r + g + b;\n    }\n  };\n\n  const hslToRgb = (h, s, l) => {\n    // s, l must be fractions of 100;\n    let c = (1 - Math.abs(2 * l - 1)) * s,\n        x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n        m = l - c / 2,\n        r = 0,\n        g = 0,\n        b = 0;\n\n    if (0 <= h && h < 60) {\n      r = c;\n      g = x;\n      b = 0;\n    } else if (60 <= h && h < 120) {\n      r = x;\n      g = c;\n      b = 0;\n    } else if (120 <= h && h < 180) {\n      r = 0;\n      g = c;\n      b = x;\n    } else if (180 <= h && h < 240) {\n      r = 0;\n      g = x;\n      b = c;\n    } else if (240 <= h && h < 300) {\n      r = x;\n      g = 0;\n      b = c;\n    } else if (300 <= h && h < 360) {\n      r = c;\n      g = 0;\n      b = x;\n    }\n\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n  };\n\n  const {\n    0: showBgPicker,\n    1: setBgPicker\n  } = useState(false);\n  const {\n    0: showTxtPicker,\n    1: setTxtPicker\n  } = useState(false);\n  const {\n    0: showSpTxtPicker,\n    1: setSpTxtPicker\n  } = useState(false);\n  const {\n    0: bgColor,\n    1: setBgColor\n  } = useState('#000');\n  const {\n    0: bgOpacity,\n    1: setBgOpacity\n  } = useState(100);\n  const {\n    0: txtColor,\n    1: setTxtColor\n  } = useState('#b31219');\n  const {\n    0: specialColor,\n    1: setSpecialColor\n  } = useState('#fff');\n  let bgColorFrmProps = props.colorConfig.bgColor,\n      txtColorFrmProps = props.colorConfig.txtColor;\n  useEffect(() => {\n    props.handleStyleConfig({\n      bgColor: bgColor,\n      bgOpacity: bgOpacity,\n      txtColor: txtColor,\n      specialColor: specialColor\n    }, undefined);\n  }, [bgColor, bgOpacity, txtColor, specialColor]);\n  useEffect(() => {\n    setBgColor(rgbToHex(bgColorFrmProps));\n  }, [bgColorFrmProps]);\n  useEffect(() => {\n    setTxtColor(rgbToHex(txtColorFrmProps));\n  }, [txtColorFrmProps]);\n  return __jsx(Card.Section, null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '30%'\n    }\n  }, __jsx(\"h3\", null, \"Background color:\"), __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: '25px',\n      width: '25px',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#ddd',\n      display: 'inline-block',\n      backgroundColor: bgColor,\n      cursor: 'pointer'\n    },\n    onClick: () => setBgPicker(!showBgPicker)\n  }), showBgPicker ? __jsx(ColorPickers, {\n    handleColorChange: hslCl => {\n      let cRgb = hslToRgb(hslCl.hue, hslCl.saturation, hslCl.brightness);\n      setBgColor(cRgb);\n    }\n  }) : null), __jsx(TextField, {\n    value: bgColor,\n    onChange: nw => setBgColor(nw)\n  }))), __jsx(\"div\", {\n    style: {\n      width: '50%'\n    }\n  }, __jsx(OpacitySlider, {\n    handleBgOpacity: val => setBgOpacity(val)\n  }))), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-start'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '30%'\n    }\n  }, __jsx(\"h3\", null, \"Text color:\"), __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: '25px',\n      width: '25px',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#ddd',\n      display: 'inline-block',\n      backgroundColor: txtColor,\n      cursor: 'pointer'\n    },\n    onClick: () => setTxtPicker(!showTxtPicker)\n  }), showTxtPicker ? __jsx(ColorPickers, {\n    handleColorChange: hslCl => {\n      let cRgb = hslToRgb(hslCl.hue, hslCl.saturation, hslCl.brightness);\n      setTxtColor(cRgb);\n    }\n  }) : null), __jsx(TextField, {\n    value: txtColor,\n    onChange: nw => setTxtColor(nw)\n  }))), __jsx(\"div\", {\n    style: {\n      width: '30%'\n    }\n  }, __jsx(\"h3\", null, \"Special text color:\"), __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      height: '25px',\n      width: '25px',\n      borderWidth: '1px',\n      borderStyle: 'solid',\n      borderColor: '#ddd',\n      display: 'inline-block',\n      backgroundColor: specialColor,\n      cursor: 'pointer'\n    },\n    onClick: () => setSpTxtPicker(!showSpTxtPicker)\n  }), showSpTxtPicker ? __jsx(ColorPickers, {\n    handleColorChange: hslCl => {\n      let cRgb = hslToRgb(hslCl.hue, hslCl.saturation, hslCl.brightness);\n      setSpecialColor(cRgb);\n    }\n  }) : null), __jsx(TextField, {\n    value: rgbToHex(specialColor),\n    onChange: nw => setSpecialColor(nw)\n  })))));\n}\n\nfunction Fonts(props) {\n  const {\n    0: fontSize,\n    1: setFontSize\n  } = useState(18);\n  const {\n    0: padding,\n    1: setPadding\n  } = useState(10);\n  const {\n    0: fontFam,\n    1: setFontFam\n  } = useState('sans-serif');\n  const handleFontFam = useCallback(val => {\n    setFontFam(val);\n  }, [fontFam]);\n  const handleFontSize = useCallback(val => {\n    setFontSize(val);\n  }, [fontSize]);\n  const handlePadding = useCallback(val => {\n    setPadding(val);\n  }, [padding]);\n  useEffect(() => {\n    props.handleStyleConfig(undefined, {\n      fontFamily: fontFam,\n      fontSize: fontSize,\n      barPadding: padding\n    });\n  }, [fontFam, fontSize, padding]);\n  return __jsx(Card.Section, null, __jsx(\"div\", null, \"Font family:\"), __jsx(Button, {\n    onClick: () => handleFontFam('Montserrat')\n  }, \"Montserrat\"), __jsx(Button, {\n    onClick: () => handleFontFam('sans-serif')\n  }, \"Sans serif\"), __jsx(TextField, {\n    label: \"Font size:\",\n    suffix: \"px\",\n    type: \"number\",\n    value: fontSize,\n    onChange: handleFontSize\n  }), __jsx(TextField, {\n    label: \"Bar padding:\",\n    suffix: \"px\",\n    type: \"number\",\n    value: padding,\n    onChange: handlePadding\n  }));\n}\n\nclass StyleConfigPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colorConfig: {},\n      fontConfig: {},\n      bgImg: {}\n    };\n    this.handleStyleConfig = this.handleStyleConfig.bind(this);\n    this.uploadBgImg = this.uploadBgImg.bind(this);\n  }\n\n  handleStyleConfig(colorCf, fontCf) {\n    this.setState(state => {\n      if (colorCf === undefined) {\n        fontCf = _objectSpread({}, state.fontConfig, fontCf);\n        return {\n          colorConfig: state.colorConfig,\n          fontConfig: fontCf\n        };\n      } else if (fontCf === undefined) {\n        colorCf = _objectSpread({}, state.colorConfig, colorCf);\n        return {\n          colorConfig: colorCf,\n          fontConfig: state.fontConfig\n        };\n      }\n    }, function () {\n      this.props.handleStyleConfig(this.state.colorConfig, this.state.fontConfig);\n    });\n  }\n\n  uploadBgImg(bgFile) {\n    this.setState({\n      bgImg: bgFile\n    }, function () {\n      this.props.uploadBgImg(this.state.bgImg);\n    });\n  }\n\n  render() {\n    return __jsx(Card, null, __jsx(Form, null, __jsx(FormLayout, null, __jsx(\"div\", {\n      style: {\n        fontSize: '18px',\n        padding: '1.5em 0 0 1em'\n      }\n    }, \"Style Configuration\"), __jsx(BackgroundSetting, _extends({\n      handleStyleConfig: this.handleStyleConfig\n    }, this.props.styleConfig)), __jsx(ImageDropZone, {\n      uploadBgImg: this.uploadBgImg\n    }), __jsx(Fonts, {\n      handleStyleConfig: this.handleStyleConfig\n    }))));\n  }\n\n}\n\nexport default StyleConfigPage;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\styleConfig.js"],"names":["Card","Stack","TextField","Button","Form","FormLayout","ColorPicker","RangeSlider","useState","useCallback","useEffect","ImageDropZone","ColorPickers","props","color","setColor","hue","brightness","saturation","handleColorChange","height","width","position","top","left","zIndex","OpacitySlider","rangeValue","setRangeValue","handleRangeSliderChange","value","suffixStyles","minWidth","textAlign","handleBgOpacity","BackgroundSetting","rgbToHex","rgb","includes","regExp","re","match","r","toString","g","b","length","hslToRgb","h","s","l","c","Math","abs","x","m","round","showBgPicker","setBgPicker","showTxtPicker","setTxtPicker","showSpTxtPicker","setSpTxtPicker","bgColor","setBgColor","bgOpacity","setBgOpacity","txtColor","setTxtColor","specialColor","setSpecialColor","bgColorFrmProps","colorConfig","txtColorFrmProps","handleStyleConfig","undefined","display","alignItems","justifyContent","borderWidth","borderStyle","borderColor","backgroundColor","cursor","hslCl","cRgb","nw","val","Fonts","fontSize","setFontSize","padding","setPadding","fontFam","setFontFam","handleFontFam","handleFontSize","handlePadding","fontFamily","barPadding","StyleConfigPage","React","Component","constructor","state","fontConfig","bgImg","bind","uploadBgImg","colorCf","fontCf","setState","bgFile","render","styleConfig"],"mappings":";;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,IAAzC,EAA+CC,UAA/C,EAA2DC,WAA3D,EAAwEC,WAAxE,QAA0F,kBAA1F;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAO,kBAAP;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAE1B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,GAAG,EAAE,CAD4B;AAEjCC,IAAAA,UAAU,EAAE,CAFqB;AAGjCC,IAAAA,UAAU,EAAE;AAHqB,GAAD,CAAlC;AAMAR,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,KAAK,CAACM,iBAAN,CAAwBL,KAAxB;AACD,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAIA,SACE;AAAK,IAAA,KAAK,EAAE;AAACM,MAAAA,MAAM,EAAC,OAAR;AAAgBC,MAAAA,KAAK,EAAC,MAAtB;AAA6BC,MAAAA,QAAQ,EAAC,UAAtC;AAAiDC,MAAAA,GAAG,EAAC,MAArD;AAA4DC,MAAAA,IAAI,EAAC,GAAjE;AAAqEC,MAAAA,MAAM,EAAC;AAA5E;AAAZ,KACE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEV,QAAvB;AAAiC,IAAA,KAAK,EAAED;AAAxC,IADF,CADF;AAKD;;AAED,SAASY,aAAT,CAAuBb,KAAvB,EAA6B;AAC3B,QAAM;AAAA,OAACc,UAAD;AAAA,OAAaC;AAAb,MAA8BpB,QAAQ,CAAC,GAAD,CAA5C;AAEA,QAAMqB,uBAAuB,GAAGpB,WAAW,CACxCqB,KAAD,IAAWF,aAAa,CAACE,KAAD,CADiB,EAEzC,EAFyC,CAA3C;AAKA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,MADS;AAEnBC,IAAAA,SAAS,EAAE;AAFQ,GAArB;AAKAvB,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,KAAK,CAACqB,eAAN,CAAsBP,UAAtB;AACD,GAFQ,EAEP,CAACA,UAAD,CAFO,CAAT;AAIA,SACI,MAAC,WAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,KAAK,EAAC,oBAFR;AAGE,IAAA,GAAG,EAAE,CAHP;AAIE,IAAA,GAAG,EAAE,GAJP;AAKE,IAAA,KAAK,EAAEA,UALT;AAME,IAAA,QAAQ,EAAEE,uBANZ;AAOE,IAAA,MAAM,EAAE,qBAPV;AAQE,IAAA,MAAM,EAAE;AAAG,MAAA,KAAK,EAAEE;AAAV,OAAyBJ,UAAzB;AARV,IADJ;AAYD;;AAED,SAASQ,iBAAT,CAA2BtB,KAA3B,EAAiC;AAC/B,QAAMuB,QAAQ,GAAIC,GAAD,IAAS;AACxB,QAAGA,GAAG,CAACC,QAAJ,CAAa,GAAb,CAAH,EAAsB,OAAOD,GAAP;AACtB,QAAIE,MAAM,GAAG,gCAAb;AACA,QAAIC,EAAE,GAAGH,GAAG,CAACI,KAAJ,CAAUF,MAAV,CAAT;;AACA,QAAGC,EAAH,EAAM;AACJ,UAAIE,CAAC,GAAC,UAASF,EAAE,CAAC,CAAD,CAAX,EAAgBG,QAAhB,CAAyB,EAAzB,CAAN;AAAA,UACEC,CAAC,GAAC,UAASJ,EAAE,CAAC,CAAD,CAAX,EAAgBG,QAAhB,CAAyB,EAAzB,CADJ;AAAA,UAEEE,CAAC,GAAC,UAASL,EAAE,CAAC,CAAD,CAAX,EAAgBG,QAAhB,CAAyB,EAAzB,CAFJ;;AAGA,UAAID,CAAC,CAACI,MAAF,IAAY,CAAhB,EACEJ,CAAC,GAAG,MAAMA,CAAV;AACF,UAAIE,CAAC,CAACE,MAAF,IAAY,CAAhB,EACEF,CAAC,GAAG,MAAMA,CAAV;AACF,UAAIC,CAAC,CAACC,MAAF,IAAY,CAAhB,EACED,CAAC,GAAG,MAAMA,CAAV;AACF,aAAO,MAAMH,CAAN,GAAUE,CAAV,GAAcC,CAArB;AACD;AACF,GAhBD;;AAiBA,QAAME,QAAQ,GAAG,CAACC,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAW;AAAE;AAC5B,QAAIC,CAAC,GAAG,CAAC,IAAIC,IAAI,CAACC,GAAL,CAAS,IAAIH,CAAJ,GAAQ,CAAjB,CAAL,IAA4BD,CAApC;AAAA,QACEK,CAAC,GAAGH,CAAC,IAAI,IAAIC,IAAI,CAACC,GAAL,CAAUL,CAAC,GAAG,EAAL,GAAW,CAAX,GAAe,CAAxB,CAAR,CADP;AAAA,QAEEO,CAAC,GAAGL,CAAC,GAAGC,CAAC,GAAC,CAFZ;AAAA,QAGET,CAAC,GAAG,CAHN;AAAA,QAIEE,CAAC,GAAG,CAJN;AAAA,QAKEC,CAAC,GAAG,CALN;;AAMA,QAAI,KAAKG,CAAL,IAAUA,CAAC,GAAG,EAAlB,EAAsB;AACpBN,MAAAA,CAAC,GAAGS,CAAJ;AAAOP,MAAAA,CAAC,GAAGU,CAAJ;AAAOT,MAAAA,CAAC,GAAG,CAAJ;AACf,KAFD,MAEO,IAAI,MAAMG,CAAN,IAAWA,CAAC,GAAG,GAAnB,EAAwB;AAC7BN,MAAAA,CAAC,GAAGY,CAAJ;AAAOV,MAAAA,CAAC,GAAGO,CAAJ;AAAON,MAAAA,CAAC,GAAG,CAAJ;AACf,KAFM,MAEA,IAAI,OAAOG,CAAP,IAAYA,CAAC,GAAG,GAApB,EAAyB;AAC9BN,MAAAA,CAAC,GAAG,CAAJ;AAAOE,MAAAA,CAAC,GAAGO,CAAJ;AAAON,MAAAA,CAAC,GAAGS,CAAJ;AACf,KAFM,MAEA,IAAI,OAAON,CAAP,IAAYA,CAAC,GAAG,GAApB,EAAyB;AAC9BN,MAAAA,CAAC,GAAG,CAAJ;AAAOE,MAAAA,CAAC,GAAGU,CAAJ;AAAOT,MAAAA,CAAC,GAAGM,CAAJ;AACf,KAFM,MAEA,IAAI,OAAOH,CAAP,IAAYA,CAAC,GAAG,GAApB,EAAyB;AAC9BN,MAAAA,CAAC,GAAGY,CAAJ;AAAOV,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAGM,CAAJ;AACf,KAFM,MAEA,IAAI,OAAOH,CAAP,IAAYA,CAAC,GAAG,GAApB,EAAyB;AAC9BN,MAAAA,CAAC,GAAGS,CAAJ;AAAOP,MAAAA,CAAC,GAAG,CAAJ;AAAOC,MAAAA,CAAC,GAAGS,CAAJ;AACf;;AACDZ,IAAAA,CAAC,GAAGU,IAAI,CAACI,KAAL,CAAW,CAACd,CAAC,GAAGa,CAAL,IAAU,GAArB,CAAJ;AACAX,IAAAA,CAAC,GAAGQ,IAAI,CAACI,KAAL,CAAW,CAACZ,CAAC,GAAGW,CAAL,IAAU,GAArB,CAAJ;AACAV,IAAAA,CAAC,GAAGO,IAAI,CAACI,KAAL,CAAW,CAACX,CAAC,GAAGU,CAAL,IAAU,GAArB,CAAJ;AAEA,WAAO,SAASb,CAAT,GAAa,GAAb,GAAmBE,CAAnB,GAAuB,GAAvB,GAA6BC,CAA7B,GAAiC,GAAxC;AACD,GAzBD;;AA0BA,QAAM;AAAA,OAACY,YAAD;AAAA,OAAcC;AAAd,MAA6BlD,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAM;AAAA,OAACmD,aAAD;AAAA,OAAeC;AAAf,MAA+BpD,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM;AAAA,OAACqD,eAAD;AAAA,OAAiBC;AAAjB,MAAmCtD,QAAQ,CAAC,KAAD,CAAjD;AACA,QAAM;AAAA,OAACuD,OAAD;AAAA,OAAUC;AAAV,MAAwBxD,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM;AAAA,OAACyD,SAAD;AAAA,OAAYC;AAAZ,MAA4B1D,QAAQ,CAAC,GAAD,CAA1C;AAEA,QAAM;AAAA,OAAC2D,QAAD;AAAA,OAAWC;AAAX,MAA0B5D,QAAQ,CAAC,SAAD,CAAxC;AACA,QAAM;AAAA,OAAC6D,YAAD;AAAA,OAAeC;AAAf,MAAkC9D,QAAQ,CAAC,MAAD,CAAhD;AACA,MAAI+D,eAAe,GAAG1D,KAAK,CAAC2D,WAAN,CAAkBT,OAAxC;AAAA,MAAiDU,gBAAgB,GAAG5D,KAAK,CAAC2D,WAAN,CAAkBL,QAAtF;AAEAzD,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,KAAK,CAAC6D,iBAAN,CAAwB;AACtBX,MAAAA,OAAO,EAACA,OADc;AAEtBE,MAAAA,SAAS,EAACA,SAFY;AAGtBE,MAAAA,QAAQ,EAACA,QAHa;AAItBE,MAAAA,YAAY,EAACA;AAJS,KAAxB,EAKEM,SALF;AAMD,GAPQ,EAOP,CAACZ,OAAD,EAASE,SAAT,EAAmBE,QAAnB,EAA4BE,YAA5B,CAPO,CAAT;AASA3D,EAAAA,SAAS,CAAC,MAAI;AACZsD,IAAAA,UAAU,CAAC5B,QAAQ,CAACmC,eAAD,CAAT,CAAV;AACD,GAFQ,EAEP,CAACA,eAAD,CAFO,CAAT;AAIA7D,EAAAA,SAAS,CAAC,MAAI;AACZ0D,IAAAA,WAAW,CAAChC,QAAQ,CAACqC,gBAAD,CAAT,CAAX;AACD,GAFQ,EAEP,CAACA,gBAAD,CAFO,CAAT;AAMA,SACE,MAAC,IAAD,CAAM,OAAN,QACE;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,OAAO,EAAC,MAAT;AAAgBC,MAAAA,UAAU,EAAC,QAA3B;AAAoCC,MAAAA,cAAc,EAAC;AAAnD;AAAZ,KACE;AAAK,IAAA,KAAK,EAAE;AAACzD,MAAAA,KAAK,EAAC;AAAP;AAAZ,KACE,sCADF,EAEE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC;AAAV;AAAZ,KACE;AAAK,IAAA,KAAK,EAAE;AAACF,MAAAA,MAAM,EAAC,MAAR;AAAeC,MAAAA,KAAK,EAAC,MAArB;AAA4B0D,MAAAA,WAAW,EAAC,KAAxC;AAA8CC,MAAAA,WAAW,EAAC,OAA1D;AAAkEC,MAAAA,WAAW,EAAC,MAA9E;AAAqFL,MAAAA,OAAO,EAAC,cAA7F;AAA4GM,MAAAA,eAAe,EAACnB,OAA5H;AAAoIoB,MAAAA,MAAM,EAAC;AAA3I,KAAZ;AACE,IAAA,OAAO,EAAE,MAAMzB,WAAW,CAAC,CAACD,YAAF;AAD5B,IADF,EAIIA,YAAY,GACZ,MAAC,YAAD;AACE,IAAA,iBAAiB,EAAG2B,KAAD,IAAW;AAC5B,UAAIC,IAAI,GAAGtC,QAAQ,CAACqC,KAAK,CAACpE,GAAP,EAAWoE,KAAK,CAAClE,UAAjB,EAA4BkE,KAAK,CAACnE,UAAlC,CAAnB;AACA+C,MAAAA,UAAU,CAACqB,IAAD,CAAV;AACD;AAJH,IADY,GAQZ,IAZJ,CADF,EAgBE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEtB,OADT;AAEE,IAAA,QAAQ,EAAEuB,EAAE,IAAItB,UAAU,CAACsB,EAAD;AAF5B,IAhBF,CAFF,CADF,EAyBE;AAAK,IAAA,KAAK,EAAE;AAACjE,MAAAA,KAAK,EAAC;AAAP;AAAZ,KACE,MAAC,aAAD;AAAe,IAAA,eAAe,EAAGkE,GAAD,IAASrB,YAAY,CAACqB,GAAD;AAArD,IADF,CAzBF,CADF,EA8BE;AAAK,IAAA,KAAK,EAAE;AAACX,MAAAA,OAAO,EAAC,MAAT;AAAgBC,MAAAA,UAAU,EAAC,QAA3B;AAAoCC,MAAAA,cAAc,EAAC;AAAnD;AAAZ,KACE;AAAK,IAAA,KAAK,EAAE;AAACzD,MAAAA,KAAK,EAAC;AAAP;AAAZ,KACE,gCADF,EAEE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC;AAAjB,KACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC;AAAV;AAAZ,KACA;AAAK,IAAA,KAAK,EAAE;AAACF,MAAAA,MAAM,EAAC,MAAR;AAAeC,MAAAA,KAAK,EAAC,MAArB;AAA4B0D,MAAAA,WAAW,EAAC,KAAxC;AAA8CC,MAAAA,WAAW,EAAC,OAA1D;AAAkEC,MAAAA,WAAW,EAAC,MAA9E;AAAqFL,MAAAA,OAAO,EAAC,cAA7F;AAA4GM,MAAAA,eAAe,EAACf,QAA5H;AAAqIgB,MAAAA,MAAM,EAAC;AAA5I,KAAZ;AACE,IAAA,OAAO,EAAE,MAAIvB,YAAY,CAAC,CAACD,aAAF;AAD3B,IADA,EAIIA,aAAa,GACb,MAAC,YAAD;AACE,IAAA,iBAAiB,EAAGyB,KAAD,IAAW;AAC5B,UAAIC,IAAI,GAAGtC,QAAQ,CAACqC,KAAK,CAACpE,GAAP,EAAWoE,KAAK,CAAClE,UAAjB,EAA4BkE,KAAK,CAACnE,UAAlC,CAAnB;AACAmD,MAAAA,WAAW,CAACiB,IAAD,CAAX;AACD;AAJH,IADa,GAQb,IAZJ,CADF,EAgBE,MAAC,SAAD;AACE,IAAA,KAAK,EAAElB,QADT;AAEE,IAAA,QAAQ,EAAEmB,EAAE,IAAIlB,WAAW,CAACkB,EAAD;AAF7B,IAhBF,CAFF,CADF,EAyBE;AAAK,IAAA,KAAK,EAAE;AAACjE,MAAAA,KAAK,EAAC;AAAP;AAAZ,KACE,wCADF,EAEE,MAAC,KAAD;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC;AAAV;AAAZ,KACE;AAAK,IAAA,KAAK,EAAE;AAACF,MAAAA,MAAM,EAAC,MAAR;AAAeC,MAAAA,KAAK,EAAC,MAArB;AAA4B0D,MAAAA,WAAW,EAAC,KAAxC;AAA8CC,MAAAA,WAAW,EAAC,OAA1D;AAAkEC,MAAAA,WAAW,EAAC,MAA9E;AAAqFL,MAAAA,OAAO,EAAC,cAA7F;AAA4GM,MAAAA,eAAe,EAACb,YAA5H;AAAyIc,MAAAA,MAAM,EAAC;AAAhJ,KAAZ;AACE,IAAA,OAAO,EAAE,MAAIrB,cAAc,CAAC,CAACD,eAAF;AAD7B,IADF,EAIIA,eAAe,GACf,MAAC,YAAD;AACE,IAAA,iBAAiB,EAAGuB,KAAD,IAAW;AAC5B,UAAIC,IAAI,GAAGtC,QAAQ,CAACqC,KAAK,CAACpE,GAAP,EAAWoE,KAAK,CAAClE,UAAjB,EAA4BkE,KAAK,CAACnE,UAAlC,CAAnB;AACAqD,MAAAA,eAAe,CAACe,IAAD,CAAf;AACD;AAJH,IADe,GAQf,IAZJ,CADF,EAgBE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEjD,QAAQ,CAACiC,YAAD,CADjB;AAEE,IAAA,QAAQ,EAAEiB,EAAE,IAAIhB,eAAe,CAACgB,EAAD;AAFjC,IAhBF,CAFF,CAzBF,CA9BF,CADF;AAmFD;;AAED,SAASE,KAAT,CAAe3E,KAAf,EAAqB;AACnB,QAAM;AAAA,OAAC4E,QAAD;AAAA,OAAUC;AAAV,MAAyBlF,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACmF,OAAD;AAAA,OAASC;AAAT,MAAuBpF,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAAA,OAACqF,OAAD;AAAA,OAASC;AAAT,MAAuBtF,QAAQ,CAAC,YAAD,CAArC;AAEA,QAAMuF,aAAa,GAAGtF,WAAW,CAC9B8E,GAAD,IAAS;AACPO,IAAAA,UAAU,CAACP,GAAD,CAAV;AACD,GAH8B,EAI/B,CAACM,OAAD,CAJ+B,CAAjC;AAOA,QAAMG,cAAc,GAAGvF,WAAW,CAC/B8E,GAAD,IAAS;AACPG,IAAAA,WAAW,CAACH,GAAD,CAAX;AACD,GAH+B,EAIhC,CAACE,QAAD,CAJgC,CAAlC;AAOA,QAAMQ,aAAa,GAAGxF,WAAW,CAC9B8E,GAAD,IAAS;AACPK,IAAAA,UAAU,CAACL,GAAD,CAAV;AACD,GAH8B,EAI/B,CAACI,OAAD,CAJ+B,CAAjC;AAOAjF,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,KAAK,CAAC6D,iBAAN,CAAwBC,SAAxB,EAAkC;AAACuB,MAAAA,UAAU,EAACL,OAAZ;AAAoBJ,MAAAA,QAAQ,EAACA,QAA7B;AAAsCU,MAAAA,UAAU,EAACR;AAAjD,KAAlC;AACD,GAFQ,EAEP,CAACE,OAAD,EAASJ,QAAT,EAAkBE,OAAlB,CAFO,CAAT;AAIA,SACE,MAAC,IAAD,CAAM,OAAN,QACE,kCADF,EAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMI,aAAa,CAAC,YAAD;AAApC,kBAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,YAAD;AAApC,kBAHF,EAIE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,MAAM,EAAC,IAFT;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEN,QAJT;AAKE,IAAA,QAAQ,EAAEO;AALZ,IAJF,EAWE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,MAAM,EAAC,IAFT;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,KAAK,EAAEL,OAJT;AAKE,IAAA,QAAQ,EAAEM;AALZ,IAXF,CADF;AAqBD;;AAED,MAAMG,eAAN,SAA8BC,KAAK,CAACC,SAApC,CAA6C;AAC3CC,EAAAA,WAAW,CAAC1F,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAK2F,KAAL,GAAa;AACXhC,MAAAA,WAAW,EAAC,EADD;AAEXiC,MAAAA,UAAU,EAAC,EAFA;AAGXC,MAAAA,KAAK,EAAC;AAHK,KAAb;AAKA,SAAKhC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBiC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDjC,EAAAA,iBAAiB,CAACmC,OAAD,EAASC,MAAT,EAAgB;AAC/B,SAAKC,QAAL,CAAeP,KAAD,IAAS;AACrB,UAAGK,OAAO,KAAGlC,SAAb,EAAuB;AACrBmC,QAAAA,MAAM,qBAAON,KAAK,CAACC,UAAb,EAA2BK,MAA3B,CAAN;AACA,eAAO;AAACtC,UAAAA,WAAW,EAACgC,KAAK,CAAChC,WAAnB;AAA+BiC,UAAAA,UAAU,EAACK;AAA1C,SAAP;AACD,OAHD,MAGM,IAAGA,MAAM,KAAKnC,SAAd,EAAwB;AAC5BkC,QAAAA,OAAO,qBAAOL,KAAK,CAAChC,WAAb,EAA4BqC,OAA5B,CAAP;AACA,eAAO;AAACrC,UAAAA,WAAW,EAACqC,OAAb;AAAqBJ,UAAAA,UAAU,EAACD,KAAK,CAACC;AAAtC,SAAP;AACD;AACF,KARD,EAQE,YAAU;AACV,WAAK5F,KAAL,CAAW6D,iBAAX,CAA6B,KAAK8B,KAAL,CAAWhC,WAAxC,EAAoD,KAAKgC,KAAL,CAAWC,UAA/D;AACD,KAVD;AAWD;;AAEDG,EAAAA,WAAW,CAACI,MAAD,EAAQ;AACjB,SAAKD,QAAL,CAAc;AAACL,MAAAA,KAAK,EAACM;AAAP,KAAd,EAA6B,YAAU;AACrC,WAAKnG,KAAL,CAAW+F,WAAX,CAAuB,KAAKJ,KAAL,CAAWE,KAAlC;AACD,KAFD;AAGD;;AAEDO,EAAAA,MAAM,GAAE;AACN,WACE,MAAC,IAAD,QACE,MAAC,IAAD,QACE,MAAC,UAAD,QACE;AAAK,MAAA,KAAK,EAAE;AAACxB,QAAAA,QAAQ,EAAC,MAAV;AAAiBE,QAAAA,OAAO,EAAC;AAAzB;AAAZ,6BADF,EAEE,MAAC,iBAAD;AAAmB,MAAA,iBAAiB,EAAE,KAAKjB;AAA3C,OAAkE,KAAK7D,KAAL,CAAWqG,WAA7E,EAFF,EAGE,MAAC,aAAD;AAAe,MAAA,WAAW,EAAE,KAAKN;AAAjC,MAHF,EAIE,MAAC,KAAD;AAAQ,MAAA,iBAAiB,EAAE,KAAKlC;AAAhC,MAJF,CADF,CADF,CADF;AAYD;;AA7C0C;;AAgD7C,eAAe0B,eAAf","sourcesContent":["import { Card, Stack, TextField, Button, Form, FormLayout, ColorPicker, RangeSlider} from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport ImageDropZone from '../snippets/imageDropZone';\r\nimport '../css/fonts.css';\r\n\r\nfunction ColorPickers(props){\r\n  \r\n  const [color, setColor] = useState({\r\n    hue: 0,\r\n    brightness: 0,\r\n    saturation: 0,\r\n  });\r\n\r\n  useEffect(()=>{\r\n    props.handleColorChange(color);\r\n  },[color])\r\n\r\n  return (\r\n    <div style={{height:'100px',width:'auto',position:'absolute',top:'25px',left:'0',zIndex:'99'}}>\r\n      <ColorPicker onChange={setColor} color={color} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction OpacitySlider(props){\r\n  const [rangeValue, setRangeValue] = useState(100);\r\n\r\n  const handleRangeSliderChange = useCallback(\r\n    (value) => setRangeValue(value),\r\n    [],\r\n  );\r\n\r\n  const suffixStyles = {\r\n    minWidth: '24px',\r\n    textAlign: 'right',\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.handleBgOpacity(rangeValue);\r\n  },[rangeValue])\r\n\r\n  return (\r\n      <RangeSlider\r\n        output\r\n        label=\"Background Opacity\"\r\n        min={0}\r\n        max={100}\r\n        value={rangeValue}\r\n        onChange={handleRangeSliderChange}\r\n        prefix={<p>0</p>}\r\n        suffix={<p style={suffixStyles}>{rangeValue}</p>}\r\n      />\r\n  );\r\n}\r\n\r\nfunction BackgroundSetting(props){\r\n  const rgbToHex = (rgb) => {\r\n    if(rgb.includes('#')) return rgb;\r\n    let regExp = /\\(\\s*(\\d+),\\s*(\\d+),\\s*(\\d+)\\)/;\r\n    let re = rgb.match(regExp);\r\n    if(re){\r\n      let r=parseInt(re[1]).toString(16),\r\n        g=parseInt(re[2]).toString(16),\r\n        b=parseInt(re[3]).toString(16);\r\n      if (r.length == 1)\r\n        r = \"0\" + r;\r\n      if (g.length == 1)\r\n        g = \"0\" + g;\r\n      if (b.length == 1)\r\n        b = \"0\" + b;\r\n      return \"#\" + r + g + b;\r\n    }\r\n  };\r\n  const hslToRgb = (h,s,l) => { // s, l must be fractions of 100;\r\n    let c = (1 - Math.abs(2 * l - 1)) * s,\r\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n      m = l - c/2,\r\n      r = 0,\r\n      g = 0,\r\n      b = 0;\r\n    if (0 <= h && h < 60) {\r\n      r = c; g = x; b = 0;\r\n    } else if (60 <= h && h < 120) {\r\n      r = x; g = c; b = 0;\r\n    } else if (120 <= h && h < 180) {\r\n      r = 0; g = c; b = x;\r\n    } else if (180 <= h && h < 240) {\r\n      r = 0; g = x; b = c;\r\n    } else if (240 <= h && h < 300) {\r\n      r = x; g = 0; b = c;\r\n    } else if (300 <= h && h < 360) {\r\n      r = c; g = 0; b = x;\r\n    }\r\n    r = Math.round((r + m) * 255);\r\n    g = Math.round((g + m) * 255);\r\n    b = Math.round((b + m) * 255);\r\n  \r\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n  }\r\n  const [showBgPicker,setBgPicker] = useState(false);\r\n  const [showTxtPicker,setTxtPicker] = useState(false);\r\n  const [showSpTxtPicker,setSpTxtPicker] = useState(false);\r\n  const [bgColor, setBgColor] = useState('#000');\r\n  const [bgOpacity, setBgOpacity] = useState(100);\r\n\r\n  const [txtColor, setTxtColor] = useState('#b31219');\r\n  const [specialColor, setSpecialColor] = useState('#fff');\r\n  let bgColorFrmProps = props.colorConfig.bgColor, txtColorFrmProps = props.colorConfig.txtColor;\r\n\r\n  useEffect(()=>{\r\n    props.handleStyleConfig({\r\n      bgColor:bgColor,\r\n      bgOpacity:bgOpacity,\r\n      txtColor:txtColor,\r\n      specialColor:specialColor\r\n    },undefined);\r\n  },[bgColor,bgOpacity,txtColor,specialColor]);\r\n\r\n  useEffect(()=>{\r\n    setBgColor(rgbToHex(bgColorFrmProps));\r\n  },[bgColorFrmProps]);\r\n\r\n  useEffect(()=>{\r\n    setTxtColor(rgbToHex(txtColorFrmProps));\r\n  },[txtColorFrmProps]);\r\n\r\n\r\n\r\n  return (\r\n    <Card.Section>\r\n      <div style={{display:'flex',alignItems:'center',justifyContent:'flex-start',}}>\r\n        <div style={{width:'30%'}}>\r\n          <h3>Background color:</h3>\r\n          <Stack alignment=\"center\">\r\n            <div style={{position:'relative'}}>\r\n              <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:bgColor,cursor:'pointer'}} \r\n                onClick={() => setBgPicker(!showBgPicker)}\r\n              ></div>\r\n              { showBgPicker? \r\n                <ColorPickers \r\n                  handleColorChange={(hslCl) => {\r\n                    let cRgb = hslToRgb(hslCl.hue,hslCl.saturation,hslCl.brightness);\r\n                    setBgColor(cRgb);\r\n                  }}\r\n                />\r\n                :\r\n                null\r\n              }\r\n            </div>\r\n            <TextField\r\n              value={bgColor}\r\n              onChange={nw => setBgColor(nw)}\r\n            />\r\n          </Stack>\r\n        </div>\r\n        <div style={{width:'50%'}}>\r\n          <OpacitySlider handleBgOpacity={(val) => setBgOpacity(val)} />\r\n        </div>\r\n      </div>\r\n      <div style={{display:'flex',alignItems:'center',justifyContent:'flex-start'}}>\r\n        <div style={{width:'30%'}}>\r\n          <h3>Text color:</h3>\r\n          <Stack alignment=\"center\">\r\n            <div style={{position:'relative'}}>\r\n            <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:txtColor,cursor:'pointer'}}\r\n              onClick={()=>setTxtPicker(!showTxtPicker)}\r\n            ></div>\r\n              { showTxtPicker?\r\n                <ColorPickers \r\n                  handleColorChange={(hslCl) => {\r\n                    let cRgb = hslToRgb(hslCl.hue,hslCl.saturation,hslCl.brightness);\r\n                    setTxtColor(cRgb);\r\n                  }}\r\n                />\r\n                :\r\n                null\r\n              }\r\n            </div>\r\n            <TextField \r\n              value={txtColor}\r\n              onChange={nw => setTxtColor(nw)}\r\n            />\r\n          </Stack>\r\n        </div>\r\n        <div style={{width:'30%'}}>\r\n          <h3>Special text color:</h3>\r\n          <Stack  alignment=\"center\">\r\n            <div style={{position:'relative'}}>\r\n              <div style={{height:'25px',width:'25px',borderWidth:'1px',borderStyle:'solid',borderColor:'#ddd',display:'inline-block',backgroundColor:specialColor,cursor:'pointer'}}\r\n                onClick={()=>setSpTxtPicker(!showSpTxtPicker)}\r\n              ></div>\r\n              { showSpTxtPicker?\r\n                <ColorPickers \r\n                  handleColorChange={(hslCl) => {\r\n                    let cRgb = hslToRgb(hslCl.hue,hslCl.saturation,hslCl.brightness);\r\n                    setSpecialColor(cRgb);\r\n                  }}\r\n                />\r\n                :\r\n                null\r\n              }\r\n            </div>\r\n            <TextField \r\n              value={rgbToHex(specialColor)}\r\n              onChange={nw => setSpecialColor(nw)}\r\n            />\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction Fonts(props){\r\n  const [fontSize,setFontSize] = useState(18);\r\n  const [padding,setPadding] = useState(10);\r\n  const [fontFam,setFontFam] = useState('sans-serif');\r\n\r\n  const handleFontFam = useCallback(\r\n    (val) => {\r\n      setFontFam(val);\r\n    },\r\n    [fontFam]\r\n  )\r\n\r\n  const handleFontSize = useCallback(\r\n    (val) => {\r\n      setFontSize(val);\r\n    },\r\n    [fontSize]\r\n  );\r\n\r\n  const handlePadding = useCallback(\r\n    (val) => {\r\n      setPadding(val);\r\n    },\r\n    [padding]\r\n  );\r\n\r\n  useEffect(()=>{\r\n    props.handleStyleConfig(undefined,{fontFamily:fontFam,fontSize:fontSize,barPadding:padding});\r\n  },[fontFam,fontSize,padding])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <div>Font family:</div>\r\n      <Button onClick={() => handleFontFam('Montserrat')}>Montserrat</Button>\r\n      <Button onClick={() => handleFontFam('sans-serif')}>Sans serif</Button>\r\n      <TextField \r\n        label=\"Font size:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={fontSize}\r\n        onChange={handleFontSize}\r\n      />\r\n      <TextField \r\n        label=\"Bar padding:\"\r\n        suffix=\"px\"\r\n        type=\"number\"\r\n        value={padding}\r\n        onChange={handlePadding}\r\n      />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nclass StyleConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      colorConfig:{},\r\n      fontConfig:{},\r\n      bgImg:{}\r\n    }\r\n    this.handleStyleConfig = this.handleStyleConfig.bind(this);\r\n    this.uploadBgImg = this.uploadBgImg.bind(this);\r\n  }\r\n\r\n  handleStyleConfig(colorCf,fontCf){\r\n    this.setState((state)=>{\r\n      if(colorCf===undefined){\r\n        fontCf = {...state.fontConfig,...fontCf};\r\n        return {colorConfig:state.colorConfig,fontConfig:fontCf}\r\n      }else if(fontCf === undefined){\r\n        colorCf = {...state.colorConfig,...colorCf};\r\n        return {colorConfig:colorCf,fontConfig:state.fontConfig}\r\n      }\r\n    },function(){\r\n      this.props.handleStyleConfig(this.state.colorConfig,this.state.fontConfig);\r\n    })\r\n  }\r\n\r\n  uploadBgImg(bgFile){\r\n    this.setState({bgImg:bgFile},function(){\r\n      this.props.uploadBgImg(this.state.bgImg)\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <Form>\r\n          <FormLayout>\r\n            <div style={{fontSize:'18px',padding:'1.5em 0 0 1em'}}>Style Configuration</div>\r\n            <BackgroundSetting handleStyleConfig={this.handleStyleConfig} {...this.props.styleConfig}/>\r\n            <ImageDropZone uploadBgImg={this.uploadBgImg}/>\r\n            <Fonts  handleStyleConfig={this.handleStyleConfig}/>\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StyleConfigPage;"]},"metadata":{},"sourceType":"module"}