{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, TextField, DisplayText, Stack, Form, FormLayout, Button, Select, Checkbox, ChoiceList } from '@shopify/polaris';\nimport { useState, useCallback, useEffect } from 'react';\n\nfunction NameField(props) {\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  useEffect(function () {\n    props.handleName(name);\n  }, [name]);\n  return __jsx(FormLayout.Group, null, __jsx(TextField, {\n    label: \"Name: \",\n    value: name,\n    onChange: function onChange(nw) {\n      return setName(nw);\n    }\n  }));\n}\n\nfunction FreeShippingGoal(props) {\n  var _useState2 = useState(30),\n      goal = _useState2[0],\n      setGoal = _useState2[1];\n\n  var _handleGoalChange = function _handleGoalChange(newGoal) {\n    setGoal(newGoal);\n    props.handleGoalChange(newGoal);\n  };\n\n  return __jsx(FormLayout.Group, null, __jsx(TextField, {\n    label: \"Free Shipping Goal: \",\n    type: \"number\",\n    value: goal,\n    onChange: function onChange(nw) {\n      return _handleGoalChange(nw);\n    }\n  }));\n}\n\nfunction InitialMsg(props) {\n  var _useState3 = useState('Free Shipping on All Orders Over '),\n      msg = _useState3[0],\n      setMsg = _useState3[1];\n\n  var _useState4 = useState(''),\n      added = _useState4[0],\n      setAdded = _useState4[1];\n\n  useEffect(function () {\n    props.handleMsgChange({\n      initialMsg1: msg,\n      initialMsg2: added\n    });\n  }, [msg, added]);\n  return __jsx(FormLayout.Group, null, __jsx(Stack, {\n    alignment: \"center\",\n    distribution: \"fill\"\n  }, __jsx(TextField, {\n    label: \"Initial message: \",\n    type: \"text\",\n    value: msg,\n    onChange: function onChange(nw) {\n      return setMsg(nw);\n    },\n    helpText: \"Display when cart is empty\"\n  }), __jsx(\"div\", null, props.currency, \" \", props.goal), __jsx(TextField, {\n    label: \" \",\n    type: \"text\",\n    value: added,\n    onChange: function onChange(nw) {\n      return setAdded(nw);\n    }\n  })));\n}\n\nfunction ProgressMsg(props) {\n  var _useState5 = useState('Only '),\n      msg = _useState5[0],\n      setMsg = _useState5[1];\n\n  var _useState6 = useState(' away from free shipping'),\n      added = _useState6[0],\n      setAdded = _useState6[1];\n\n  var gl = props.goal;\n  useEffect(function () {\n    props.handleMsgChange({\n      prgMsg1: msg,\n      prgMsg2: added\n    });\n  }, [msg, added]);\n  return __jsx(FormLayout.Group, {\n    condensed: true\n  }, __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(TextField, {\n    label: \"Progress message: \",\n    type: \"text\",\n    value: msg,\n    onChange: function onChange(nw) {\n      return setMsg(nw);\n    },\n    helpText: \"Displays when cart value is less than the goal\"\n  }), __jsx(DisplayText, null, props.currency), __jsx(DisplayText, null, gl - 1), __jsx(TextField, {\n    label: \" \",\n    type: \"text\",\n    value: added,\n    onChange: function onChange(nw) {\n      return setAdded(nw);\n    }\n  })));\n}\n\nfunction GoalAchieved(props) {\n  var _useState7 = useState('Free Shipping Worldwide'),\n      msg = _useState7[0],\n      setMsg = _useState7[1];\n\n  useEffect(function () {\n    props.handleMsgChange({\n      achievedMsg: msg\n    });\n  }, [msg]);\n  return __jsx(FormLayout.Group, null, __jsx(TextField, {\n    label: \"Goal Achieved Message: \",\n    type: \"text\",\n    value: msg,\n    onChange: function onChange(nw) {\n      return setMsg(nw);\n    },\n    helpText: \"Displays when cart value is greater than goal\"\n  }));\n}\n\nfunction AddLinkToBar(props) {\n  var _useState8 = useState(false),\n      havLink = _useState8[0],\n      setHavLink = _useState8[1];\n\n  var _useState9 = useState(''),\n      url = _useState9[0],\n      setUrl = _useState9[1];\n\n  var _useState10 = useState(false),\n      checkbox = _useState10[0],\n      setChecked = _useState10[1];\n\n  var opts = [{\n    label: 'Off',\n    value: false\n  }, {\n    label: 'On',\n    value: true\n  }];\n\n  var handleSwitch = function handleSwitch(val) {\n    val = val === 'true' ? true : false;\n    setHavLink(val);\n\n    if (!val) {\n      props.handleBarLinkChange('');\n    }\n  };\n\n  var handleCheckbox = function handleCheckbox(val) {\n    setChecked(val);\n    props.handleBarLinkChange(val);\n  };\n\n  return __jsx(FormLayout.Group, null, __jsx(Select, {\n    label: \"Add Link to the Bar: \",\n    options: opts,\n    onChange: handleSwitch,\n    value: havLink\n  }), havLink ? __jsx(FormLayout.Group, null, __jsx(TextField, {\n    label: \"Link URL: \",\n    type: \"url\",\n    value: url,\n    onChange: function onChange(nw) {\n      setUrl(nw);\n      props.handleBarLinkChange(nw);\n    },\n    helpText: \"This address will be visited after clicking the bar\"\n  }), __jsx(Checkbox, {\n    label: \"Open the link in a NEW tab when clicked\",\n    checked: checkbox,\n    onChange: function onChange(nw) {\n      return handleCheckbox(nw);\n    }\n  })) : null);\n}\n\nfunction SetPosition(props) {\n  var _useState11 = useState(['push-down']),\n      isSelected = _useState11[0],\n      setSelected = _useState11[1];\n\n  var choices = [{\n    label: 'Top bar pushes down the rest of the page',\n    value: 'push-down'\n  }, //body padding-top equals to the height of the bar, position: absolute\n  {\n    label: 'Top bar pushes down the rest of the page (always visible while scrolling)',\n    value: 'push-down-visible'\n  }, // body padding-top, and position: -webkit-sticky\n  {\n    label: 'Top bar overlaps top of the page',\n    value: 'overlap'\n  }, //no padding-top for body\n  {\n    label: 'Top bar overlaps top of the page (always visible while scrolling)',\n    value: 'overlap-visible'\n  }, //no padding-top for body, and position:sticky\n  {\n    label: 'Manual placement',\n    value: 'manual',\n    renderChildren: function renderChildren(isSelected) {\n      return isSelected && __jsx(\"div\", null, \"Place the code\");\n    }\n  }];\n  useEffect(function () {\n    props.handleBarPosition(isSelected);\n  }, [isSelected]);\n  return __jsx(FormLayout.Group, null, __jsx(ChoiceList, {\n    title: 'Select a Display Position: ',\n    choices: choices,\n    selected: isSelected,\n    onChange: function onChange(nw) {\n      return setSelected(nw);\n    }\n  }));\n}\n\nvar ContentConfigPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContentConfigPage, _React$Component);\n\n  function ContentConfigPage(props) {\n    var _this;\n\n    _classCallCheck(this, ContentConfigPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContentConfigPage).call(this, props));\n    _this.state = {\n      frShGl: 30,\n      msgText: {\n        initialMsg1: 'Free Shipping on All Orders Over ',\n        initialMsg2: '',\n        prgMsg1: 'Only ',\n        prgMsg2: ' away from free shipping',\n        achievedMsg: 'Free Shipping Worldwide'\n      }\n    };\n    _this.handleGoalChange = _this.handleGoalChange.bind(_assertThisInitialized(_this));\n    _this.handleMsgChange = _this.handleMsgChange.bind(_assertThisInitialized(_this));\n    _this.handleBarLinkChange = _this.handleBarLinkChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ContentConfigPage, [{\n    key: \"handleGoalChange\",\n    value: function handleGoalChange(newGoal) {\n      if (_parseFloat(newGoal) !== 0) {\n        this.setState(function (state) {\n          return {\n            frShGl: _parseFloat(newGoal)\n          };\n        }, function () {\n          this.props.handleContentConfig_goal(this.state.frShGl);\n        });\n      }\n    }\n  }, {\n    key: \"handleMsgChange\",\n    value: function handleMsgChange(msg) {\n      this.setState(function (state) {\n        msg = _objectSpread({}, state.msgText, msg);\n        return {\n          msgText: msg\n        };\n      }, function () {\n        this.props.handleContentConfig_msg(this.state.msgText);\n      });\n    }\n  }, {\n    key: \"handleBarLinkChange\",\n    value: function handleBarLinkChange(val) {\n      var barLinkConfig = {};\n\n      if (typeof val === 'boolean') {\n        barLinkConfig.openNew = val;\n      } else if (typeof val === 'string') {\n        barLinkConfig.url = val;\n      }\n\n      this.props.handleContentConfig_link(barLinkConfig);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var frShGl = this.state.frShGl;\n      return __jsx(Card, null, __jsx(Form, {\n        onSubmit: function onSubmit() {}\n      }, __jsx(FormLayout, null, __jsx(NameField, {\n        handleName: function handleName(name) {\n          return _this2.props.handleName(name);\n        }\n      }), __jsx(FreeShippingGoal, {\n        handleGoalChange: this.handleGoalChange\n      }), frShGl ? __jsx(FormLayout, null, __jsx(InitialMsg, {\n        goal: frShGl,\n        currency: \"$\",\n        handleMsgChange: this.handleMsgChange\n      }), __jsx(ProgressMsg, {\n        goal: frShGl,\n        currency: \"$\",\n        handleMsgChange: this.handleMsgChange\n      })) : null, __jsx(GoalAchieved, {\n        handleMsgChange: this.handleMsgChange\n      }), __jsx(AddLinkToBar, {\n        handleBarLinkChange: this.handleBarLinkChange\n      }), __jsx(SetPosition, {\n        handleBarPosition: function handleBarPosition(val) {\n          return _this2.props.handleBarPosition(val);\n        }\n      }))));\n    }\n  }]);\n\n  return ContentConfigPage;\n}(React.Component);\n\nexport default ContentConfigPage;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\contentConfig.js"],"names":["Card","TextField","DisplayText","Stack","Form","FormLayout","Button","Select","Checkbox","ChoiceList","useState","useCallback","useEffect","NameField","props","name","setName","handleName","nw","FreeShippingGoal","goal","setGoal","_handleGoalChange","newGoal","handleGoalChange","InitialMsg","msg","setMsg","added","setAdded","handleMsgChange","initialMsg1","initialMsg2","currency","ProgressMsg","gl","prgMsg1","prgMsg2","GoalAchieved","achievedMsg","AddLinkToBar","havLink","setHavLink","url","setUrl","checkbox","setChecked","opts","label","value","handleSwitch","val","handleBarLinkChange","handleCheckbox","SetPosition","isSelected","setSelected","choices","renderChildren","handleBarPosition","ContentConfigPage","state","frShGl","msgText","bind","setState","handleContentConfig_goal","handleContentConfig_msg","barLinkConfig","openNew","handleContentConfig_link","React","Component"],"mappings":"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","sourcesContent":["import { Card, TextField, DisplayText, Stack, Form, FormLayout, Button, Select, Checkbox, ChoiceList } from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\n\r\nfunction NameField(props){\r\n  const [name,setName] = useState('');\r\n\r\n  useEffect(()=>{\r\n    props.handleName(name);\r\n  },[name]);\r\n\r\n  return ( \r\n    <FormLayout.Group>\r\n      <TextField label=\"Name: \" value={name} onChange={ (nw) => setName(nw)} />\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction FreeShippingGoal(props){\r\n  const [goal,setGoal] = useState(30);\r\n  const _handleGoalChange = function(newGoal){\r\n    setGoal(newGoal);\r\n    props.handleGoalChange(newGoal)\r\n  }\r\n  return (\r\n    <FormLayout.Group>\r\n      <TextField \r\n        label=\"Free Shipping Goal: \" \r\n        type=\"number\"\r\n        value={goal} \r\n        onChange={(nw) => _handleGoalChange(nw)} \r\n      />\r\n    </FormLayout.Group>\r\n  );\r\n}\r\n\r\nfunction InitialMsg(props){\r\n  const [msg,setMsg] = useState('Free Shipping on All Orders Over ');\r\n  const [added,setAdded] = useState('');\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({initialMsg1:msg,initialMsg2:added});\r\n  },[msg,added])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <Stack alignment=\"center\" distribution=\"fill\">\r\n        <TextField\r\n          label=\"Initial message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Display when cart is empty\"\r\n        />\r\n        <div>{props.currency} {props.goal}</div>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction ProgressMsg(props){\r\n  const [msg,setMsg] = useState('Only ');\r\n  const [added,setAdded] = useState(' away from free shipping');\r\n  const gl = props.goal;\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({prgMsg1:msg,prgMsg2:added})\r\n  },[msg,added])\r\n\r\n  return (\r\n    <FormLayout.Group condensed>\r\n      <Stack alignment=\"center\">\r\n        <TextField\r\n          label=\"Progress message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Displays when cart value is less than the goal\"\r\n        />\r\n        <DisplayText>{props.currency}</DisplayText>\r\n        <DisplayText>{gl-1}</DisplayText>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction GoalAchieved(props){\r\n  const [msg,setMsg] = useState('Free Shipping Worldwide');\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({achievedMsg:msg})\r\n  },[msg])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <TextField\r\n        label=\"Goal Achieved Message: \"\r\n        type=\"text\"\r\n        value={msg}\r\n        onChange={(nw) => setMsg(nw)}\r\n        helpText=\"Displays when cart value is greater than goal\"\r\n      />\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction AddLinkToBar(props){\r\n  const [havLink,setHavLink] = useState(false);\r\n  const [url,setUrl] = useState('');\r\n  const [checkbox,setChecked] = useState(false);\r\n\r\n  const opts=[\r\n    {label:'Off',value:false},\r\n    {label:'On',value:true}\r\n  ]\r\n\r\n  const handleSwitch = (val) => {\r\n    val = val === 'true'? true : false;\r\n    setHavLink(val);\r\n    if(!val){\r\n      props.handleBarLinkChange('');\r\n    }\r\n  }\r\n\r\n  const handleCheckbox = (val) => {\r\n    setChecked(val);\r\n    props.handleBarLinkChange(val);\r\n  }\r\n\r\n  return(\r\n    <FormLayout.Group>\r\n      <Select \r\n        label=\"Add Link to the Bar: \"\r\n        options={opts}\r\n        onChange={handleSwitch}\r\n        value={havLink}\r\n      />\r\n      {\r\n        havLink?\r\n        <FormLayout.Group>\r\n          <TextField\r\n            label=\"Link URL: \"\r\n            type=\"url\"\r\n            value={url}\r\n            onChange={(nw) => {setUrl(nw); props.handleBarLinkChange(nw);}}\r\n            helpText=\"This address will be visited after clicking the bar\"\r\n          />\r\n          <Checkbox \r\n            label=\"Open the link in a NEW tab when clicked\"\r\n            checked={checkbox}\r\n            onChange={(nw) => handleCheckbox(nw)}\r\n          />\r\n        </FormLayout.Group>\r\n        :\r\n        null\r\n      }\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nfunction SetPosition(props){\r\n  const [isSelected,setSelected] = useState(['push-down']);\r\n\r\n  const choices = [\r\n    {label:'Top bar pushes down the rest of the page',value:'push-down'}, //body padding-top equals to the height of the bar, position: absolute\r\n    {label:'Top bar pushes down the rest of the page (always visible while scrolling)', value:'push-down-visible'}, // body padding-top, and position: -webkit-sticky\r\n    {label:'Top bar overlaps top of the page',value:'overlap'}, //no padding-top for body\r\n    {label:'Top bar overlaps top of the page (always visible while scrolling)',value:'overlap-visible'}, //no padding-top for body, and position:sticky\r\n    {\r\n      label:'Manual placement',\r\n      value:'manual',\r\n      renderChildren:(isSelected)=>{\r\n        return (\r\n          isSelected && (\r\n            <div>Place the code</div>\r\n          )\r\n        )\r\n      }}\r\n  ];\r\n\r\n  useEffect(()=>{\r\n    props.handleBarPosition(isSelected);\r\n  },[isSelected])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <ChoiceList \r\n        title={'Select a Display Position: '}\r\n        choices={choices}\r\n        selected={isSelected}\r\n        onChange={(nw) => setSelected(nw)}\r\n      />\r\n    </FormLayout.Group>\r\n  )\r\n}\r\n\r\nclass ContentConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {frShGl:30,msgText:{initialMsg1:'Free Shipping on All Orders Over ',initialMsg2:'',prgMsg1:'Only ',prgMsg2:' away from free shipping',achievedMsg:'Free Shipping Worldwide'}}\r\n    this.handleGoalChange = this.handleGoalChange.bind(this);\r\n    this.handleMsgChange = this.handleMsgChange.bind(this);\r\n    this.handleBarLinkChange = this.handleBarLinkChange.bind(this);\r\n  }\r\n\r\n  handleGoalChange(newGoal){\r\n    if(parseFloat(newGoal) !== 0){\r\n      this.setState((state) => {\r\n        return {frShGl:parseFloat(newGoal)}\r\n      },function(){\r\n        this.props.handleContentConfig_goal(this.state.frShGl);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleMsgChange(msg){\r\n    this.setState((state)=>{\r\n      msg = {...state.msgText,...msg};\r\n      return {msgText:msg}\r\n    },function(){\r\n      this.props.handleContentConfig_msg(this.state.msgText)\r\n    });\r\n  };\r\n\r\n  handleBarLinkChange(val){\r\n    let barLinkConfig = {};\r\n    if(typeof val === 'boolean'){\r\n      barLinkConfig.openNew = val;\r\n    }else if(typeof val === 'string'){\r\n      barLinkConfig.url = val;\r\n    }\r\n    this.props.handleContentConfig_link(barLinkConfig);\r\n  }\r\n\r\n  render(){\r\n    const {frShGl} = this.state;\r\n    return (\r\n      <Card>\r\n        <Form onSubmit={() => {}}>\r\n          <FormLayout>\r\n\r\n            <NameField handleName={(name)=> this.props.handleName(name)}/>\r\n\r\n            <FreeShippingGoal handleGoalChange={this.handleGoalChange}/>\r\n\r\n            { frShGl? \r\n              <FormLayout>\r\n                <InitialMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange}/>\r\n                <ProgressMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange} />\r\n              </FormLayout>\r\n              :\r\n              null\r\n            }\r\n            \r\n            <GoalAchieved handleMsgChange={this.handleMsgChange} />\r\n\r\n            <AddLinkToBar handleBarLinkChange={this.handleBarLinkChange} />\r\n\r\n            <SetPosition handleBarPosition={(val)=>this.props.handleBarPosition(val)}/>\r\n\r\n          </FormLayout>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContentConfigPage;"]},"metadata":{},"sourceType":"module"}