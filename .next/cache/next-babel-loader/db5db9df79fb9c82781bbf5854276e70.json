{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, TextField, Stack, FormLayout, Select, Checkbox, ChoiceList, Collapsible, TextStyle } from '@shopify/polaris';\nimport { useState, useCallback, useEffect } from 'react';\nimport SectionHead from '../snippets/sectionHead';\n\nfunction NameField(props) {\n  const {\n    0: name,\n    1: setName\n  } = useState(props.name);\n  useEffect(() => {\n    props.handleName(name);\n  }, [name]);\n  return __jsx(Card.Section, null, __jsx(TextField, {\n    label: \"Name: \",\n    value: name,\n    onChange: nw => setName(nw)\n  }));\n}\n\nfunction FreeShippingGoal(props) {\n  const {\n    0: goal,\n    1: setGoal\n  } = useState(props.goal ? props.goal : 30);\n\n  const _handleGoalChange = function (newGoal) {\n    setGoal(newGoal);\n    props.handleGoalChange(newGoal);\n  };\n\n  return __jsx(Card.Section, null, __jsx(TextField, {\n    label: \"Free Shipping Goal: \",\n    type: \"number\",\n    value: goal,\n    onChange: nw => _handleGoalChange(nw)\n  }));\n}\n\nfunction InitialMsg(props) {\n  const {\n    0: msg,\n    1: setMsg\n  } = useState(props.barTxt.initialMsg1 && props.barTxt.initialMsg1.length > 0 ? props.barTxt.initialMsg1 : 'Free Shipping on All Orders Over ');\n  const {\n    0: added,\n    1: setAdded\n  } = useState(props.barTxt.initialMsg2 ? props.barTxt.initialMsg2 : '');\n  useEffect(() => {\n    props.handleMsgChange({\n      initialMsg1: msg,\n      initialMsg2: added\n    });\n  }, [msg, added]);\n  return __jsx(Card.Section, null, __jsx(Stack, {\n    alignment: \"center\",\n    distribution: \"fill\"\n  }, __jsx(TextField, {\n    label: \"Initial message: \",\n    type: \"text\",\n    value: msg,\n    onChange: nw => setMsg(nw),\n    helpText: \"Display when cart is empty\"\n  }), __jsx(\"div\", {\n    style: {\n      fontSize: '18px'\n    }\n  }, props.currency, \" \", props.goal), __jsx(TextField, {\n    label: \" \",\n    type: \"text\",\n    value: added,\n    onChange: nw => setAdded(nw)\n  })));\n}\n\nfunction ProgressMsg(props) {\n  const {\n    0: msg,\n    1: setMsg\n  } = useState(props.barTxt.prgMsg1 && props.barTxt.prgMsg1.length > 0 ? props.barTxt.prgMsg1 : 'Only ');\n  const {\n    0: added,\n    1: setAdded\n  } = useState(props.barTxt.prgMsg2 && props.barTxt.prgMsg2.length > 0 ? props.barTxt.prgMsg2 : ' away from free shipping');\n  const gl = props.goal;\n  useEffect(() => {\n    props.handleMsgChange({\n      prgMsg1: msg,\n      prgMsg2: added\n    });\n  }, [msg, added]);\n  return __jsx(Card.Section, {\n    condensed: true\n  }, __jsx(Stack, {\n    alignment: \"center\",\n    distribution: \"fill\"\n  }, __jsx(TextField, {\n    label: \"Progress message: \",\n    type: \"text\",\n    value: msg,\n    onChange: nw => setMsg(nw),\n    helpText: \"Displays when cart value is less than the goal\"\n  }), __jsx(\"div\", {\n    style: {\n      fontSize: '18px'\n    }\n  }, props.currency, \" \", gl - 1), __jsx(TextField, {\n    label: \" \",\n    type: \"text\",\n    value: added,\n    onChange: nw => setAdded(nw)\n  })));\n}\n\nfunction GoalAchieved(props) {\n  const {\n    0: msg,\n    1: setMsg\n  } = useState(props.barTxt.achievedMsg && props.barTxt.achievedMsg.length > 0 ? props.barTxt.achievedMsg : 'Free Shipping Worldwide');\n  useEffect(() => {\n    props.handleMsgChange({\n      achievedMsg: msg\n    });\n  }, [msg]);\n  return __jsx(Card.Section, null, __jsx(TextField, {\n    label: \"Goal Achieved Message: \",\n    type: \"text\",\n    value: msg,\n    onChange: nw => setMsg(nw),\n    helpText: \"Displays when cart value is greater than goal\"\n  }));\n}\n\nfunction AddLinkToBar(props) {\n  const {\n    0: havLink,\n    1: setHavLink\n  } = useState(props.link.url && props.link.url.length > 0 ? true : false);\n  const {\n    0: url,\n    1: setUrl\n  } = useState(havLink ? props.link.url : '');\n  const {\n    0: checkbox,\n    1: setChecked\n  } = useState(havLink && props.link.openNew ? true : false);\n  const opts = [{\n    label: 'Off',\n    value: false\n  }, {\n    label: 'On',\n    value: true\n  }];\n\n  const handleSwitch = val => {\n    val = val === 'true' ? true : false;\n    setHavLink(val);\n\n    if (!val) {\n      props.handleBarLinkChange('');\n    }\n  };\n\n  const handleCheckbox = val => {\n    setChecked(val);\n    props.handleBarLinkChange(val);\n  };\n\n  useEffect(() => {\n    setUrl(props.link.url);\n  }, [props.link.url]);\n  return __jsx(Card.Section, null, __jsx(Select, {\n    label: \"Add Link to the Bar: \",\n    options: opts,\n    onChange: handleSwitch,\n    value: havLink\n  }), havLink ? __jsx(\"div\", null, __jsx(TextField, {\n    label: \"Link URL: \",\n    type: \"url\",\n    value: url,\n    onChange: nw => {\n      setUrl(nw);\n      props.handleBarLinkChange(nw);\n    },\n    helpText: \"This address will be visited after clicking the bar\"\n  }), __jsx(Checkbox, {\n    label: \"Open the link in a NEW tab when clicked\",\n    checked: checkbox,\n    onChange: nw => handleCheckbox(nw)\n  })) : null);\n}\n\nfunction SetPosition(props) {\n  const {\n    0: isSelected,\n    1: setSelected\n  } = useState(props.barPosi && props.barPosi.length > 0 ? props.barPosi : ['push-down']);\n  const choices = [{\n    label: 'Top bar pushes down the rest of the page',\n    value: 'push-down'\n  }, //body padding-top equals to the height of the bar, position: absolute\n  {\n    label: 'Top bar pushes down the rest of the page (always visible while scrolling)',\n    value: 'push-down-visible'\n  }, // body padding-top, and position: -webkit-sticky\n  {\n    label: 'Top bar overlaps top of the page',\n    value: 'overlap'\n  }, //no padding-top for body\n  {\n    label: 'Top bar overlaps top of the page (always visible while scrolling)',\n    value: 'overlap-visible'\n  }, //no padding-top for body, and position:sticky\n  {\n    label: 'Manual placement',\n    value: 'manual',\n    renderChildren: isSelected => {\n      return isSelected && __jsx(\"div\", null, \"Place \", __jsx(TextStyle, {\n        variation: \"code\"\n      }, \"<div id=\\\"fsb_placeholder\\\"></div>\"), \" where you prefer in your theme file.\");\n    }\n  }];\n  useEffect(() => {\n    props.handleBarPosition(isSelected);\n  }, [isSelected]);\n  return __jsx(Card.Section, null, __jsx(ChoiceList, {\n    title: 'Select a Display Position: ',\n    choices: choices,\n    selected: isSelected,\n    onChange: nw => setSelected(nw)\n  }));\n}\n\nclass ContentConfigPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      frShGl: 30,\n      msgText: {\n        initialMsg1: 'Free Shipping on All Orders Over ',\n        initialMsg2: '',\n        prgMsg1: 'Only ',\n        prgMsg2: ' away from free shipping',\n        achievedMsg: 'Free Shipping Worldwide'\n      },\n      name: '',\n      sectionActive: true\n    };\n    this.handleGoalChange = this.handleGoalChange.bind(this);\n    this.handleMsgChange = this.handleMsgChange.bind(this);\n    this.handleBarLinkChange = this.handleBarLinkChange.bind(this);\n  }\n\n  handleGoalChange(newGoal) {\n    if (_parseFloat(newGoal) >= 0) {\n      this.setState(state => {\n        return {\n          frShGl: _parseFloat(newGoal)\n        };\n      }, function () {\n        this.props.handleContentConfig_goal(this.state.frShGl);\n      });\n    }\n  }\n\n  handleMsgChange(msg) {\n    this.setState(state => {\n      msg = _objectSpread({}, state.msgText, msg);\n      return {\n        msgText: msg\n      };\n    }, function () {\n      this.props.handleContentConfig_msg(this.state.msgText);\n    });\n  }\n\n  handleBarLinkChange(val) {\n    let barLinkConfig = {};\n\n    if (typeof val === 'boolean') {\n      barLinkConfig.openNew = val;\n    } else if (typeof val === 'string') {\n      barLinkConfig.url = val;\n    }\n\n    this.props.handleContentConfig_link(barLinkConfig);\n  }\n\n  render() {\n    const {\n      frShGl\n    } = this.state;\n    return __jsx(Card, {\n      Sectioned: true\n    }, __jsx(SectionHead, {\n      handleToggle: active => this.setState({\n        sectionActive: active\n      }),\n      headerTxt: \"Content configuration\",\n      sectionActive: this.state.sectionActive\n    }), __jsx(Collapsible, {\n      open: this.state.sectionActive\n    }, __jsx(FormLayout, null, __jsx(NameField, {\n      handleName: name => this.props.handleName(name),\n      name: this.props.name\n    }), __jsx(FreeShippingGoal, {\n      handleGoalChange: this.handleGoalChange,\n      goal: this.props.goal\n    }), frShGl ? __jsx(FormLayout, null, __jsx(InitialMsg, {\n      goal: frShGl,\n      currency: \"$\",\n      handleMsgChange: this.handleMsgChange,\n      barTxt: this.props.barTxt\n    }), __jsx(ProgressMsg, {\n      goal: frShGl,\n      currency: \"$\",\n      handleMsgChange: this.handleMsgChange,\n      barTxt: this.props.barTxt\n    })) : null, __jsx(GoalAchieved, {\n      handleMsgChange: this.handleMsgChange,\n      barTxt: this.props.barTxt\n    }), __jsx(AddLinkToBar, {\n      handleBarLinkChange: this.handleBarLinkChange,\n      link: this.props.link\n    }), __jsx(SetPosition, {\n      handleBarPosition: val => this.props.handleBarPosition(val),\n      barPosi: this.props.barPosi\n    }))));\n  }\n\n}\n\nexport default ContentConfigPage;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\contentConfig.js"],"names":["Card","TextField","Stack","FormLayout","Select","Checkbox","ChoiceList","Collapsible","TextStyle","useState","useCallback","useEffect","SectionHead","NameField","props","name","setName","handleName","nw","FreeShippingGoal","goal","setGoal","_handleGoalChange","newGoal","handleGoalChange","InitialMsg","msg","setMsg","barTxt","initialMsg1","length","added","setAdded","initialMsg2","handleMsgChange","fontSize","currency","ProgressMsg","prgMsg1","prgMsg2","gl","GoalAchieved","achievedMsg","AddLinkToBar","havLink","setHavLink","link","url","setUrl","checkbox","setChecked","openNew","opts","label","value","handleSwitch","val","handleBarLinkChange","handleCheckbox","SetPosition","isSelected","setSelected","barPosi","choices","renderChildren","handleBarPosition","ContentConfigPage","React","Component","constructor","state","frShGl","msgText","sectionActive","bind","setState","handleContentConfig_goal","handleContentConfig_msg","barLinkConfig","handleContentConfig_link","render","active"],"mappings":"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","sourcesContent":["import { Card, TextField, Stack, FormLayout, Select, Checkbox, ChoiceList, Collapsible, TextStyle } from '@shopify/polaris';\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport SectionHead from '../snippets/sectionHead';\r\n\r\nfunction NameField(props){\r\n  const [name,setName] = useState(props.name);\r\n\r\n  useEffect(()=>{\r\n    props.handleName(name);\r\n  },[name]);\r\n\r\n  return ( \r\n    <Card.Section>\r\n      <TextField label=\"Name: \" value={name} onChange={ (nw) => setName(nw)} />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction FreeShippingGoal(props){\r\n  const [goal,setGoal] = useState(props.goal? props.goal : 30);\r\n  const _handleGoalChange = function(newGoal){\r\n    setGoal(newGoal);\r\n    props.handleGoalChange(newGoal)\r\n  }\r\n  return (\r\n    <Card.Section>\r\n      <TextField \r\n        label=\"Free Shipping Goal: \" \r\n        type=\"number\"\r\n        value={goal} \r\n        onChange={(nw) => _handleGoalChange(nw)} \r\n      />\r\n    </Card.Section>\r\n  );\r\n}\r\n\r\nfunction InitialMsg(props){\r\n  const [msg,setMsg] = useState(props.barTxt.initialMsg1 && props.barTxt.initialMsg1.length > 0 ? props.barTxt.initialMsg1 :'Free Shipping on All Orders Over ');\r\n  const [added,setAdded] = useState(props.barTxt.initialMsg2 ? props.barTxt.initialMsg2 : '');\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({initialMsg1:msg,initialMsg2:added});\r\n  },[msg,added])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <Stack alignment=\"center\" distribution=\"fill\">\r\n        <TextField\r\n          label=\"Initial message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Display when cart is empty\"\r\n        />\r\n        <div style={{fontSize:'18px'}}>{props.currency} {props.goal}</div>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction ProgressMsg(props){\r\n  const [msg,setMsg] = useState(\r\n    props.barTxt.prgMsg1 && props.barTxt.prgMsg1.length > 0? \r\n      props.barTxt.prgMsg1 \r\n      : \r\n      'Only '\r\n    );\r\n  const [added,setAdded] = useState(\r\n    props.barTxt.prgMsg2 && props.barTxt.prgMsg2.length > 0 ? \r\n      props.barTxt.prgMsg2 \r\n      : \r\n      ' away from free shipping'\r\n    );\r\n  const gl = props.goal;\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({prgMsg1:msg,prgMsg2:added})\r\n  },[msg,added])\r\n\r\n  return (\r\n    <Card.Section condensed>\r\n      <Stack alignment=\"center\" distribution=\"fill\">\r\n        <TextField\r\n          label=\"Progress message: \"\r\n          type=\"text\"\r\n          value={msg}\r\n          onChange={(nw) => setMsg(nw)}\r\n          helpText=\"Displays when cart value is less than the goal\"\r\n        />\r\n        <div style={{fontSize:'18px'}}>{props.currency} {gl-1}</div>\r\n        <TextField \r\n          label=\" \"\r\n          type=\"text\"\r\n          value={added}\r\n          onChange={(nw) => setAdded(nw)}\r\n        />\r\n      </Stack>\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction GoalAchieved(props){\r\n  const [msg,setMsg] = useState(\r\n    props.barTxt.achievedMsg && props.barTxt.achievedMsg.length > 0 ?\r\n      props.barTxt.achievedMsg\r\n      :\r\n      'Free Shipping Worldwide'\r\n    );\r\n\r\n  useEffect(()=>{\r\n    props.handleMsgChange({achievedMsg:msg})\r\n  },[msg])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <TextField\r\n        label=\"Goal Achieved Message: \"\r\n        type=\"text\"\r\n        value={msg}\r\n        onChange={(nw) => setMsg(nw)}\r\n        helpText=\"Displays when cart value is greater than goal\"\r\n      />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction AddLinkToBar(props){\r\n  const [havLink,setHavLink] = useState(\r\n    props.link.url && props.link.url.length > 0 ?\r\n      true\r\n      :\r\n      false);\r\n  const [url,setUrl] = useState(havLink? props.link.url : '');\r\n  const [checkbox,setChecked] = useState(havLink && props.link.openNew? true : false);\r\n\r\n  const opts=[\r\n    {label:'Off',value:false},\r\n    {label:'On',value:true}\r\n  ]\r\n\r\n  const handleSwitch = (val) => {\r\n    val = val === 'true'? true : false;\r\n    setHavLink(val);\r\n    if(!val){\r\n      props.handleBarLinkChange('');\r\n    }\r\n  }\r\n\r\n  const handleCheckbox = (val) => {\r\n    setChecked(val);\r\n    props.handleBarLinkChange(val);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setUrl(props.link.url);\r\n  },[props.link.url])\r\n\r\n  return(\r\n    <Card.Section>\r\n      <Select \r\n        label=\"Add Link to the Bar: \"\r\n        options={opts}\r\n        onChange={handleSwitch}\r\n        value={havLink}\r\n      />\r\n      {\r\n        havLink?\r\n        <div>\r\n          <TextField\r\n            label=\"Link URL: \"\r\n            type=\"url\"\r\n            value={url}\r\n            onChange={(nw) => {setUrl(nw); props.handleBarLinkChange(nw);}}\r\n            helpText=\"This address will be visited after clicking the bar\"\r\n          />\r\n          <Checkbox \r\n            label=\"Open the link in a NEW tab when clicked\"\r\n            checked={checkbox}\r\n            onChange={(nw) => handleCheckbox(nw)}\r\n          />\r\n        </div>\r\n        :\r\n        null\r\n      }\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nfunction SetPosition(props){\r\n  const [isSelected,setSelected] = useState(\r\n    props.barPosi && props.barPosi.length > 0?\r\n      props.barPosi\r\n      :  \r\n      ['push-down']\r\n    );\r\n\r\n  const choices = [\r\n    {label:'Top bar pushes down the rest of the page',value:'push-down'}, //body padding-top equals to the height of the bar, position: absolute\r\n    {label:'Top bar pushes down the rest of the page (always visible while scrolling)', value:'push-down-visible'}, // body padding-top, and position: -webkit-sticky\r\n    {label:'Top bar overlaps top of the page',value:'overlap'}, //no padding-top for body\r\n    {label:'Top bar overlaps top of the page (always visible while scrolling)',value:'overlap-visible'}, //no padding-top for body, and position:sticky\r\n    {\r\n      label:'Manual placement',\r\n      value:'manual',\r\n      renderChildren:(isSelected)=>{\r\n        return (\r\n          isSelected && (\r\n            <div>Place <TextStyle variation=\"code\">&lt;div id=\"fsb_placeholder\"&gt;&lt;/div&gt;</TextStyle> where you prefer in your theme file.</div>\r\n          )\r\n        )\r\n      }}\r\n  ];\r\n\r\n  useEffect(()=>{\r\n    props.handleBarPosition(isSelected);\r\n  },[isSelected])\r\n\r\n  return (\r\n    <Card.Section>\r\n      <ChoiceList \r\n        title={'Select a Display Position: '}\r\n        choices={choices}\r\n        selected={isSelected}\r\n        onChange={(nw) => setSelected(nw)}\r\n      />\r\n    </Card.Section>\r\n  )\r\n}\r\n\r\nclass ContentConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      frShGl:30,\r\n      msgText:{\r\n        initialMsg1:'Free Shipping on All Orders Over ',\r\n        initialMsg2:'',\r\n        prgMsg1:'Only ',\r\n        prgMsg2:' away from free shipping',\r\n        achievedMsg:'Free Shipping Worldwide'\r\n      },\r\n      name:'',\r\n      sectionActive:true\r\n    }\r\n    this.handleGoalChange = this.handleGoalChange.bind(this);\r\n    this.handleMsgChange = this.handleMsgChange.bind(this);\r\n    this.handleBarLinkChange = this.handleBarLinkChange.bind(this);\r\n  }\r\n\r\n\r\n  handleGoalChange(newGoal){\r\n    if(parseFloat(newGoal) >= 0){\r\n      this.setState((state) => {\r\n        return {frShGl:parseFloat(newGoal)}\r\n      },function(){\r\n        this.props.handleContentConfig_goal(this.state.frShGl);\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  handleMsgChange(msg){\r\n    this.setState((state)=>{\r\n      msg = {...state.msgText,...msg};\r\n      return {msgText:msg}\r\n    },function(){\r\n      this.props.handleContentConfig_msg(this.state.msgText)\r\n    });\r\n  };\r\n\r\n  handleBarLinkChange(val){\r\n    let barLinkConfig = {};\r\n    if(typeof val === 'boolean'){\r\n      barLinkConfig.openNew = val;\r\n    }else if(typeof val === 'string'){\r\n      barLinkConfig.url = val;\r\n    }\r\n    this.props.handleContentConfig_link(barLinkConfig);\r\n  }\r\n\r\n  render(){\r\n    const {frShGl} = this.state;\r\n    return (\r\n      <Card Sectioned> \r\n        <SectionHead \r\n          handleToggle={(active) => this.setState({sectionActive:active})}\r\n          headerTxt='Content configuration'\r\n          sectionActive={this.state.sectionActive}\r\n        />\r\n        <Collapsible open={this.state.sectionActive} >\r\n          <FormLayout>\r\n            <NameField \r\n              handleName={(name)=> this.props.handleName(name)}\r\n              name={this.props.name}\r\n            />\r\n            <FreeShippingGoal \r\n              handleGoalChange={this.handleGoalChange}\r\n              goal={this.props.goal}\r\n            />\r\n            { frShGl? \r\n              <FormLayout>\r\n                <InitialMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange} barTxt={this.props.barTxt}/>\r\n                <ProgressMsg goal={frShGl} currency=\"$\" handleMsgChange={this.handleMsgChange}  barTxt={this.props.barTxt}/>\r\n              </FormLayout>\r\n              :\r\n              null\r\n            }\r\n            <GoalAchieved handleMsgChange={this.handleMsgChange}  barTxt={this.props.barTxt} />\r\n            <AddLinkToBar handleBarLinkChange={this.handleBarLinkChange} link={this.props.link}/>\r\n            <SetPosition handleBarPosition={(val)=>this.props.handleBarPosition(val)} barPosi={this.props.barPosi}/>\r\n          </FormLayout>\r\n        </Collapsible>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContentConfigPage;"]},"metadata":{},"sourceType":"module"}