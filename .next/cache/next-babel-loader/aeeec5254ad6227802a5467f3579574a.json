{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar PreviewBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PreviewBar, _React$Component);\n\n  function PreviewBar(props) {\n    var _this;\n\n    _classCallCheck(this, PreviewBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PreviewBar).call(this, props));\n    _this.state = {\n      animReq: null\n    };\n    _this.htmlRef = React.createRef();\n    _this.injectHtml = _this.injectHtml.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PreviewBar, [{\n    key: \"requestAnimation\",\n    value: function (_requestAnimation) {\n      function requestAnimation(_x) {\n        return _requestAnimation.apply(this, arguments);\n      }\n\n      requestAnimation.toString = function () {\n        return _requestAnimation.toString();\n      };\n\n      return requestAnimation;\n    }(function (el) {\n      animReq = requestAnimationFrame(requestAnimation);\n      var times = 3000 * 60;\n      var dis = el.clientHeight / times; // moves up per second\n\n      el.style.transform = \"translateY(-\".concat(dis, \"px)\");\n      var animKeyframe = \"\\n     @keyframes infiniteSlide{\\n        from {\\n          transform: translateY(0)\\n        }\\n        to {\\n          transform: translateY(-50%)\\n        }\\n     }\\n    \";\n    })\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var injectedHtmlElCollection = this.htmlRef.current.children; // object\n\n      for (var n = 0; n < injectedHtmlElCollection.length; n++) {\n        var el = injectedHtmlElCollection[n];\n\n        if (el.classList.contains('link-container')) {\n          el.setAttribute(\"style\", \"height:22px;overflow:hidden\");\n\n          if (el.children[0].tagName === 'UL') {\n            var ul = el.children[0];\n            var animKeyframe = \"\\n            @keyframes infiniteSlide{\\n                from {\\n                  transform: translateY(0)\\n                }\\n                to {\\n                  transform: translateY(-50%)\\n                }\\n            }\\n          \";\n            var animKeyFrame = React.createElement('style', {}, animKeyframe);\n            var keyframeEl = document.createElement('style');\n            keyframeEl.textContent = \"\\n            @keyframes infiniteSlide{\\n                from {\\n                  transform: translateY(0)\\n                }\\n                to {\\n                  transform: translateY(-50%)\\n                }\\n            }\\n          \";\n            console.log(animKeyFrame); // ul.insertAdjacentElement('afterbegin',animKeyFrame);\n\n            ul.setAttribute(\"style\", \"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s\");\n            console.log(ul.clientHeight); // ul.style.transform=`translateY(-${ul.clientHeight / 2}px)`;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log('component updated');\n    }\n  }, {\n    key: \"injectHtml\",\n    value: function injectHtml(html) {\n      var contExp = /link\\-container/;\n      var havCont = contExp.test(html);\n\n      if (havCont) {}\n\n      console.log('injected');\n      return __jsx(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: html\n        },\n        ref: this.htmlRef\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$barConfig = this.props.barConfig,\n          bgColor = _this$props$barConfig.bgColor,\n          ftColor = _this$props$barConfig.ftColor;\n      return __jsx(\"div\", {\n        style: {\n          margin: '20px 0'\n        }\n      }, __jsx(\"div\", {\n        style: {\n          padding: '8px 0',\n          position: 'relative',\n          backgroundColor: bgColor,\n          color: ftColor\n        }\n      }, this.props.barConfig.goal ? this.props.barConfig.inpTxt + '$' + this.props.barConfig.goal : this.props.barConfig.inpTxt, this.props.barConfig.addedHtml ? this.injectHtml(this.props.barConfig.addedHtml) : null, __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '8px',\n          right: '8px'\n        }\n      }, \"X\")));\n    }\n  }]);\n\n  return PreviewBar;\n}(React.Component);\n\nexport default PreviewBar;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\previewBar.js"],"names":["PreviewBar","props","state","animReq","htmlRef","React","createRef","injectHtml","bind","el","requestAnimationFrame","requestAnimation","times","dis","clientHeight","style","transform","animKeyframe","injectedHtmlElCollection","current","children","n","length","classList","contains","setAttribute","tagName","ul","animKeyFrame","createElement","keyframeEl","document","textContent","console","log","html","contExp","havCont","test","__html","barConfig","bgColor","ftColor","margin","padding","position","backgroundColor","color","goal","inpTxt","addedHtml","top","right","Component"],"mappings":"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","sourcesContent":["\r\nclass PreviewBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {animReq:null};\r\n    this.htmlRef = React.createRef();\r\n    this.injectHtml = this.injectHtml.bind(this);\r\n  }\r\n\r\n  requestAnimation(el){\r\n    animReq = requestAnimationFrame(requestAnimation);\r\n    let times = 3000*60;\r\n    let dis = el.clientHeight/times; // moves up per second\r\n    el.style.transform = `translateY(-${dis}px)`;\r\n\r\n    let animKeyframe = `\r\n     @keyframes infiniteSlide{\r\n        from {\r\n          transform: translateY(0)\r\n        }\r\n        to {\r\n          transform: translateY(-50%)\r\n        }\r\n     }\r\n    `\r\n  }\r\n\r\n  componentDidMount(){\r\n    let injectedHtmlElCollection = this.htmlRef.current.children; // object\r\n    for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n      let el = injectedHtmlElCollection[n];\r\n      if(el.classList.contains('link-container')){\r\n        el.setAttribute(\"style\",\"height:22px;overflow:hidden\");\r\n        if(el.children[0].tagName==='UL'){\r\n          let ul = el.children[0];\r\n          let animKeyframe = `\r\n            @keyframes infiniteSlide{\r\n                from {\r\n                  transform: translateY(0)\r\n                }\r\n                to {\r\n                  transform: translateY(-50%)\r\n                }\r\n            }\r\n          `;\r\n          let animKeyFrame = React.createElement('style',{},animKeyframe);\r\n          let keyframeEl = document.createElement('style');\r\n          keyframeEl.textContent = `\r\n            @keyframes infiniteSlide{\r\n                from {\r\n                  transform: translateY(0)\r\n                }\r\n                to {\r\n                  transform: translateY(-50%)\r\n                }\r\n            }\r\n          `;\r\n          console.log(animKeyFrame)\r\n          // ul.insertAdjacentElement('afterbegin',animKeyFrame);\r\n          ul.setAttribute(\"style\",\"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s\")\r\n          console.log(ul.clientHeight)\r\n          // ul.style.transform=`translateY(-${ul.clientHeight / 2}px)`;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log('component updated')\r\n  }\r\n\r\n  injectHtml(html){\r\n    let contExp = /link\\-container/;\r\n    let havCont = contExp.test(html);\r\n    if(havCont){\r\n\r\n    }\r\n    console.log('injected')\r\n    return (\r\n      <div dangerouslySetInnerHTML={{__html:html}} ref={this.htmlRef}></div>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    const {bgColor, ftColor } = this.props.barConfig;\r\n    return (\r\n      <div style={{margin:'20px 0'}}>\r\n        <div style={{padding:'8px 0',position:'relative',backgroundColor:bgColor,color:ftColor}}>\r\n          { this.props.barConfig.goal?\r\n            this.props.barConfig.inpTxt + '$' + this.props.barConfig.goal\r\n            :\r\n            this.props.barConfig.inpTxt\r\n          }\r\n          {/* #question: how to turn user input into raw html */}\r\n          { this.props.barConfig.addedHtml?\r\n              this.injectHtml(this.props.barConfig.addedHtml) \r\n              :\r\n              null\r\n          }\r\n          <div style={{position:'absolute',top:'8px',right:'8px'}}>X</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewBar;"]},"metadata":{},"sourceType":"module"}