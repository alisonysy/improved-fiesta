{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { DropZone, Banner, Stack, List, Thumbnail, Caption } from '@shopify/polaris';\n\nvar ImageDropZone =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageDropZone, _React$Component);\n\n  function ImageDropZone(props) {\n    var _this;\n\n    _classCallCheck(this, ImageDropZone);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageDropZone).call(this, props));\n    _this.state = {\n      files: [],\n      rejectedFiles: [],\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ImageDropZone, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          files = _this$state.files,\n          hasError = _this$state.hasError,\n          rejectedFiles = _this$state.rejectedFiles;\n\n      var fileUpload = !files.length && __jsx(DropZone.FileUpload, null);\n\n      var uploadedFiles = files.length > 0 && __jsx(Stack, {\n        vertical: true\n      }, files.map(function (file, index) {\n        return __jsx(Stack, {\n          alignment: \"center\",\n          key: index\n        }, __jsx(Thumbnail, {\n          size: \"small\",\n          alt: file.name,\n          source: window.URL.createObjectURL(file)\n        }), __jsx(\"div\", null, file.name, \" \", __jsx(Caption, null, file.size, \" bytes\")));\n      }));\n\n      var errorMessage = hasError && __jsx(Banner, {\n        title: \"The following images couldn\\u2019t be uploaded:\",\n        status: \"critical\"\n      }, __jsx(List, {\n        type: \"bullet\"\n      }, rejectedFiles.map(function (file, index) {\n        return __jsx(List.Item, {\n          key: index\n        }, \"\\\"\".concat(file.name, \"\\\" is not supported. File type must be .gif, .jpg, .png or .svg.\"));\n      })));\n\n      return __jsx(Stack, {\n        vertical: true\n      }, errorMessage, __jsx(DropZone, {\n        accept: \"image/*\",\n        type: \"image\",\n        onDrop: function onDrop(files, acceptedFiles, rejectedFiles) {\n          _this2.setState({\n            files: [].concat(_toConsumableArray(_this2.state.files), _toConsumableArray(acceptedFiles)),\n            rejectedFiles: rejectedFiles,\n            hasError: rejectedFiles.length > 0\n          });\n        },\n        label: \"Click the drop zone to continue uploading more images: \"\n      }, uploadedFiles, fileUpload));\n    }\n  }]);\n\n  return ImageDropZone;\n}(React.Component);\n\nexport default ImageDropZone;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\imageDropZone.js"],"names":["DropZone","Banner","Stack","List","Thumbnail","Caption","ImageDropZone","props","state","files","rejectedFiles","hasError","fileUpload","length","uploadedFiles","map","file","index","name","window","URL","createObjectURL","size","errorMessage","acceptedFiles","setState","React","Component"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,SAAxC,EAAmDC,OAAnD,QAAkE,kBAAlE;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFgB;AAOjB;;;;6BAEO;AAAA;;AAAA,wBACmC,KAAKH,KADxC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQE,QADR,eACQA,QADR;AAAA,UACkBD,aADlB,eACkBA,aADlB;;AAGN,UAAME,UAAU,GAAG,CAACH,KAAK,CAACI,MAAP,IAAiB,MAAC,QAAD,CAAU,UAAV,OAApC;;AACA,UAAMC,aAAa,GAAGL,KAAK,CAACI,MAAN,GAAe,CAAf,IACpB,MAAC,KAAD;AAAO,QAAA,QAAQ;AAAf,SACGJ,KAAK,CAACM,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,eACT,MAAC,KAAD;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,GAAG,EAAEA;AAA/B,WACE,MAAC,SAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,GAAG,EAAED,IAAI,CAACE,IAFZ;AAGE,UAAA,MAAM,EAAEC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BL,IAA3B;AAHV,UADF,EAME,mBACGA,IAAI,CAACE,IADR,OACc,MAAC,OAAD,QAAUF,IAAI,CAACM,IAAf,WADd,CANF,CADS;AAAA,OAAV,CADH,CADF;;AAiBA,UAAMC,YAAY,GAAGZ,QAAQ,IAC3B,MAAC,MAAD;AACE,QAAA,KAAK,EAAC,iDADR;AAEE,QAAA,MAAM,EAAC;AAFT,SAIE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,SACGD,aAAa,CAACK,GAAd,CAAkB,UAACC,IAAD,EAAOC,KAAP;AAAA,eACjB,MAAC,IAAD,CAAM,IAAN;AAAW,UAAA,GAAG,EAAEA;AAAhB,uBACOD,IAAI,CAACE,IADZ,sEADiB;AAAA,OAAlB,CADH,CAJF,CADF;;AAeA,aACE,MAAC,KAAD;AAAO,QAAA,QAAQ;AAAf,SACGK,YADH,EAEE,MAAC,QAAD;AACE,QAAA,MAAM,EAAC,SADT;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,MAAM,EAAE,gBAACd,KAAD,EAAQe,aAAR,EAAuBd,aAAvB,EAAyC;AAC/C,UAAA,MAAI,CAACe,QAAL,CAAc;AACZhB,YAAAA,KAAK,+BAAM,MAAI,CAACD,KAAL,CAAWC,KAAjB,sBAA2Be,aAA3B,EADO;AAEZd,YAAAA,aAAa,EAAEA,aAFH;AAGZC,YAAAA,QAAQ,EAAED,aAAa,CAACG,MAAd,GAAuB;AAHrB,WAAd;AAKD,SATH;AAUE,QAAA,KAAK,EAAC;AAVR,SAYGC,aAZH,EAaGF,UAbH,CAFF,CADF;AAoBD;;;;EAlEyBc,KAAK,CAACC,S;;AAqElC,eAAerB,aAAf","sourcesContent":["import { DropZone, Banner, Stack, List, Thumbnail, Caption } from '@shopify/polaris';\r\n\r\nclass ImageDropZone extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      files: [],\r\n      rejectedFiles: [],\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {files, hasError, rejectedFiles} = this.state;\r\n\r\n    const fileUpload = !files.length && <DropZone.FileUpload />;\r\n    const uploadedFiles = files.length > 0 && (\r\n      <Stack vertical>\r\n        {files.map((file, index) => (\r\n          <Stack alignment=\"center\" key={index}>\r\n            <Thumbnail\r\n              size=\"small\"\r\n              alt={file.name}\r\n              source={window.URL.createObjectURL(file)}\r\n            />\r\n            <div>\r\n              {file.name} <Caption>{file.size} bytes</Caption>\r\n            </div>\r\n          </Stack>\r\n        ))}\r\n      </Stack>\r\n    );\r\n\r\n    const errorMessage = hasError && (\r\n      <Banner\r\n        title=\"The following images couldnâ€™t be uploaded:\"\r\n        status=\"critical\"\r\n      >\r\n        <List type=\"bullet\">\r\n          {rejectedFiles.map((file, index) => (\r\n            <List.Item key={index}>\r\n              {`\"${file.name}\" is not supported. File type must be .gif, .jpg, .png or .svg.`}\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n      </Banner>\r\n    );\r\n\r\n    return (\r\n      <Stack vertical>\r\n        {errorMessage}\r\n        <DropZone\r\n          accept=\"image/*\"\r\n          type=\"image\"\r\n          onDrop={(files, acceptedFiles, rejectedFiles) => {\r\n            this.setState({\r\n              files: [...this.state.files, ...acceptedFiles],\r\n              rejectedFiles: rejectedFiles,\r\n              hasError: rejectedFiles.length > 0,\r\n            });\r\n          }}\r\n          label=\"Click the drop zone to continue uploading more images: \"\r\n        >\r\n          {uploadedFiles}\r\n          {fileUpload}\r\n        </DropZone>\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageDropZone;"]},"metadata":{},"sourceType":"module"}