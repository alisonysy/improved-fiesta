{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport '../css/fonts.css';\nimport '../css/';\n\nvar PreviewBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PreviewBar, _React$Component);\n\n  function PreviewBar(props) {\n    var _this;\n\n    _classCallCheck(this, PreviewBar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PreviewBar).call(this, props));\n    _this.state = {};\n    _this.htmlRef = React.createRef();\n    _this.firstLineRefwG = React.createRef();\n    _this.firstLineRefGA = React.createRef();\n    _this.closeBtn = React.createRef();\n    _this.topBar = React.createRef();\n    _this.injectHtml = _this.injectHtml.bind(_assertThisInitialized(_this));\n    _this.setAnimation = _this.setAnimation.bind(_assertThisInitialized(_this));\n    _this.renderBarFirstLine = _this.renderBarFirstLine.bind(_assertThisInitialized(_this));\n    _this.renderInnerBar = _this.renderInnerBar.bind(_assertThisInitialized(_this));\n    _this.handleLinkContainer = _this.handleLinkContainer.bind(_assertThisInitialized(_this));\n    _this._hexToRgba = _this._hexToRgba.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PreviewBar, [{\n    key: \"setAnimation\",\n    value: function setAnimation(el, childToQuery) {\n      var keyframeEl = document.createElement('style');\n      keyframeEl.textContent = \"\\n      @keyframes infiniteSlide{\\n          from {\\n            margin-top:0\\n          }\\n          to {\\n            margin-top: -22px\\n          }\\n      }\\n    \";\n      el.insertAdjacentElement('afterbegin', keyframeEl);\n      el.setAttribute('style', \"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s;\");\n      el.addEventListener('animationend', function () {\n        el.style.animation = '';\n        void el.offsetWidth;\n        var elNode = el.children[0].parentNode;\n        var firstChild = elNode.querySelector(childToQuery);\n        var clonedFirstChild = firstChild.cloneNode(true);\n        elNode.insertAdjacentElement('beforeend', clonedFirstChild);\n        elNode.removeChild(firstChild);\n        el.style.animation = 'infiniteSlide 2.5s';\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // handle injected html\n      this.handleLinkContainer(this.htmlRef);\n      this.handleLinkContainer(this.firstLineRefwG);\n      this.handleLinkContainer(this.firstLineRefGA); // handle closing action\n\n      var closeBtn = this.closeBtn.current;\n      closeBtn.addEventListener('click', function (e) {// #todo add script when appending to page to hide the bar element\n      });\n    }\n  }, {\n    key: \"handleLinkContainer\",\n    value: function handleLinkContainer(sp) {\n      if (sp.current) {\n        var injectedHtmlElCollection = sp.current.children; // object\n\n        for (var n = 0; n < injectedHtmlElCollection.length; n++) {\n          var el = injectedHtmlElCollection[n];\n\n          if (el.classList.contains('link-container')) {\n            el.setAttribute(\"style\", \"height:22px;overflow:hidden;line-height:22px;\");\n\n            if (el.children[0] && el.children[0].tagName === 'UL') {\n              var ul = el.children[0];\n              ul.setAttribute('style', \"margin:0;\");\n\n              if (ul.children[1]) {\n                this.setAnimation(ul, 'li');\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.handleLinkContainer(this.htmlRef);\n      this.handleLinkContainer(this.firstLineRefwG);\n      this.handleLinkContainer(this.firstLineRefGA);\n      console.log('finished top bar', this.topBar.current); // this.props.parseCssString(this.props.customCode);\n    }\n  }, {\n    key: \"injectHtml\",\n    value: function injectHtml(html) {\n      var style_basic = {\n        textAlign: 'center'\n      };\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: html\n        },\n        ref: this.htmlRef,\n        style: style_basic\n      });\n    }\n  }, {\n    key: \"renderBarFirstLine\",\n    value: function renderBarFirstLine(barConfig) {\n      var goal = barConfig.goal,\n          inpTxt = barConfig.inpTxt,\n          spColor = barConfig.spColor;\n      return __jsx(\"span\", null, __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: inpTxt\n        },\n        ref: this.firstLineRefwG\n      }), __jsx(\"span\", {\n        style: {\n          color: spColor,\n          fontWeight: 400\n        }\n      }, \"$\", goal));\n    }\n  }, {\n    key: \"renderInnerBar\",\n    value: function renderInnerBar(barConfig) {\n      var inpTxt = barConfig.inpTxt,\n          addedHtml = barConfig.addedHtml,\n          ftColor = barConfig.ftColor,\n          goal = barConfig.goal,\n          opacity = barConfig.opacity,\n          bgImg = barConfig.bgImg,\n          fontFamily = barConfig.fontFamily,\n          paddingUpDown = barConfig.paddingUpDown,\n          fontSize = barConfig.fontSize;\n      var bgColor = barConfig.bgColor,\n          imgSize = bgImg.size,\n          imgUrl;\n      var padding = paddingUpDown ? \"\".concat(paddingUpDown, \"px 5px\") : '8px 5px';\n\n      if (opacity.toString() !== '100') {\n        bgColor = this._hexToRgba(bgColor, opacity);\n      }\n\n      if (imgSize) {\n        imgUrl = 'url(\"' + window.URL.createObjectURL(bgImg) + '\")';\n      }\n\n      var barStyle = {\n        padding: padding,\n        fontSize: fontSize ? fontSize + 'px' : '18px',\n        lineHeight: '22.5px',\n        textAlign: 'center',\n        position: 'relative',\n        backgroundColor: bgColor,\n        color: ftColor,\n        backgroundImage: imgUrl,\n        fontFamily: fontFamily\n      }; // overriding old style works!\n\n      var inputStyle = {};\n      return __jsx(\"div\", {\n        style: _objectSpread({}, barStyle, inputStyle),\n        id: \"ptk_bar\"\n      }, goal ? this.renderBarFirstLine(barConfig) : __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: inpTxt\n        },\n        ref: this.firstLineRefGA\n      }), addedHtml ? this.injectHtml(addedHtml) : null, __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          cursor: 'pointer'\n        },\n        ref: this.closeBtn\n      }, \"X\"));\n    }\n  }, {\n    key: \"_hexToRgba\",\n    value: function _hexToRgba(h, op) {\n      var r = 0,\n          g = 0,\n          b = 0; // 3 digits\n\n      if (h.length == 4) {\n        r = \"0x\" + h[1] + h[1];\n        g = \"0x\" + h[2] + h[2];\n        b = \"0x\" + h[3] + h[3]; // 6 digits\n      } else if (h.length == 7) {\n        r = \"0x\" + h[1] + h[2];\n        g = \"0x\" + h[3] + h[4];\n        b = \"0x\" + h[5] + h[6];\n      }\n\n      return \"rgba(\" + +r + \",\" + +g + \",\" + +b + \",\" + op / 100 + \")\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        style: {\n          margin: '20px 0'\n        }\n      }, __jsx(\"div\", {\n        ref: this.topBar\n      }, this.props.barLink.url.length !== 0 ? __jsx(\"a\", {\n        href: this.props.barLink.url,\n        target: this.props.barLink.openNew ? \"_blank\" : \"_self\",\n        style: {\n          textDecoration: 'none',\n          color: 'initial'\n        }\n      }, this.renderInnerBar(this.props.barConfig)) : this.renderInnerBar(this.props.barConfig)));\n    }\n  }]);\n\n  return PreviewBar;\n}(React.Component);\n\nexport default PreviewBar;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\previewBar.js"],"names":["PreviewBar","props","state","htmlRef","React","createRef","firstLineRefwG","firstLineRefGA","closeBtn","topBar","injectHtml","bind","setAnimation","renderBarFirstLine","renderInnerBar","handleLinkContainer","_hexToRgba","el","childToQuery","keyframeEl","document","createElement","textContent","insertAdjacentElement","setAttribute","addEventListener","style","animation","offsetWidth","elNode","children","parentNode","firstChild","querySelector","clonedFirstChild","cloneNode","removeChild","current","e","sp","injectedHtmlElCollection","n","length","classList","contains","tagName","ul","console","log","html","style_basic","textAlign","__html","barConfig","goal","inpTxt","spColor","color","fontWeight","addedHtml","ftColor","opacity","bgImg","fontFamily","paddingUpDown","fontSize","bgColor","imgSize","size","imgUrl","padding","toString","window","URL","createObjectURL","barStyle","lineHeight","position","backgroundColor","backgroundImage","inputStyle","top","right","cursor","h","op","r","g","b","margin","barLink","url","openNew","textDecoration","Component"],"mappings":"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","sourcesContent":["import '../css/fonts.css';\r\nimport '../css/';\r\n\r\nclass PreviewBar extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    };\r\n    this.htmlRef = React.createRef();\r\n    this.firstLineRefwG = React.createRef();\r\n    this.firstLineRefGA = React.createRef();\r\n    this.closeBtn = React.createRef();\r\n    this.topBar = React.createRef();\r\n    this.injectHtml = this.injectHtml.bind(this);\r\n    this.setAnimation = this.setAnimation.bind(this);\r\n    this.renderBarFirstLine = this.renderBarFirstLine.bind(this);\r\n    this.renderInnerBar = this.renderInnerBar.bind(this);\r\n    this.handleLinkContainer = this.handleLinkContainer.bind(this);\r\n    this._hexToRgba = this._hexToRgba.bind(this);\r\n  }\r\n\r\n  setAnimation(el,childToQuery){\r\n    let keyframeEl = document.createElement('style');\r\n    keyframeEl.textContent = `\r\n      @keyframes infiniteSlide{\r\n          from {\r\n            margin-top:0\r\n          }\r\n          to {\r\n            margin-top: -22px\r\n          }\r\n      }\r\n    `;\r\n    el.insertAdjacentElement('afterbegin',keyframeEl);\r\n    el.setAttribute('style',\"padding:0;margin:0;list-style:none;transition:all 2.5s;animation:infiniteSlide 2.5s;\");\r\n    el.addEventListener('animationend',function(){\r\n      el.style.animation = '';\r\n      void el.offsetWidth;\r\n      let elNode = el.children[0].parentNode;\r\n      let firstChild = elNode.querySelector(childToQuery);\r\n      let clonedFirstChild = firstChild.cloneNode(true);\r\n      elNode.insertAdjacentElement('beforeend',clonedFirstChild);\r\n      elNode.removeChild(firstChild);\r\n      el.style.animation = 'infiniteSlide 2.5s';\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    // handle injected html\r\n    this.handleLinkContainer(this.htmlRef);\r\n    this.handleLinkContainer(this.firstLineRefwG);\r\n    this.handleLinkContainer(this.firstLineRefGA);\r\n    \r\n    // handle closing action\r\n    let closeBtn = this.closeBtn.current;\r\n    closeBtn.addEventListener('click',(e)=>{\r\n      // #todo add script when appending to page to hide the bar element\r\n    })\r\n  }\r\n\r\n  handleLinkContainer(sp){\r\n    if(sp.current){\r\n      let injectedHtmlElCollection = sp.current.children; // object\r\n      for(let n=0;n<injectedHtmlElCollection.length;n++){\r\n        let el = injectedHtmlElCollection[n];\r\n        if(el.classList.contains('link-container')){\r\n          el.setAttribute(\"style\",\"height:22px;overflow:hidden;line-height:22px;\");\r\n          if(el.children[0] && el.children[0].tagName==='UL'){\r\n            let ul = el.children[0];\r\n            ul.setAttribute('style',\"margin:0;\");\r\n            if(ul.children[1]){\r\n              this.setAnimation(ul,'li');\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.handleLinkContainer(this.htmlRef);\r\n    this.handleLinkContainer(this.firstLineRefwG);\r\n    this.handleLinkContainer(this.firstLineRefGA);\r\n    console.log('finished top bar',this.topBar.current);\r\n    // this.props.parseCssString(this.props.customCode);\r\n  }\r\n\r\n\r\n  injectHtml(html){\r\n    let style_basic = {textAlign:'center'};\r\n    return (\r\n      <span dangerouslySetInnerHTML={{__html:html}} ref={this.htmlRef} style={style_basic}></span>\r\n    )\r\n  }\r\n\r\n  renderBarFirstLine(barConfig){\r\n    const {goal,inpTxt,spColor} = barConfig;\r\n    return (\r\n      <span><span dangerouslySetInnerHTML={{__html:inpTxt}} ref={this.firstLineRefwG}></span><span style={{color:spColor,fontWeight:400}}>${goal}</span></span>\r\n    )\r\n  }\r\n\r\n  renderInnerBar(barConfig){\r\n    const {inpTxt,addedHtml,ftColor,goal,opacity,bgImg,fontFamily,paddingUpDown,fontSize} = barConfig;\r\n    let {bgColor} = barConfig,imgSize=bgImg.size,imgUrl;\r\n    let padding = paddingUpDown? `${paddingUpDown}px 5px` : '8px 5px';\r\n\r\n    if(opacity.toString() !== '100'){\r\n      bgColor = this._hexToRgba(bgColor,opacity);\r\n    }\r\n    \r\n    if(imgSize){\r\n      imgUrl = 'url(\"'+window.URL.createObjectURL(bgImg)+'\")';\r\n    }\r\n\r\n    let barStyle = {padding:padding,fontSize:fontSize? fontSize+'px' : '18px',lineHeight:'22.5px',textAlign:'center',position:'relative',backgroundColor:bgColor,color:ftColor,backgroundImage:imgUrl,fontFamily:fontFamily};\r\n    // overriding old style works!\r\n    let inputStyle = {}\r\n    return (\r\n      <div \r\n        style={{...barStyle,...inputStyle}}\r\n        id=\"ptk_bar\"\r\n      >\r\n        { goal?\r\n          this.renderBarFirstLine(barConfig)\r\n          :\r\n          <span dangerouslySetInnerHTML={{__html:inpTxt}} ref={this.firstLineRefGA}></span>\r\n        }\r\n        { addedHtml?\r\n            this.injectHtml(addedHtml) \r\n            :\r\n            null\r\n        }\r\n        <div style={{position:'absolute',top:'8px',right:'8px',cursor:'pointer'}} ref={this.closeBtn}>X</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _hexToRgba(h,op){\r\n    let r = 0, g = 0, b = 0;\r\n\r\n    // 3 digits\r\n    if (h.length == 4) {\r\n      r = \"0x\" + h[1] + h[1];\r\n      g = \"0x\" + h[2] + h[2];\r\n      b = \"0x\" + h[3] + h[3];\r\n\r\n    // 6 digits\r\n    } else if (h.length == 7) {\r\n      r = \"0x\" + h[1] + h[2];\r\n      g = \"0x\" + h[3] + h[4];\r\n      b = \"0x\" + h[5] + h[6];\r\n    }\r\n    \r\n    return \"rgba(\"+ +r + \",\" + +g + \",\" + +b + \",\" + op/100 + \")\";\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div style={{margin:'20px 0'}}>\r\n        <div ref={this.topBar}>\r\n          { this.props.barLink.url.length !== 0 ?\r\n            <a href={this.props.barLink.url} target={this.props.barLink.openNew? \"_blank\" : \"_self\"} style={{textDecoration:'none',color:'initial'}}>\r\n              { this.renderInnerBar(this.props.barConfig) }\r\n            </a>\r\n            :\r\n            this.renderInnerBar(this.props.barConfig)\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PreviewBar;"]},"metadata":{},"sourceType":"module"}