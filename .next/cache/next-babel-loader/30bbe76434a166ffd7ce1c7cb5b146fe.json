{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, DatePicker, ChoiceList } from '@shopify/polaris';\nimport { useCallback, useState, useEffect } from 'react';\n\nfunction Choose(props) {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(['always']);\n  const handleChange = useCallback(value => setSelected(value), []);\n  const renderDatePicker = useCallback(isSelected => isSelected && __jsx(Schedule, null));\n  return __jsx(ChoiceList, {\n    choices: [{\n      label: 'Always display',\n      value: 'always'\n    }, {\n      label: 'Only display within the giving period of time',\n      value: 'scheduled',\n      renderChildren: renderDatePicker\n    }],\n    selected: selected,\n    onChange: handleChange\n  });\n}\n\n;\n\nfunction Schedule(props) {\n  const {\n    0: {\n      month,\n      year\n    },\n    1: setDate\n  } = useState({\n    month: 9,\n    year: 2019\n  });\n  const {\n    0: selectedDates,\n    1: setSelectedDates\n  } = useState({\n    start: new Date(),\n    end: new Date()\n  });\n  const {\n    0: {\n      leftMon,\n      rightMon\n    },\n    1: setMonth\n  } = useState({\n    leftMon: month + 1,\n    rightMon: month + 2\n  });\n  const handleMonthChange = useCallback((month, year) => {\n    setDate({\n      month,\n      year\n    });\n  }, []);\n  useEffect(() => {\n    console.log('selected dates are', selectedDates);\n  }, [selectedDates]);\n  useEffect(() => {}, [month, year]);\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexFlow: 'row nowrap',\n      justifyContent: 'stretch'\n    }\n  }, __jsx(\"div\", null, leftMon), __jsx(\"div\", null, rightMon)), __jsx(DatePicker, {\n    month: month,\n    year: year,\n    onChange: setSelectedDates,\n    onMonthChange: handleMonthChange,\n    selected: selectedDates,\n    multiMonth: true,\n    allowRange: true\n  }));\n}\n\nclass DisplaySchedule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return __jsx(Card.Section, null, __jsx(\"div\", {\n      style: {\n        marginBottom: '1em',\n        fontSize: '1.1em'\n      }\n    }, \"Display schedule:\"), __jsx(Choose, null));\n  }\n\n}\n\nexport default DisplaySchedule;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\snippets\\displaySchedule.js"],"names":["Card","DatePicker","ChoiceList","useCallback","useState","useEffect","Choose","props","selected","setSelected","handleChange","value","renderDatePicker","isSelected","label","renderChildren","Schedule","month","year","setDate","selectedDates","setSelectedDates","start","Date","end","leftMon","rightMon","setMonth","handleMonthChange","console","log","display","flexFlow","justifyContent","DisplaySchedule","React","Component","constructor","state","render","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import {Card, DatePicker, ChoiceList} from '@shopify/polaris';\r\nimport {useCallback, useState, useEffect}  from 'react';\r\n\r\nfunction Choose(props){\r\n  const [selected, setSelected] = useState(['always']);\r\n\r\n  const handleChange = useCallback((value) => setSelected(value), []);\r\n\r\n  const renderDatePicker = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <Schedule />\r\n      )\r\n  )\r\n\r\n  return (\r\n    <ChoiceList\r\n      choices={[\r\n        {label: 'Always display', value: 'always'},\r\n        {label: 'Only display within the giving period of time', value: 'scheduled',renderChildren:renderDatePicker},\r\n      ]}\r\n      selected={selected}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nfunction Schedule(props){\r\n  const [{ month, year }, setDate] = useState({\r\n    month: 9,\r\n    year: 2019\r\n  });\r\n  const [selectedDates, setSelectedDates] = useState({\r\n    start: new Date(),\r\n    end: new Date()\r\n  });\r\n  const [{leftMon,rightMon},setMonth] = useState({\r\n    leftMon:month+1,\r\n    rightMon:month+2\r\n  })\r\n\r\n  const handleMonthChange = useCallback((month, year) => {\r\n    setDate({ month, year })}, []);\r\n\r\n  useEffect(()=>{\r\n    console.log('selected dates are',selectedDates)\r\n  },[selectedDates])\r\n\r\n  useEffect(()=>{\r\n\r\n  },[month, year])\r\n\r\n  return (\r\n    <div>\r\n      <div style={{display:'flex',flexFlow:'row nowrap',justifyContent:'stretch'}}>\r\n        <div>{leftMon}</div>\r\n        <div>{rightMon}</div>\r\n      </div>\r\n      <DatePicker \r\n      month={month} \r\n      year={year} \r\n      onChange={setSelectedDates} \r\n      onMonthChange={handleMonthChange} \r\n      selected={selectedDates} \r\n      multiMonth={true} \r\n      allowRange={true} \r\n    />\r\n    </div>\r\n  );\r\n}\r\n\r\nclass DisplaySchedule extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={}\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card.Section>\r\n        <div style={{marginBottom:'1em',fontSize:'1.1em'}}>Display schedule:</div>\r\n        <Choose />\r\n      </Card.Section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DisplaySchedule;"]},"metadata":{},"sourceType":"module"}