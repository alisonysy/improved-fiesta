{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Card, Collapsible, ChoiceList, TextField, Form, FormLayout } from '@shopify/polaris';\nimport { useCallback, useState, useEffect } from 'react';\nimport SelectCountries from '../snippets/selectCountries';\nimport DisplaySchedule from '../snippets/displaySchedule';\nimport SectionHead from '../snippets/sectionHead';\n\nfunction IncludePage(props) {\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(props.dspOnPage.selected && props.dspOnPage.selected.length > 0 ? props.dspOnPage.selected : ['all']);\n  const {\n    0: urlInp,\n    1: setUrlInp\n  } = useState(props.dspOnPage && props.dspOnPage.url && props.dspOnPage.url.length > 0 ? props.dspOnPage.url : '');\n  const {\n    0: urlExc,\n    1: setUrlExc\n  } = useState(props.dspOnPage && props.dspOnPage.url && props.dspOnPage.url.length > 0 ? props.dspOnPage.url : '');\n  const handleUrlInp = useCallback(value => {\n    setUrlInp(value);\n  }, []);\n  const handleUrlExc = useCallback(val => {\n    setUrlExc(val);\n  }, []);\n  const renderUrlInp = useCallback(isSelected => isSelected && __jsx(TextField, {\n    label: \"\",\n    labelHidden: true,\n    onChange: handleUrlInp,\n    value: urlInp\n  }), [handleUrlInp, urlInp]);\n  const renderPageToExc = useCallback(isSelected => isSelected && __jsx(TextField, {\n    labelHidden: true,\n    onChange: handleUrlExc,\n    value: urlExc\n  }), [handleUrlExc, urlExc]);\n  useEffect(() => {\n    let sl = selected[0];\n\n    switch (sl) {\n      case 'all':\n        props.handleDisplayOnPage('all', undefined);\n        break;\n\n      case 'homepage':\n        props.handleDisplayOnPage('home', undefined);\n        break;\n\n      case 'url':\n        props.handleDisplayOnPage('url', urlInp);\n        break;\n\n      case 'exclude':\n        props.handleDisplayOnPage('exclude', urlExc);\n        break;\n    }\n  }, [urlInp, urlExc, selected]);\n  return __jsx(FormLayout.Group, null, __jsx(ChoiceList, {\n    title: \"Display on page:\",\n    choices: [{\n      label: 'All pages',\n      value: 'all'\n    }, {\n      label: 'Homepage only',\n      value: 'homepage'\n    }, {\n      label: 'Only on page with URL',\n      value: 'url',\n      renderChildren: renderUrlInp\n    }, {\n      label: 'Pages to exclude',\n      value: 'exclude',\n      renderChildren: renderPageToExc\n    }],\n    selected: selected,\n    onChange: nw => setSelected(nw)\n  }));\n}\n\nclass TargetConfigPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectionActive: true\n    };\n  }\n\n  render() {\n    return __jsx(Card, null, __jsx(SectionHead, {\n      handleToggle: active => this.setState({\n        sectionActive: active\n      }),\n      headerTxt: \"Target configuration\",\n      sectionActive: this.state.sectionActive\n    }), __jsx(Collapsible, {\n      open: this.state.sectionActive\n    }, __jsx(FormLayout, null, __jsx(IncludePage, {\n      handleDisplayOnPage: (sec, url) => this.props.handleDisplayOnPage(sec, url),\n      dspOnPage: this.props.dspOnPage\n    }), __jsx(SelectCountries, {\n      shipsToCountries: this.props.shipsToCountries,\n      handleSelectedTargets: this.props.handleSelectedTargets,\n      selectedTargets: this.props.selectedTargets\n    }), __jsx(DisplaySchedule, {\n      handleTimeSetting: this.props.handleTimeSetting,\n      scheduleTime: this.props.scheduleTime\n    }))));\n  }\n\n}\n\nexport default TargetConfigPage;","map":{"version":3,"sources":["C:\\Users\\Administrator.SC-201903211547\\projects\\0919\\sample-embedded-app\\components\\targetConfig.js"],"names":["Card","Collapsible","ChoiceList","TextField","Form","FormLayout","useCallback","useState","useEffect","SelectCountries","DisplaySchedule","SectionHead","IncludePage","props","selected","setSelected","dspOnPage","length","urlInp","setUrlInp","url","urlExc","setUrlExc","handleUrlInp","value","handleUrlExc","val","renderUrlInp","isSelected","renderPageToExc","sl","handleDisplayOnPage","undefined","label","renderChildren","nw","TargetConfigPage","React","Component","constructor","state","sectionActive","render","active","setState","sec","shipsToCountries","handleSelectedTargets","selectedTargets","handleTimeSetting","scheduleTime"],"mappings":"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","sourcesContent":["import { Card, Collapsible, ChoiceList, TextField,Form, FormLayout } from '@shopify/polaris';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport SelectCountries from '../snippets/selectCountries';\r\nimport DisplaySchedule from '../snippets/displaySchedule';\r\nimport SectionHead from '../snippets/sectionHead';\r\n\r\nfunction IncludePage(props) {\r\n  const [selected, setSelected] = useState(\r\n    props.dspOnPage.selected && props.dspOnPage.selected.length >0?\r\n      props.dspOnPage.selected\r\n      :\r\n      ['all']\r\n    );\r\n  const [urlInp, setUrlInp] = useState(\r\n    props.dspOnPage && props.dspOnPage.url && props.dspOnPage.url.length > 0?\r\n      props.dspOnPage.url\r\n      :\r\n      ''\r\n    );\r\n  const [urlExc, setUrlExc] = useState(\r\n    props.dspOnPage && props.dspOnPage.url && props.dspOnPage.url.length > 0?\r\n      props.dspOnPage.url\r\n      :\r\n      ''\r\n    );\r\n\r\n  const handleUrlInp = useCallback(\r\n    (value) => {\r\n      setUrlInp(value);\r\n    },\r\n    [],\r\n  );\r\n  const handleUrlExc = useCallback(\r\n    (val) => {\r\n      setUrlExc(val);\r\n    },\r\n    []\r\n  );\r\n\r\n  const renderUrlInp = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField\r\n          label=\"\"\r\n          labelHidden\r\n          onChange={handleUrlInp}\r\n          value={urlInp}\r\n        />\r\n      ),\r\n    [handleUrlInp, urlInp],\r\n  );\r\n\r\n  const renderPageToExc = useCallback(\r\n    (isSelected) =>\r\n      isSelected && (\r\n        <TextField \r\n          labelHidden\r\n          onChange={handleUrlExc}\r\n          value={urlExc}\r\n        />\r\n      ),\r\n    [handleUrlExc, urlExc]\r\n  )\r\n\r\n  useEffect(()=>{\r\n    let sl = selected[0];\r\n    switch(sl){\r\n      case 'all':\r\n        props.handleDisplayOnPage('all',undefined);\r\n        break;\r\n      case 'homepage':\r\n        props.handleDisplayOnPage('home',undefined);\r\n        break;\r\n      case 'url':\r\n        props.handleDisplayOnPage('url',urlInp);\r\n        break;\r\n      case 'exclude':\r\n        props.handleDisplayOnPage('exclude',urlExc);\r\n        break;\r\n    }\r\n  },[urlInp,urlExc,selected])\r\n\r\n  return (\r\n    <FormLayout.Group>\r\n      <ChoiceList\r\n        title=\"Display on page:\"\r\n        choices={[\r\n          {label: 'All pages', value: 'all'},\r\n          {label: 'Homepage only', value: 'homepage'},\r\n          {label: 'Only on page with URL', value: 'url',renderChildren:renderUrlInp},\r\n          {label:'Pages to exclude',value:'exclude',renderChildren:renderPageToExc}\r\n        ]}\r\n        selected={selected}\r\n        onChange={(nw) => setSelected(nw)}\r\n      />\r\n    </FormLayout.Group>\r\n  );\r\n}\r\n\r\nclass TargetConfigPage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sectionActive:true,\r\n    };\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Card>\r\n        <SectionHead \r\n          handleToggle={(active) => this.setState({sectionActive:active})}\r\n          headerTxt=\"Target configuration\"\r\n          sectionActive={this.state.sectionActive}\r\n        />\r\n        <Collapsible open={this.state.sectionActive} >\r\n          <FormLayout> \r\n            <IncludePage \r\n              handleDisplayOnPage={(sec,url)=> this.props.handleDisplayOnPage(sec,url)}\r\n              dspOnPage={this.props.dspOnPage}\r\n            />\r\n            <SelectCountries \r\n              shipsToCountries={this.props.shipsToCountries} \r\n              handleSelectedTargets={this.props.handleSelectedTargets}\r\n              selectedTargets={this.props.selectedTargets}\r\n            />\r\n            <DisplaySchedule \r\n              handleTimeSetting={this.props.handleTimeSetting}\r\n              scheduleTime={this.props.scheduleTime}\r\n            />\r\n          </FormLayout>\r\n        </Collapsible>  \r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TargetConfigPage;"]},"metadata":{},"sourceType":"module"}